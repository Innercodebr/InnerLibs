<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class HtmlNodeCollection
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class HtmlNodeCollection
   ">
    <meta name="generator" content="docfx 2.37.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection">
  
  
  <h1 id="InnerLibs_HtmlParser_HtmlNodeCollection" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection" class="text-break">Class HtmlNodeCollection
  </h1>
  <div class="markdown level0 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="4">This object represents a collection of HtmlNodes, which can be either HtmlText or HtmlElement
objects. The order in which the nodes occur directly corresponds to the order in which they
appear in the original HTML document.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div class="level2"><span class="xref">HtmlNodeCollection</span></div>
  </div>
  <div classs="implements">
    <h5>Implements</h5>
    <div><span class="xref">System.Collections.Generic.IList</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.ICollection</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div><span class="xref">System.Collections.IList</span></div>
    <div><span class="xref">System.Collections.ICollection</span></div>
    <div><span class="xref">System.Collections.Generic.IReadOnlyList</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.IReadOnlyCollection</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</div>
    <div><span class="xref">System.Collections.IEnumerable</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.Add(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.AsReadOnly()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.BinarySearch(System.Int32, System.Int32, InnerLibs.HtmlParser.HtmlNode, System.Collections.Generic.IComparer&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.BinarySearch(InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.BinarySearch(InnerLibs.HtmlParser.HtmlNode, System.Collections.Generic.IComparer&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Clear()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Contains(InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.Contains(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.ConvertAll&lt;TOutput&gt;(System.Converter&lt;InnerLibs.HtmlParser.HtmlNode, TOutput&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.CopyTo(InnerLibs.HtmlParser.HtmlNode[])</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.ICollection.CopyTo(System.Array, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.CopyTo(System.Int32, InnerLibs.HtmlParser.HtmlNode[], System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.CopyTo(InnerLibs.HtmlParser.HtmlNode[], System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Exists(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Find(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindAll(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindIndex(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindIndex(System.Int32, System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindIndex(System.Int32, System.Int32, System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindLast(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindLastIndex(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindLastIndex(System.Int32, System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.FindLastIndex(System.Int32, System.Int32, System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.ForEach(System.Action&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.Generic.IEnumerable&lt;InnerLibs.HtmlParser.HtmlNode&gt;.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IEnumerable.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.GetRange(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.IndexOf(InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.IndexOf(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.IndexOf(InnerLibs.HtmlParser.HtmlNode, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.IndexOf(InnerLibs.HtmlParser.HtmlNode, System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Insert(System.Int32, InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.Insert(System.Int32, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.InsertRange(System.Int32, System.Collections.Generic.IEnumerable&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.LastIndexOf(InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.LastIndexOf(InnerLibs.HtmlParser.HtmlNode, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.LastIndexOf(InnerLibs.HtmlParser.HtmlNode, System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Remove(InnerLibs.HtmlParser.HtmlNode)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.Remove(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.RemoveAll(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.RemoveAt(System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.RemoveRange(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Reverse()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Reverse(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Sort()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Sort(System.Collections.Generic.IComparer&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Sort(System.Comparison&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.ToArray()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.TrimExcess()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.TrueForAll(System.Predicate&lt;InnerLibs.HtmlParser.HtmlNode&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Capacity</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Count</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.IsFixedSize</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.Generic.ICollection&lt;InnerLibs.HtmlParser.HtmlNode&gt;.IsReadOnly</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.IList.IsReadOnly</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.ICollection.IsSynchronized</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.System.Collections.ICollection.SyncRoot</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.HtmlParser.HtmlNode&gt;.Item[System.Int32]</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.Finalize()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InnerLibs.HtmlParser.html">InnerLibs.HtmlParser</a></h6>
  <h6><strong>Assembly</strong>: InnerLibs.dll</h6>
  <h5 id="InnerLibs_HtmlParser_HtmlNodeCollection_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class HtmlNodeCollection : List&lt;HtmlNode&gt;, IList&lt;HtmlNode&gt;, ICollection&lt;HtmlNode&gt;, IList, ICollection, IReadOnlyList&lt;HtmlNode&gt;, IReadOnlyCollection&lt;HtmlNode&gt;, IEnumerable&lt;HtmlNode&gt;, IEnumerable</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection__ctor_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection__ctor" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.#ctor">HtmlNodeCollection()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Create an abstract collection of nodes thats don&apos;t changes the parent node property</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection()</code></pre>
  </div>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Item_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Item*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Item_System_String_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Item(System.String)">Item[String]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return elements thats match the current CSS selector</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection this[string CssSelector] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">CSS selector</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_InnerLibs_HtmlParser_HtmlNode_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add(InnerLibs.HtmlParser.HtmlNode)">Add(HtmlNode)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a Node to colleciton</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Add(HtmlNode Node)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a></td>
        <td><span class="parametername">Node</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_InnerLibs_HtmlParser_HtmlNode___" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add(InnerLibs.HtmlParser.HtmlNode[])">Add(HtmlNode[])</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Add(params HtmlNode[] Nodes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>[]</td>
        <td><span class="parametername">Nodes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_System_String_System_Int32_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add(System.String,System.Int32)">Add(String, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add node (or nodes) to collection from string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Add(string Html, int Index = 0)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Html</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Add_System_Web_UI_HtmlControls_HtmlGenericControl_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Add(System.Web.UI.HtmlControls.HtmlGenericControl)">Add(HtmlGenericControl)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a Node to colleciton</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Add(HtmlGenericControl Control)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlGenericControl</span></td>
        <td><span class="parametername">Control</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Do_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Do*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Do_System_Action_InnerLibs_HtmlParser_HtmlNode__" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Do(System.Action{InnerLibs.HtmlParser.HtmlNode})">Do(Action&lt;HtmlNode&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Perform an action on each node and returns the same list</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection Do(Action&lt;HtmlNode&gt; action)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</td>
        <td><span class="parametername">action</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_FindElements_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.FindElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_FindElements__1" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.FindElements``1">FindElements&lt;NodeType&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return all elements and child elements in a single list of NodeType</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection FindElements&lt;NodeType&gt;()
    where NodeType : HtmlNode</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">NodeType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_FindElements_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.FindElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_FindElements__1_System_Func___0_System_Boolean__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)">FindElements&lt;NodeType&gt;(Func&lt;NodeType, Boolean&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will search though this collection of nodes for all elements with matchs the predicate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection FindElements&lt;NodeType&gt;(Func&lt;NodeType, bool&gt; predicate, bool SearchChildren = true)
    where NodeType : HtmlNode</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;NodeType, <span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">predicate</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The predicate to match the nodes</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Travesse the child nodes</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">NodeType</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of Node ( <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> or <a class="xref" href="InnerLibs.HtmlParser.HtmlText.html">HtmlText</a>)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElements_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElements" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElements">GetElements()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return only <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> from this <a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;HtmlElement&gt; GetElements()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByAttributeName_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByAttributeName*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByAttributeName_System_String_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByAttributeName(System.String,System.Boolean)">GetElementsByAttributeName(String, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="3">This will search though this collection of nodes for all elements with the an attribute
with the given name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection GetElementsByAttributeName(string AttributeName, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">AttributeName</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">True if you want to search sub-nodes, False to only search this collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A collection of all the nodes that macth.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByAttributeNameValue_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByAttributeNameValue*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByAttributeNameValue_System_String_System_String_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByAttributeNameValue(System.String,System.String,System.Boolean)">GetElementsByAttributeNameValue(String, String, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="3">This will search though this collection of nodes for all elements with the an attribute
with the given name and value.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection GetElementsByAttributeNameValue(string AttributeName, string AttributeValue, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">AttributeName</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">AttributeValue</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A collection of all the nodes that macth.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByTagName_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByTagName*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_GetElementsByTagName_System_String_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.GetElementsByTagName(System.String,System.Boolean)">GetElementsByTagName(String, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="5">This will search though this collection of nodes for all elements with the specified
name. If you want to search the subnodes recursively, you should pass True as the
parameter in SearchChildren. This search is guaranteed to return nodes in the order in
which they are found in the document.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection GetElementsByTagName(string Name, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">True if you want to search sub-nodes, False to only search this collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A collection of all the nodes that macth.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_System_Int32_InnerLibs_HtmlParser_HtmlNode___" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert(System.Int32,InnerLibs.HtmlParser.HtmlNode[])">Insert(Int32, HtmlNode[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Insert a element in specific index</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Insert(int Index, params HtmlNode[] Nodes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>[]</td>
        <td><span class="parametername">Nodes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_System_Int32_InnerLibs_HtmlParser_HtmlNodeCollection_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert(System.Int32,InnerLibs.HtmlParser.HtmlNodeCollection)">Insert(Int32, HtmlNodeCollection)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Insert a element in specific index</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Insert(int Index, HtmlNodeCollection Nodes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><span class="parametername">Nodes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_Insert_System_Int32_System_String_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.Insert(System.Int32,System.String)">Insert(Int32, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Insert a element in specific index</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Insert(int Index, string Nodes)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Nodes</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_ReplaceElement_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ReplaceElement*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_ReplaceElement_InnerLibs_HtmlParser_HtmlNode_System_Collections_Generic_IEnumerable_InnerLibs_HtmlParser_HtmlNode__" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ReplaceElement(InnerLibs.HtmlParser.HtmlNode,System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlNode})">ReplaceElement(HtmlNode, IEnumerable&lt;HtmlNode&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Replace a element into another set of elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ReplaceElement(HtmlNode Element, IEnumerable&lt;HtmlNode&gt; Items)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a></td>
        <td><span class="parametername">Element</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>&gt;</td>
        <td><span class="parametername">Items</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_ReplaceElement_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ReplaceElement*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_ReplaceElement_InnerLibs_HtmlParser_HtmlNode_System_String_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ReplaceElement(InnerLibs.HtmlParser.HtmlNode,System.String)">ReplaceElement(HtmlNode, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Replace a element into another set of elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ReplaceElement(HtmlNode Element, string Html)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a></td>
        <td><span class="parametername">Element</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Html</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlNodeCollection_ToString_" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ToString*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlNodeCollection_ToString" data-uid="InnerLibs.HtmlParser.HtmlNodeCollection.ToString">ToString()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlNodeCollection.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retuns all html text from this collection</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ToString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">System.Object.ToString()</span></div>
  <h3 id="implements">Implements</h3>
  <div>
      <span class="xref">System.Collections.Generic.IList&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.ICollection&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.IList</span>
  </div>
  <div>
      <span class="xref">System.Collections.ICollection</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IReadOnlyList&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IEnumerable&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.IEnumerable</span>
  </div>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ContainsAll__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.ContainsAll&lt;Type&gt;(IEnumerable&lt;Type&gt;, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ContainsAny__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.ContainsAny&lt;Type&gt;(IEnumerable&lt;Type&gt;, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_CreateDictionary__1___0_">ClassTools.CreateDictionary&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_DistinctCount__1_System_Collections_Generic_IEnumerable___0__">ClassTools.DistinctCount&lt;Type&gt;(IEnumerable&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_FirstOr__1_System_Collections_Generic_IEnumerable___0____0_">ClassTools.FirstOr&lt;T&gt;(IEnumerable&lt;T&gt;, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_System_Reflection_BindingFlags_">ClassTools.GetProperties(Object, BindingFlags)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_">ClassTools.GetProperties(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Type_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Type, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue__1_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue&lt;Type&gt;(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_HasProperty_System_Object_System_String_">ClassTools.HasProperty(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsArrayOf__1_System_Object_">ClassTools.IsArrayOf&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsDictionary_System_Object_">ClassTools.IsDictionary(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsInAny__1___0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsInAny&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;[], IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsList_System_Object_">ClassTools.IsList(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsNotIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsNotIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsType__1_System_Object_">ClassTools.IsType&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_LastOr__1_System_Collections_Generic_IEnumerable___0____0_">ClassTools.LastOr&lt;T&gt;(IEnumerable&lt;T&gt;, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1___0___0___">ClassTools.NullCoalesce&lt;T&gt;(T, T[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1_System_Collections_Generic_IEnumerable___0__">ClassTools.NullCoalesce&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullifyProperties__1___0_">ClassTools.NullifyProperties&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValue__1_System_Object_System_String___0_">ClassTools.SetPropertyValue&lt;Type&gt;(Object, String, Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValueFromCollection__1_System_Object_System_String_System_Collections_CollectionBase_">ClassTools.SetPropertyValueFromCollection&lt;Type&gt;(Object, String, CollectionBase)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ToFlatString_System_Object_System_String_">ClassTools.ToFlatString(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.DataManipulation.html#InnerLibs_DataManipulation_GetDbType_System_Object_">DataManipulation.GetDbType(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_DefineEmptyList__1___0_">Converter.DefineEmptyList&lt;T&gt;(T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_ChangeType__2___1_">Converter.ChangeType&lt;ToType, FromType&gt;(FromType)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.JsonViewer.html#InnerLibs_JsonViewer_CreateNode_System_Object_">JsonViewer.CreateNode(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_CalculatePercent__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__">Mathematic.CalculatePercent&lt;TObject, TKey, TValue&gt;(IEnumerable&lt;TObject&gt;, Func&lt;TObject, TKey&gt;, Func&lt;TObject, TValue&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_CalculatePercent__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__">Mathematic.CalculatePercent&lt;Tobject, Tvalue&gt;(IEnumerable&lt;Tobject&gt;, Func&lt;Tobject, Tvalue&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_">Mathematic.IsBetween&lt;Type&gt;(Type, Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_GetRandomItem__1_System_Collections_Generic_List___0__">Text.GetRandomItem&lt;Type&gt;(List&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Join__1_System_Collections_Generic_IEnumerable___0__System_String_">Text.Join&lt;Type&gt;(IEnumerable&lt;Type&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Join__1_System_Collections_Generic_List___0__System_String_">Text.Join&lt;Type&gt;(List&lt;Type&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_SerializeJSON_System_Object_System_String_">Text.SerializeJSON(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Shuffle__1_System_Collections_Generic_List___0___">Text.Shuffle&lt;Type&gt;(ref List&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_ToHtmlList__1_System_Collections_Generic_IEnumerable___0__System_Boolean_">Text.ToHtmlList&lt;T&gt;(IEnumerable&lt;T&gt;, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNumber_System_Object_">Verify.IsNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNotNumber_System_Object_">Verify.IsNotNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfNoIndex__1_System_Collections_Generic_IEnumerable___0__System_Int32___0_">Verify.IfNoIndex&lt;T&gt;(IEnumerable&lt;T&gt;, Int32, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlankOrNoIndex__1_System_Collections_Generic_IEnumerable___0__System_Int32___0_">Verify.IfBlankOrNoIndex&lt;T&gt;(IEnumerable&lt;T&gt;, Int32, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlank__1_System_Object___0_">Verify.IfBlank&lt;T&gt;(Object, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0_System_Func___0_System_Boolean__">Verify.NullIf&lt;T&gt;(T, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0___0_">Verify.NullIf&lt;T&gt;(T, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsEmpty__1_System_Collections_Generic_IEnumerable___0__">Verify.IsEmpty&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_CreateFromAjax__1___0__System_String_System_String_System_Collections_Specialized_NameValueCollection_System_String_System_Text_Encoding_">Web.CreateFromAjax&lt;Type&gt;(ref Type, String, String, NameValueCollection, String, Encoding)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_AsListItem__3___0_System_Func___0___1__System_Func___0___2__">Web.AsListItem&lt;T, TextType, ValueType&gt;(T, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_ToListItems__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Func___0_System_Boolean__">Web.ToListItems&lt;T, TextType, ValueType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_ToListItems__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2____2___">Web.ToListItems&lt;T, TextType, ValueType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;, ValueType[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_GetCastedValue_System_Object_">WinForms.GetCastedValue(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_CastValueForControl_System_Object__System_Object_">WinForms.CastValueForControl(ref Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ApplyToControls__1___0_System_Web_UI_HtmlControls_HtmlControl___">LINQExtensions.ApplyToControls&lt;T&gt;(T, HtmlControl[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_DistinctBy__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Boolean_">LINQExtensions.DistinctBy&lt;T, TKey, TOrder&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TKey&gt;, Func&lt;T, TOrder&gt;, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_DistinctBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__">LINQExtensions.DistinctBy&lt;T, TKey&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TKey&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__">LINQExtensions.ForEach&lt;T&gt;(IEnumerable&lt;T&gt;, Action&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_GroupByPage__1_System_Collections_Generic_IEnumerable___0__System_Int32_">LINQExtensions.GroupByPage&lt;Tsource&gt;(IEnumerable&lt;Tsource&gt;, Int32)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_HasSamePropertyValues__1___0___0_System_Func___0_System_Object____">LINQExtensions.HasSamePropertyValues&lt;T&gt;(T, T, Func&lt;T, Object&gt;[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_OrderByLike__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_String__System_Boolean_System_String___">LINQExtensions.OrderByLike&lt;T&gt;(IEnumerable&lt;T&gt;, Func&lt;T, String&gt;, Boolean, String[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_OrderByRandom__1_System_Collections_Generic_IEnumerable___0__">LINQExtensions.OrderByRandom&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_Page__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_Int32_">LINQExtensions.Page&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32, Int32)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_SelectJoin__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_String__System_String_">LINQExtensions.SelectJoin&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, String&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_SelectManyJoin__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Collections_Generic_IEnumerable_System_String___System_String_">LINQExtensions.SelectManyJoin&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;String&gt;&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_TakeAndOrder__2_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_Func___0___1__">LINQExtensions.TakeAndOrder&lt;T, DefaultOrderType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, Boolean&gt;, Func&lt;T, DefaultOrderType&gt;)</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
