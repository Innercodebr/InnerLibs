<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class HtmlDocument
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class HtmlDocument
   ">
    <meta name="generator" content="docfx 2.37.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InnerLibs.HtmlParser.HtmlDocument">
  
  
  <h1 id="InnerLibs_HtmlParser_HtmlDocument" data-uid="InnerLibs.HtmlParser.HtmlDocument" class="text-break">Class HtmlDocument
  </h1>
  <div class="markdown level0 summary"><p>This is the basic HTML document object used to represent a sequence of HTML.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">HtmlDocument</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.Finalize()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InnerLibs.HtmlParser.html">InnerLibs.HtmlParser</a></h6>
  <h6><strong>Assembly</strong>: InnerLibs.dll</h6>
  <h5 id="InnerLibs_HtmlParser_HtmlDocument_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class HtmlDocument</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument__ctor_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument__ctor_System_Byte___System_Text_Encoding_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor(System.Byte[],System.Text.Encoding)">HtmlDocument(Byte[], Encoding)</h4>
  <div class="markdown level1 summary"><p>This will create a new document object direct from Byte Array.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlDocument(byte[] Content, Encoding Encoding = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Byte</span>[]</td>
        <td><span class="parametername">Content</span></td>
        <td><p>The byte array with URL or HTML to parse.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Text.Encoding</span></td>
        <td><span class="parametername">Encoding</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument__ctor_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument__ctor_System_String_System_Text_Encoding_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor(System.String,System.Text.Encoding)">HtmlDocument(String, Encoding)</h4>
  <div class="markdown level1 summary"><p>This will create a new document object by parsing the HTML specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlDocument(string UrlOrHTMLString = null, Encoding Encoding = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">UrlOrHTMLString</span></td>
        <td><p>The URL or HTML to parse.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Text.Encoding</span></td>
        <td><span class="parametername">Encoding</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument__ctor_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument__ctor_System_Xml_Linq_XNode_System_Text_Encoding_" data-uid="InnerLibs.HtmlParser.HtmlDocument.#ctor(System.Xml.Linq.XNode,System.Text.Encoding)">HtmlDocument(XNode, Encoding)</h4>
  <div class="markdown level1 summary"><p>This will create a new document object by parsing the HTML specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlDocument(XNode Source, Encoding Encoding = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Xml.Linq.XNode</span></td>
        <td><span class="parametername">Source</span></td>
        <td><p>The HTML Source as Xnode.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Text.Encoding</span></td>
        <td><span class="parametername">Encoding</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="fields">Fields
  </h3>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_Html5Structure" data-uid="InnerLibs.HtmlParser.HtmlDocument.Html5Structure">Html5Structure</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string Html5Structure = &quot;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=UTF-8\&quot; /&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_Body_" data-uid="InnerLibs.HtmlParser.HtmlDocument.Body*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_Body" data-uid="InnerLibs.HtmlParser.HtmlDocument.Body">Body</h4>
  <div class="markdown level1 summary"><p>Return the body element if exist </p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement Body { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_DocTypeXHTML_" data-uid="InnerLibs.HtmlParser.HtmlDocument.DocTypeXHTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_DocTypeXHTML" data-uid="InnerLibs.HtmlParser.HtmlDocument.DocTypeXHTML">DocTypeXHTML</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string DocTypeXHTML { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_Encoding_" data-uid="InnerLibs.HtmlParser.HtmlDocument.Encoding*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_Encoding" data-uid="InnerLibs.HtmlParser.HtmlDocument.Encoding">Encoding</h4>
  <div class="markdown level1 summary"><p>The Encoding used to export this document as file</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Encoding Encoding { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Text.Encoding</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_Head_" data-uid="InnerLibs.HtmlParser.HtmlDocument.Head*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_Head" data-uid="InnerLibs.HtmlParser.HtmlDocument.Head">Head</h4>
  <div class="markdown level1 summary"><p>Return the Head element if exist </p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement Head { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_HTML_" data-uid="InnerLibs.HtmlParser.HtmlDocument.HTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_HTML" data-uid="InnerLibs.HtmlParser.HtmlDocument.HTML">HTML</h4>
  <div class="markdown level1 summary"><p>This will return the HTML used to represent this document.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string HTML { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_InnerHTML_" data-uid="InnerLibs.HtmlParser.HtmlDocument.InnerHTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_InnerHTML" data-uid="InnerLibs.HtmlParser.HtmlDocument.InnerHTML">InnerHTML</h4>
  <div class="markdown level1 summary"><p>Return a html string of child nodes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string InnerHTML { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_InnerText_" data-uid="InnerLibs.HtmlParser.HtmlDocument.InnerText*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_InnerText" data-uid="InnerLibs.HtmlParser.HtmlDocument.InnerText">InnerText</h4>
  <div class="markdown level1 summary"><p>Returns the text of all child nodes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string InnerText { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_Nodes_" data-uid="InnerLibs.HtmlParser.HtmlDocument.Nodes*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_Nodes" data-uid="InnerLibs.HtmlParser.HtmlDocument.Nodes">Nodes</h4>
  <div class="markdown level1 summary"><p>This is the collection of nodes used to represent this document.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection Nodes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_QuerySelectorAll_" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelectorAll*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_QuerySelectorAll_System_String_" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelectorAll(System.String)">QuerySelectorAll[String]</h4>
  <div class="markdown level1 summary"><p>Travesse DOM with a CSS selector an retireve nodes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection this[string CssSelector] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td><p>Teh CSS selector</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><p>The <a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a> with matched elements</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_QuerySelectorAll_" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelectorAll*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_QuerySelectorAll_System_String_System_Action_InnerLibs_HtmlParser_HtmlElement____" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelectorAll(System.String,System.Action{InnerLibs.HtmlParser.HtmlElement}[])">QuerySelectorAll[String, Action&lt;HtmlElement&gt;[]]</h4>
  <div class="markdown level1 summary"><p>Execute an <span class="xref">System.Action</span> for each <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> matched with <code data-dev-comment-type="paramref" class="paramref">CssSelector</code></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection this[string CssSelector, params Action&lt;HtmlElement&gt;[] Actions] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td><p>The CSS Selector</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Action</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a>&gt;[]</td>
        <td><span class="parametername">Actions</span></td>
        <td><p>Actions</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><p>The <a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a> with matched elements</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_XHTML_" data-uid="InnerLibs.HtmlParser.HtmlDocument.XHTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_XHTML" data-uid="InnerLibs.HtmlParser.HtmlDocument.XHTML">XHTML</h4>
  <div class="markdown level1 summary"><p>This will return the XHTML document used to represent this document.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string XHTML { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_CopyTo_" data-uid="InnerLibs.HtmlParser.HtmlDocument.CopyTo*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_CopyTo_System_IO_Stream__" data-uid="InnerLibs.HtmlParser.HtmlDocument.CopyTo(System.IO.Stream@)">CopyTo(ref Stream)</h4>
  <div class="markdown level1 summary"><p>Copy this document to stream</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void CopyTo(ref Stream s)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.IO.Stream</span></td>
        <td><span class="parametername">s</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_FindElements_" data-uid="InnerLibs.HtmlParser.HtmlDocument.FindElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_FindElements__1_System_Func___0_System_Boolean__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlDocument.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)">FindElements&lt;NodeType&gt;(Func&lt;NodeType, Boolean&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p>This will search though this collection of nodes for all elements with matchs the predicate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection FindElements&lt;NodeType&gt;(Func&lt;NodeType, bool&gt; predicate = null, bool SearchChildren = true)
    where NodeType : HtmlNode</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;NodeType, <span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">predicate</span></td>
        <td><p>The predicate to match the nodes</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td><p>Travesse the child nodes</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">NodeType</span></td>
        <td><p>Type of Node (<a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> or <a class="xref" href="InnerLibs.HtmlParser.HtmlText.html">HtmlText</a>)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_FixText_" data-uid="InnerLibs.HtmlParser.HtmlDocument.FixText*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_FixText" data-uid="InnerLibs.HtmlParser.HtmlDocument.FixText">FixText()</h4>
  <div class="markdown level1 summary"><p>Fix the captalization, white spaces and punctuation of text elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void FixText()</code></pre>
  </div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_GetBytes_" data-uid="InnerLibs.HtmlParser.HtmlDocument.GetBytes*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_GetBytes" data-uid="InnerLibs.HtmlParser.HtmlDocument.GetBytes">GetBytes()</h4>
  <div class="markdown level1 summary"><p>Return the byte array for this document</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public byte[] GetBytes()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Byte</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_GetTextElements_" data-uid="InnerLibs.HtmlParser.HtmlDocument.GetTextElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_GetTextElements_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlDocument.GetTextElements(System.Boolean)">GetTextElements(Boolean)</h4>
  <div class="markdown level1 summary"><p>Returns all Text elements excluding style and script elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection GetTextElements(bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_LoadInto_" data-uid="InnerLibs.HtmlParser.HtmlDocument.LoadInto*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_LoadInto_System_Windows_Forms_TreeView__" data-uid="InnerLibs.HtmlParser.HtmlDocument.LoadInto(System.Windows.Forms.TreeView@)">LoadInto(ref TreeView)</h4>
  <div class="markdown level1 summary"><p>Load the nodes of document in <span class="xref">System.Windows.Forms.TreeView</span> control</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void LoadInto(ref TreeView TreeView)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.TreeView</span></td>
        <td><span class="parametername">TreeView</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_LoadInto_" data-uid="InnerLibs.HtmlParser.HtmlDocument.LoadInto*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_LoadInto_System_Windows_Forms_WebBrowser__" data-uid="InnerLibs.HtmlParser.HtmlDocument.LoadInto(System.Windows.Forms.WebBrowser@)">LoadInto(ref WebBrowser)</h4>
  <div class="markdown level1 summary"><p>Load the document in <span class="xref">System.Windows.Forms.WebBrowser</span> control</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void LoadInto(ref WebBrowser WebBrowser)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.WebBrowser</span></td>
        <td><span class="parametername">WebBrowser</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_MinifyCSS_" data-uid="InnerLibs.HtmlParser.HtmlDocument.MinifyCSS*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_MinifyCSS" data-uid="InnerLibs.HtmlParser.HtmlDocument.MinifyCSS">MinifyCSS()</h4>
  <div class="markdown level1 summary"><p>Merge all STYLE tags and minify it</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void MinifyCSS()</code></pre>
  </div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_QuerySelector_" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelector*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_QuerySelector_System_String_" data-uid="InnerLibs.HtmlParser.HtmlDocument.QuerySelector(System.String)">QuerySelector(String)</h4>
  <div class="markdown level1 summary"><p>Travesse DOM with a CSS selector an retireve the first node</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement QuerySelector(string CssSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td><p>Teh CSS selector</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td><p>The <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> matched</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_SaveAs_" data-uid="InnerLibs.HtmlParser.HtmlDocument.SaveAs*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_SaveAs_System_IO_FileInfo_" data-uid="InnerLibs.HtmlParser.HtmlDocument.SaveAs(System.IO.FileInfo)">SaveAs(FileInfo)</h4>
  <div class="markdown level1 summary"><p>Save the document as file</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FileInfo SaveAs(FileInfo File)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.IO.FileInfo</span></td>
        <td><span class="parametername">File</span></td>
        <td><p>File</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.IO.FileInfo</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_SaveAs_" data-uid="InnerLibs.HtmlParser.HtmlDocument.SaveAs*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_SaveAs_System_String_" data-uid="InnerLibs.HtmlParser.HtmlDocument.SaveAs(System.String)">SaveAs(String)</h4>
  <div class="markdown level1 summary"><p>Save the document as file</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public FileInfo SaveAs(string FileName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">FileName</span></td>
        <td><p>Filename</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.IO.FileInfo</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_ToJSON_" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToJSON*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_ToJSON" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToJSON">ToJSON()</h4>
  <div class="markdown level1 summary"><p>Return a Json representation of this element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToJSON()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_ToString_" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToString*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_ToString" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToString">ToString()</h4>
  <div class="markdown level1 summary"><p>Return the HTML of this document</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ToString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">System.Object.ToString()</span></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlDocument_ToXmlDocument_" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToXmlDocument*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlDocument_ToXmlDocument" data-uid="InnerLibs.HtmlParser.HtmlDocument.ToXmlDocument">ToXmlDocument()</h4>
  <div class="markdown level1 summary"><p>Return the <span class="xref">System.Xml.XmlDocument</span> equivalent to this document</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public XmlDocument ToXmlDocument()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Xml.XmlDocument</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_CreateDictionary__1___0_">ClassTools.CreateDictionary&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_System_Reflection_BindingFlags_">ClassTools.GetProperties(Object, BindingFlags)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_">ClassTools.GetProperties(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Type_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Type, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue__1_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue&lt;Type&gt;(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_HasProperty_System_Object_System_String_">ClassTools.HasProperty(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsArrayOf__1_System_Object_">ClassTools.IsArrayOf&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsDictionary_System_Object_">ClassTools.IsDictionary(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsInAny__1___0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsInAny&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;[], IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsList_System_Object_">ClassTools.IsList(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsNotIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsNotIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsType__1_System_Object_">ClassTools.IsType&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1___0___0___">ClassTools.NullCoalesce&lt;T&gt;(T, T[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullifyProperties__1___0_">ClassTools.NullifyProperties&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValue__1_System_Object_System_String___0_">ClassTools.SetPropertyValue&lt;Type&gt;(Object, String, Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValueFromCollection__1_System_Object_System_String_System_Collections_CollectionBase_">ClassTools.SetPropertyValueFromCollection&lt;Type&gt;(Object, String, CollectionBase)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ToFlatString_System_Object_System_String_">ClassTools.ToFlatString(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.DataManipulation.html#InnerLibs_DataManipulation_GetDbType_System_Object_">DataManipulation.GetDbType(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_DefineEmptyList__1___0_">Converter.DefineEmptyList&lt;T&gt;(T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_ChangeType__2___1_">Converter.ChangeType&lt;ToType, FromType&gt;(FromType)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.JsonViewer.html#InnerLibs_JsonViewer_CreateNode_System_Object_">JsonViewer.CreateNode(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_">Mathematic.IsBetween&lt;Type&gt;(Type, Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_SerializeJSON_System_Object_System_String_">Text.SerializeJSON(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNumber_System_Object_">Verify.IsNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNotNumber_System_Object_">Verify.IsNotNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlank__1_System_Object___0_">Verify.IfBlank&lt;T&gt;(Object, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0_System_Func___0_System_Boolean__">Verify.NullIf&lt;T&gt;(T, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0___0_">Verify.NullIf&lt;T&gt;(T, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_CreateFromAjax__1___0__System_String_System_String_System_Collections_Specialized_NameValueCollection_System_String_System_Text_Encoding_">Web.CreateFromAjax&lt;Type&gt;(ref Type, String, String, NameValueCollection, String, Encoding)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_AsListItem__3___0_System_Func___0___1__System_Func___0___2__">Web.AsListItem&lt;T, TextType, ValueType&gt;(T, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_GetCastedValue_System_Object_">WinForms.GetCastedValue(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_CastValueForControl_System_Object__System_Object_">WinForms.CastValueForControl(ref Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ApplyToControls__1___0_System_Web_UI_HtmlControls_HtmlControl___">LINQExtensions.ApplyToControls&lt;T&gt;(T, HtmlControl[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_HasSamePropertyValues__1___0___0_System_Func___0_System_Object____">LINQExtensions.HasSamePropertyValues&lt;T&gt;(T, T, Func&lt;T, Object&gt;[])</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
