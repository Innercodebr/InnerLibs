<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class DataBase.Reader
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class DataBase.Reader
   ">
    <meta name="generator" content="docfx 2.37.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InnerLibs.DataBase.Reader">
  
  
  <h1 id="InnerLibs_DataBase_Reader" data-uid="InnerLibs.DataBase.Reader" class="text-break">Class DataBase.Reader
  </h1>
  <div class="markdown level0 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Estrutura que imita um <span class="xref">System.Data.Common.DbDataReader</span> usando <span class="xref">System.Collections.Generic.List&lt;T&gt;</span> de  <span class="xref">System.Collections.Generic.Dictionary&lt;TKey, TValue&gt;</span>. Permite a leitura
releitura, atribuição e serialização mesmo após o fechamento da conexão.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div class="level2"><span class="xref">DataBase.Reader</span></div>
  </div>
  <div classs="implements">
    <h5>Implements</h5>
    <div><span class="xref">System.Collections.Generic.IList</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.ICollection</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div><span class="xref">System.Collections.IList</span></div>
    <div><span class="xref">System.Collections.ICollection</span></div>
    <div><span class="xref">System.Collections.Generic.IReadOnlyList</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.IReadOnlyCollection</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>&gt;</div>
    <div><span class="xref">System.Collections.IEnumerable</span></div>
    <div><span class="xref">System.IDisposable</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Add(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.Add(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.AddRange(System.Collections.Generic.IEnumerable&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.AsReadOnly()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.BinarySearch(System.Int32, System.Int32, InnerLibs.DataBase.Result, System.Collections.Generic.IComparer&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.BinarySearch(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.BinarySearch(InnerLibs.DataBase.Result, System.Collections.Generic.IComparer&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Clear()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Contains(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.Contains(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.ConvertAll&lt;TOutput&gt;(System.Converter&lt;InnerLibs.DataBase.Result, TOutput&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.CopyTo(InnerLibs.DataBase.Result[])</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.ICollection.CopyTo(System.Array, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.CopyTo(System.Int32, InnerLibs.DataBase.Result[], System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.CopyTo(InnerLibs.DataBase.Result[], System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Exists(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Find(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindAll(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindIndex(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindIndex(System.Int32, System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindIndex(System.Int32, System.Int32, System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindLast(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindLastIndex(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindLastIndex(System.Int32, System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.FindLastIndex(System.Int32, System.Int32, System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.ForEach(System.Action&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.Generic.IEnumerable&lt;InnerLibs.DataBase.Result&gt;.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IEnumerable.GetEnumerator()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.GetRange(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.IndexOf(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.IndexOf(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.IndexOf(InnerLibs.DataBase.Result, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.IndexOf(InnerLibs.DataBase.Result, System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Insert(System.Int32, InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.Insert(System.Int32, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.InsertRange(System.Int32, System.Collections.Generic.IEnumerable&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.LastIndexOf(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.LastIndexOf(InnerLibs.DataBase.Result, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.LastIndexOf(InnerLibs.DataBase.Result, System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Remove(InnerLibs.DataBase.Result)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.Remove(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.RemoveAll(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.RemoveAt(System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.RemoveRange(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Reverse()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Reverse(System.Int32, System.Int32)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Sort()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Sort(System.Collections.Generic.IComparer&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Sort(System.Comparison&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.ToArray()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.TrimExcess()</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.TrueForAll(System.Predicate&lt;InnerLibs.DataBase.Result&gt;)</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Capacity</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.Count</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.IsFixedSize</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.Generic.ICollection&lt;InnerLibs.DataBase.Result&gt;.IsReadOnly</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.IList.IsReadOnly</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.ICollection.IsSynchronized</span>
    </div>
    <div>
      <span class="xref">System.Collections.Generic.List&lt;InnerLibs.DataBase.Result&gt;.System.Collections.ICollection.SyncRoot</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.Finalize()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InnerLibs.html">InnerLibs</a></h6>
  <h6><strong>Assembly</strong>: InnerLibs.dll</h6>
  <h5 id="InnerLibs_DataBase_Reader_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public sealed class Reader : List&lt;DataBase.Result&gt;, IList&lt;DataBase.Result&gt;, ICollection&lt;DataBase.Result&gt;, IList, ICollection, IReadOnlyList&lt;DataBase.Result&gt;, IReadOnlyCollection&lt;DataBase.Result&gt;, IEnumerable&lt;DataBase.Result&gt;, IEnumerable, IDisposable</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="InnerLibs_DataBase_Reader__ctor_" data-uid="InnerLibs.DataBase.Reader.#ctor*"></a>
  <h4 id="InnerLibs_DataBase_Reader__ctor_InnerLibs_DataBase_Result___" data-uid="InnerLibs.DataBase.Reader.#ctor(InnerLibs.DataBase.Result[])">Reader(DataBase.Result[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria um novo Reader a partir de uma coleçao de listas de Dicionários</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Reader(params DataBase.Result[] Tables)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a>[]</td>
        <td><span class="parametername">Tables</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Conunto de listas de dicionarios</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader__ctor_" data-uid="InnerLibs.DataBase.Reader.#ctor*"></a>
  <h4 id="InnerLibs_DataBase_Reader__ctor_System_Collections_Generic_IDictionary_System_String_System_Object____" data-uid="InnerLibs.DataBase.Reader.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object}[])">Reader(IDictionary&lt;String, Object&gt;[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria um novo Reader a partir de uma coleção de dicionários</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Reader(params IDictionary&lt;string, object&gt;[] Rows)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IDictionary</span>&lt;<span class="xref">System.String</span>, <span class="xref">System.Object</span>&gt;[]</td>
        <td><span class="parametername">Rows</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Conunto de Dicionários</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader__ctor_" data-uid="InnerLibs.DataBase.Reader.#ctor*"></a>
  <h4 id="InnerLibs_DataBase_Reader__ctor_System_Data_Common_DbDataReader_" data-uid="InnerLibs.DataBase.Reader.#ctor(System.Data.Common.DbDataReader)">Reader(DbDataReader)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria um novo Reader a partir de um <span class="xref">System.Data.Common.DbDataReader</span></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Reader(DbDataReader Reader)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Data.Common.DbDataReader</span></td>
        <td><span class="parametername">Reader</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Reader</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="InnerLibs_DataBase_Reader_HasResults_" data-uid="InnerLibs.DataBase.Reader.HasResults*"></a>
  <h4 id="InnerLibs_DataBase_Reader_HasResults" data-uid="InnerLibs.DataBase.Reader.HasResults">HasResults</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Verifica se exitem resultados</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool HasResults { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_HasRows_" data-uid="InnerLibs.DataBase.Reader.HasRows*"></a>
  <h4 id="InnerLibs_DataBase_Reader_HasRows" data-uid="InnerLibs.DataBase.Reader.HasRows">HasRows</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Verifica se o resultado atual possui linhas</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool HasRows { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_IsClosed_" data-uid="InnerLibs.DataBase.Reader.IsClosed*"></a>
  <h4 id="InnerLibs_DataBase_Reader_IsClosed" data-uid="InnerLibs.DataBase.Reader.IsClosed">IsClosed</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Verifica se o Reader está vazio ou fechado ( <span class="xref">System.Collections.Generic.List&lt;T&gt;.Count</span> = 0)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object IsClosed { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Item_" data-uid="InnerLibs.DataBase.Reader.Item*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Item_System_Int32_" data-uid="InnerLibs.DataBase.Reader.Item(System.Int32)">Item[Int32]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor da coluna do resultado e linha atual a partir do índice da coluna</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object this[int ColumnIndex] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ColumnIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Índice da Coluna</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Item_" data-uid="InnerLibs.DataBase.Reader.Item*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Item_System_Int32_System_Int32_" data-uid="InnerLibs.DataBase.Reader.Item(System.Int32,System.Int32)">Item[Int32, Int32]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Retorna o valor da coluna do resultado de uma linha especifica a partir do nome da coluna
e o Index da linha</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object this[int ColumnIndex, int RowIndex] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ColumnIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Índice da Coluna</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">RowIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Índice da Linha</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Item_" data-uid="InnerLibs.DataBase.Reader.Item*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Item_System_String_" data-uid="InnerLibs.DataBase.Reader.Item(System.String)">Item[String]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor da coluna do resultado e linha atual a partir do nome da coluna</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object this[string ColumnName] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ColumnName</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Nome da Coluna</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Item_" data-uid="InnerLibs.DataBase.Reader.Item*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Item_System_String_System_Int32_" data-uid="InnerLibs.DataBase.Reader.Item(System.String,System.Int32)">Item[String, Int32]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Retorna o valor da coluna do resultado de uma linha especifica a partir do nome da coluna
e o Index da linha</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object this[string ColumnName, int RowIndex] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ColumnName</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Nome da Coluna</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">RowIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Índice da Linha</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InnerLibs_DataBase_Reader_ApplyToControls_" data-uid="InnerLibs.DataBase.Reader.ApplyToControls*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ApplyToControls_System_Web_UI_HtmlControls_HtmlControl___" data-uid="InnerLibs.DataBase.Reader.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])">ApplyToControls(HtmlControl[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Aplica os valores encontrados nas colunas de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em controles
com mesmo ID das colunas. Se os conroles não existirem no resultado eles serão ignorados.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlControl[] ApplyToControls(params HtmlControl[] Controls)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlControl</span>[]</td>
        <td><span class="parametername">Controls</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Controles que serão Manipulados</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlControl</span>[]</td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Um array contendo os inputs manipulados</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ApplyToControls_" data-uid="InnerLibs.DataBase.Reader.ApplyToControls*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ApplyToControls_System_Windows_Forms_Control___" data-uid="InnerLibs.DataBase.Reader.ApplyToControls(System.Windows.Forms.Control[])">ApplyToControls(Control[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Aplica os valores encontrados nas colunas de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em controles
com mesmo ID das colunas. Se os conroles não existirem no resultado eles serão ignorados.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Control[] ApplyToControls(params Control[] Controls)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.Control</span>[]</td>
        <td><span class="parametername">Controls</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Controles que serão Manipulados</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.Control</span>[]</td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Um array contendo os inputs manipulados</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Close_" data-uid="InnerLibs.DataBase.Reader.Close*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Close" data-uid="InnerLibs.DataBase.Reader.Close">Close()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Esvazia e destroi o reader</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Close()</code></pre>
  </div>
  
  
  <a id="InnerLibs_DataBase_Reader_CountRows_" data-uid="InnerLibs.DataBase.Reader.CountRows*"></a>
  <h4 id="InnerLibs_DataBase_Reader_CountRows" data-uid="InnerLibs.DataBase.Reader.CountRows">CountRows()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o numero de linhas do resultado atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int CountRows()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_CountRows_" data-uid="InnerLibs.DataBase.Reader.CountRows*"></a>
  <h4 id="InnerLibs_DataBase_Reader_CountRows_System_Int32_" data-uid="InnerLibs.DataBase.Reader.CountRows(System.Int32)">CountRows(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o numero de linhas de um resultado</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int CountRows(int ResultIndex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_FillComboBox_" data-uid="InnerLibs.DataBase.Reader.FillComboBox*"></a>
  <h4 id="InnerLibs_DataBase_Reader_FillComboBox__1_System_Windows_Forms_ComboBox__System_String_System_String_" data-uid="InnerLibs.DataBase.Reader.FillComboBox``1(System.Windows.Forms.ComboBox@,System.String,System.String)">FillComboBox&lt;TValue&gt;(ref ComboBox, String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Preenche um combobox com um TextValueList criado a partir deste DataBase.Reader</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ComboBox FillComboBox&lt;TValue&gt;(ref ComboBox ComboBox, string TextColumn, string ValueColumn = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.ComboBox</span></td>
        <td><span class="parametername">ComboBox</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TextColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna usada como Texto do ComboBox</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ValueColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna usada como Valor do ComboBox</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.ComboBox</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Tipo do Valor da coluna</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_FillDataGridView_" data-uid="InnerLibs.DataBase.Reader.FillDataGridView*"></a>
  <h4 id="InnerLibs_DataBase_Reader_FillDataGridView_System_Windows_Forms_DataGridView__System_Int32_" data-uid="InnerLibs.DataBase.Reader.FillDataGridView(System.Windows.Forms.DataGridView@,System.Int32)">FillDataGridView(ref DataGridView, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Preenche um DataGrivView com os resultados</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataGridView FillDataGridView(ref DataGridView DataGridView, int ResultIndex = 0)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.DataGridView</span></td>
        <td><span class="parametername">DataGridView</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Windows.Forms.DataGridView</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_FillSelectControl_" data-uid="InnerLibs.DataBase.Reader.FillSelectControl*"></a>
  <h4 id="InnerLibs_DataBase_Reader_FillSelectControl_System_Web_UI_HtmlControls_HtmlSelect__System_String_System_String_System_String___" data-uid="InnerLibs.DataBase.Reader.FillSelectControl(System.Web.UI.HtmlControls.HtmlSelect@,System.String,System.String,System.String[])">FillSelectControl(ref HtmlSelect, String, String, String[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Preenche um <span class="xref">System.Web.UI.HtmlControls.HtmlSelect</span> com itens do <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void FillSelectControl(ref HtmlSelect SelectControl, string TextColumn, string ValueColumn = &quot;&quot;, string[] SelectedValues = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlSelect</span></td>
        <td><span class="parametername">SelectControl</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TextColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Texto do elemento option</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ValueColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Value do elemento option</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">SelectedValues</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Valores Selecionados</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetColumns_" data-uid="InnerLibs.DataBase.Reader.GetColumns*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetColumns" data-uid="InnerLibs.DataBase.Reader.GetColumns">GetColumns()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna as colunas do resultado atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;string&gt; GetColumns()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetCurrentRow_" data-uid="InnerLibs.DataBase.Reader.GetCurrentRow*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetCurrentRow" data-uid="InnerLibs.DataBase.Reader.GetCurrentRow">GetCurrentRow()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna a linha atual do resultado atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataBase.Row GetCurrentRow()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.DataBase.Row.html">DataBase.Row</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetCurrentRowAs_" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowAs*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetCurrentRowAs__1" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowAs``1">GetCurrentRowAs&lt;Type&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna um Array de Valores da linha atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Type GetCurrentRowAs&lt;Type&gt;()
    where Type : class</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetCurrentRowColumns_" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowColumns*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetCurrentRowColumns" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowColumns">GetCurrentRowColumns()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna apenas as colunas que o resultado atual possuir</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;string&gt; GetCurrentRowColumns()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetCurrentRowValues_" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowValues*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetCurrentRowValues" data-uid="InnerLibs.DataBase.Reader.GetCurrentRowValues">GetCurrentRowValues()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna um Array de Valores da linha atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object[] GetCurrentRowValues()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetItem_" data-uid="InnerLibs.DataBase.Reader.GetItem*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetItem__1_System_Int32_" data-uid="InnerLibs.DataBase.Reader.GetItem``1(System.Int32)">GetItem&lt;Type&gt;(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor da coluna do resultado e linha atual a partir do índice da coluna convertendo para um outro tipo</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Type GetItem&lt;Type&gt;(int ColumnIndex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ColumnIndex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetItem_" data-uid="InnerLibs.DataBase.Reader.GetItem*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetItem__1_System_String_" data-uid="InnerLibs.DataBase.Reader.GetItem``1(System.String)">GetItem&lt;Type&gt;(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor da coluna do resultado e linha atual a partir do nome da coluna convertendo para um outro tipo</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Type GetItem&lt;Type&gt;(string ColumnName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ColumnName</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetResult_" data-uid="InnerLibs.DataBase.Reader.GetResult*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetResult_System_Int32_" data-uid="InnerLibs.DataBase.Reader.GetResult(System.Int32)">GetResult(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna um resultado (tabela) a partir do seu Index.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataBase.Result GetResult(int ResultIndex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Indice do resultado</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetRow_" data-uid="InnerLibs.DataBase.Reader.GetRow*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetRow_System_Int32_" data-uid="InnerLibs.DataBase.Reader.GetRow(System.Int32)">GetRow(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna uma linha do resultado atual</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataBase.Row GetRow(int RowIndex)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">RowIndex</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.DataBase.Row.html">DataBase.Row</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetValue_" data-uid="InnerLibs.DataBase.Reader.GetValue*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetValue_System_Int32_System_Int32_System_String_" data-uid="InnerLibs.DataBase.Reader.GetValue(System.Int32,System.Int32,System.String)">GetValue(Int32, Int32, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor de uma coluna especifica de um resultado de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public object GetValue(int ResultIndex, int RowIndex, string Column)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Indice do resultado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">RowIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Indice da linha dor resultado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Column</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GetValue_" data-uid="InnerLibs.DataBase.Reader.GetValue*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GetValue__1_System_Int32_System_Int32_System_String_" data-uid="InnerLibs.DataBase.Reader.GetValue``1(System.Int32,System.Int32,System.String)">GetValue&lt;Type&gt;(Int32, Int32, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o valor de uma coluna especifica de um resultado de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Type GetValue&lt;Type&gt;(int ResultIndex, int RowIndex, string Column)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Indice do resultado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">RowIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Indice da linha dor resultado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Column</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Tipo para qual o valor será convertido</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GoBack_" data-uid="InnerLibs.DataBase.Reader.GoBack*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GoBack" data-uid="InnerLibs.DataBase.Reader.GoBack">GoBack()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retornar para o registro anterior</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool GoBack()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_GoForward_" data-uid="InnerLibs.DataBase.Reader.GoForward*"></a>
  <h4 id="InnerLibs_DataBase_Reader_GoForward" data-uid="InnerLibs.DataBase.Reader.GoForward">GoForward()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Avança para o próximo registro</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool GoForward()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_NextResult_" data-uid="InnerLibs.DataBase.Reader.NextResult*"></a>
  <h4 id="InnerLibs_DataBase_Reader_NextResult" data-uid="InnerLibs.DataBase.Reader.NextResult">NextResult()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Avança para o próximo resultado</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool NextResult()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_PreviousResult_" data-uid="InnerLibs.DataBase.Reader.PreviousResult*"></a>
  <h4 id="InnerLibs_DataBase_Reader_PreviousResult" data-uid="InnerLibs.DataBase.Reader.PreviousResult">PreviousResult()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna para os resultado anterior</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool PreviousResult()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Read_" data-uid="InnerLibs.DataBase.Reader.Read*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Read" data-uid="InnerLibs.DataBase.Reader.Read">Read()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Avança para o próximo registro, é um alias para <a class="xref" href="InnerLibs.DataBase.Reader.html#InnerLibs_DataBase_Reader_GoForward">GoForward()</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Read()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_Reset_" data-uid="InnerLibs.DataBase.Reader.Reset*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Reset" data-uid="InnerLibs.DataBase.Reader.Reset">Reset()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Reinicia a leitura do Reader retornando os índices para seus valores padrão</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Reset()</code></pre>
  </div>
  
  
  <a id="InnerLibs_DataBase_Reader_Search_" data-uid="InnerLibs.DataBase.Reader.Search*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Search_System_Object_" data-uid="InnerLibs.DataBase.Reader.Search(System.Object)">Search(Object)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Encontra linhas onde qualquer valor de suas colunas conter um determinado valor</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataBase.Result Search(object Value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td><span class="parametername">Value</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Valor</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.DataBase.Result.html">DataBase.Result</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_StartOver_" data-uid="InnerLibs.DataBase.Reader.StartOver*"></a>
  <h4 id="InnerLibs_DataBase_Reader_StartOver" data-uid="InnerLibs.DataBase.Reader.StartOver">StartOver()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Reinicia a leitura do Reader retornando os índices para seus valores padrão, é um alias
para <a class="xref" href="InnerLibs.DataBase.Reader.html#InnerLibs_DataBase_Reader_Reset">Reset()</a>)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void StartOver()</code></pre>
  </div>
  
  
  <a id="InnerLibs_DataBase_Reader_ToCSV_" data-uid="InnerLibs.DataBase.Reader.ToCSV*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToCSV_System_String_" data-uid="InnerLibs.DataBase.Reader.ToCSV(System.String)">ToCSV(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Converte um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em CSV</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToCSV(string Separator = &quot;;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Separator</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Separador de valores (vírgula)</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">uma string Comma Separated Values (CSV)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToDataTable_" data-uid="InnerLibs.DataBase.Reader.ToDataTable*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToDataTable" data-uid="InnerLibs.DataBase.Reader.ToDataTable">ToDataTable()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria uma DataTable com os dados deste reader</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public DataTable ToDataTable()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Data.DataTable</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToDelimitedString_" data-uid="InnerLibs.DataBase.Reader.ToDelimitedString*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToDelimitedString_System_String_System_String_System_String_" data-uid="InnerLibs.DataBase.Reader.ToDelimitedString(System.String,System.String,System.String)">ToDelimitedString(String, String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Transforma um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em uma string delimitada por caracteres</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToDelimitedString(string ColDelimiter = &quot;[ColDelimiter]&quot;, string RowDelimiter = &quot;[RowDelimiter]&quot;, string TableDelimiter = &quot;[TableDelimiter]&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ColDelimiter</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Delimitador de Coluna</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">RowDelimiter</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Delimitador de Linha</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TableDelimiter</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Delimitador de Tabelas</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Uma string delimitada</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToDictionary_" data-uid="InnerLibs.DataBase.Reader.ToDictionary*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToDictionary__2_System_String_System_String_" data-uid="InnerLibs.DataBase.Reader.ToDictionary``2(System.String,System.String)">ToDictionary&lt;TKey, TValue&gt;(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Cria um Dictionary a partir de <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> usando uma coluna como Key e
outra como Value</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Dictionary&lt;TKey, TValue&gt; ToDictionary&lt;TKey, TValue&gt;(string KeyColumn, string ValueColumn)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">KeyColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Key do dicionario</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ValueColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Value do dicionario</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;TKey, TValue&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToHTMLTable_" data-uid="InnerLibs.DataBase.Reader.ToHTMLTable*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToHTMLTable_System_Boolean_" data-uid="InnerLibs.DataBase.Reader.ToHTMLTable(System.Boolean)">ToHTMLTable(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Converte um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> para uma tabela em HTML</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement ToHTMLTable(bool BeautfyColumnNames = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">BeautfyColumnNames</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Embeleza nomes de colunas</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToJSON_" data-uid="InnerLibs.DataBase.Reader.ToJSON*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToJSON_System_Boolean_System_String_" data-uid="InnerLibs.DataBase.Reader.ToJSON(System.Boolean,System.String)">ToJSON(Boolean, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna um Json do Reader</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToJSON(bool Clear = false, string DateFormat = &quot;yyyy-MM-dd HH:mm:ss&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">Clear</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">DateFormat</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToJSON_" data-uid="InnerLibs.DataBase.Reader.ToJSON*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToJSON_System_Int32_System_String_" data-uid="InnerLibs.DataBase.Reader.ToJSON(System.Int32,System.String)">ToJSON(Int32, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna o Json do resultado especifico</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToJSON(int ResultIndex, string DateFormat = &quot;yyyy-MM-dd HH:mm:ss&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">ResultIndex</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Índice do resultado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">DateFormat</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToList_" data-uid="InnerLibs.DataBase.Reader.ToList*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToList__1" data-uid="InnerLibs.DataBase.Reader.ToList``1">ToList&lt;TValue&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria uma lista de uma classe específica com os Itens de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public List&lt;TValue&gt; ToList&lt;TValue&gt;()
    where TValue : class</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;TValue&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToList_" data-uid="InnerLibs.DataBase.Reader.ToList*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToList__1_System_String_" data-uid="InnerLibs.DataBase.Reader.ToList``1(System.String)">ToList&lt;TValue&gt;(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Cria uma lista de com os Itens de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> convertendo os valores
para uma classe ou tipo especifico</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public List&lt;TValue&gt; ToList&lt;TValue&gt;(string Column)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Column</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;TValue&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToListItems_" data-uid="InnerLibs.DataBase.Reader.ToListItems*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToListItems_System_String_System_String_System_String___" data-uid="InnerLibs.DataBase.Reader.ToListItems(System.String,System.String,System.String[])">ToListItems(String, String, String[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria um array de <span class="xref">System.Web.UI.WebControls.ListItem</span> com os Itens de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ListItem[] ToListItems(string TextColumn, string ValueColumn = &quot;&quot;, string[] SelectedValues = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TextColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Texto do elemento option</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ValueColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Value do elemento option</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">SelectedValues</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Valores Selecionados</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.WebControls.ListItem</span>[]</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToMarkdownTable_" data-uid="InnerLibs.DataBase.Reader.ToMarkdownTable*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToMarkdownTable" data-uid="InnerLibs.DataBase.Reader.ToMarkdownTable">ToMarkdownTable()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Converte um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> para uma tabela em Markdown Pipe</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToMarkdownTable()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToQueryString_" data-uid="InnerLibs.DataBase.Reader.ToQueryString*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToQueryString" data-uid="InnerLibs.DataBase.Reader.ToQueryString">ToQueryString()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Transforma o resultado de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em QueryString</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToQueryString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToSession_" data-uid="InnerLibs.DataBase.Reader.ToSession*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToSession_System_Web_SessionState_HttpSessionState_System_Int32_" data-uid="InnerLibs.DataBase.Reader.ToSession(System.Web.SessionState.HttpSessionState,System.Int32)">ToSession(HttpSessionState, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Copia a primeira linha de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> para uma sessão
HttpSessionState usando os nomes das colunas como os nomes dos objetos da sessão</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ToSession(HttpSessionState Session, int Timeout = 0)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.SessionState.HttpSessionState</span></td>
        <td><span class="parametername">Session</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Objeto da sessão</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Timeout</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Tempo em minutos para a sessão expirar (se não especificado não altera o timeout da sessão)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToString_" data-uid="InnerLibs.DataBase.Reader.ToString*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToString" data-uid="InnerLibs.DataBase.Reader.ToString">ToString()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna um Json do objeto</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ToString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">System.Object.ToString()</span></div>
  
  
  <a id="InnerLibs_DataBase_Reader_ToTextValueList_" data-uid="InnerLibs.DataBase.Reader.ToTextValueList*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToTextValueList__1_System_String_System_String_" data-uid="InnerLibs.DataBase.Reader.ToTextValueList``1(System.String,System.String)">ToTextValueList&lt;TValue&gt;(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Cria uma lista de pares com os Itens de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a></p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public TextValueList&lt;TValue&gt; ToTextValueList&lt;TValue&gt;(string TextColumn, string ValueColumn = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TextColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Text do item</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ValueColumn</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Coluna que será usada como Value do item</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.TextValueList-1.html">TextValueList</a>&lt;TValue&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToUrl_" data-uid="InnerLibs.DataBase.Reader.ToUrl*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToUrl_System_String_" data-uid="InnerLibs.DataBase.Reader.ToUrl(System.String)">ToUrl(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Transforma o resultado de um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em uma URL</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ToUrl(string BaseUrl)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">BaseUrl</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Url Base</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToUrl_" data-uid="InnerLibs.DataBase.Reader.ToUrl*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToUrl_System_Uri_" data-uid="InnerLibs.DataBase.Reader.ToUrl(System.Uri)">ToUrl(Uri)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Retorna uma url com os itens como parametros</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Uri ToUrl(Uri BaseUrl)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Uri</span></td>
        <td><span class="parametername">BaseUrl</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Url Base</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Uri</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_DataBase_Reader_ToXML_" data-uid="InnerLibs.DataBase.Reader.ToXML*"></a>
  <h4 id="InnerLibs_DataBase_Reader_ToXML_System_String_System_String_" data-uid="InnerLibs.DataBase.Reader.ToXML(System.String,System.String)">ToXML(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Converte um <a class="xref" href="InnerLibs.DataBase.Reader.html">DataBase.Reader</a> em XML</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public XmlDocument ToXML(string TableName = &quot;Table&quot;, string ItemName = &quot;Row&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TableName</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Nome do nó principal do documento</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ItemName</span></td>
        <td><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Nome do nó que representa cada linha</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Xml.XmlDocument</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="eii">Explicit Interface Implementations
  </h3>
  
  
  <a id="InnerLibs_DataBase_Reader_Dispose_" data-uid="InnerLibs.DataBase.Reader.Dispose*"></a>
  <h4 id="InnerLibs_DataBase_Reader_Dispose" data-uid="InnerLibs.DataBase.Reader.Dispose">IDisposable.Dispose()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.DataBase.Reader.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Esvazia o reader</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void IDisposable.Dispose()</code></pre>
  </div>
  <h3 id="implements">Implements</h3>
  <div>
      <span class="xref">System.Collections.Generic.IList&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.ICollection&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.IList</span>
  </div>
  <div>
      <span class="xref">System.Collections.ICollection</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IReadOnlyList&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.Generic.IEnumerable&lt;T&gt;</span>
  </div>
  <div>
      <span class="xref">System.Collections.IEnumerable</span>
  </div>
  <div>
      <span class="xref">System.IDisposable</span>
  </div>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ContainsAll__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.ContainsAll&lt;Type&gt;(IEnumerable&lt;Type&gt;, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ContainsAny__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.ContainsAny&lt;Type&gt;(IEnumerable&lt;Type&gt;, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_CreateDictionary__1___0_">ClassTools.CreateDictionary&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_DistinctCount__1_System_Collections_Generic_IEnumerable___0__">ClassTools.DistinctCount&lt;Type&gt;(IEnumerable&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_FirstOr__1_System_Collections_Generic_IEnumerable___0____0_">ClassTools.FirstOr&lt;T&gt;(IEnumerable&lt;T&gt;, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_System_Reflection_BindingFlags_">ClassTools.GetProperties(Object, BindingFlags)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_">ClassTools.GetProperties(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Type_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Type, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue__1_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue&lt;Type&gt;(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_HasProperty_System_Object_System_String_">ClassTools.HasProperty(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsArrayOf__1_System_Object_">ClassTools.IsArrayOf&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsDictionary_System_Object_">ClassTools.IsDictionary(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsInAny__1___0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsInAny&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;[], IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsList_System_Object_">ClassTools.IsList(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsNotIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsNotIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsType__1_System_Object_">ClassTools.IsType&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_LastOr__1_System_Collections_Generic_IEnumerable___0____0_">ClassTools.LastOr&lt;T&gt;(IEnumerable&lt;T&gt;, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1___0___0___">ClassTools.NullCoalesce&lt;T&gt;(T, T[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1_System_Collections_Generic_IEnumerable___0__">ClassTools.NullCoalesce&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullifyProperties__1___0_">ClassTools.NullifyProperties&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValue__1_System_Object_System_String___0_">ClassTools.SetPropertyValue&lt;Type&gt;(Object, String, Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValueFromCollection__1_System_Object_System_String_System_Collections_CollectionBase_">ClassTools.SetPropertyValueFromCollection&lt;Type&gt;(Object, String, CollectionBase)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ToFlatString_System_Object_System_String_">ClassTools.ToFlatString(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.DataManipulation.html#InnerLibs_DataManipulation_GetDbType_System_Object_">DataManipulation.GetDbType(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_DefineEmptyList__1___0_">Converter.DefineEmptyList&lt;T&gt;(T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_ChangeType__2___1_">Converter.ChangeType&lt;ToType, FromType&gt;(FromType)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.JsonViewer.html#InnerLibs_JsonViewer_CreateNode_System_Object_">JsonViewer.CreateNode(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_CalculatePercent__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__">Mathematic.CalculatePercent&lt;TObject, TKey, TValue&gt;(IEnumerable&lt;TObject&gt;, Func&lt;TObject, TKey&gt;, Func&lt;TObject, TValue&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_CalculatePercent__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__">Mathematic.CalculatePercent&lt;Tobject, Tvalue&gt;(IEnumerable&lt;Tobject&gt;, Func&lt;Tobject, Tvalue&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_">Mathematic.IsBetween&lt;Type&gt;(Type, Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_GetRandomItem__1_System_Collections_Generic_List___0__">Text.GetRandomItem&lt;Type&gt;(List&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Join__1_System_Collections_Generic_IEnumerable___0__System_String_">Text.Join&lt;Type&gt;(IEnumerable&lt;Type&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Join__1_System_Collections_Generic_List___0__System_String_">Text.Join&lt;Type&gt;(List&lt;Type&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_SerializeJSON_System_Object_System_String_">Text.SerializeJSON(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_Shuffle__1_System_Collections_Generic_List___0___">Text.Shuffle&lt;Type&gt;(ref List&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_ToHtmlList__1_System_Collections_Generic_IEnumerable___0__System_Boolean_">Text.ToHtmlList&lt;T&gt;(IEnumerable&lt;T&gt;, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNumber_System_Object_">Verify.IsNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNotNumber_System_Object_">Verify.IsNotNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfNoIndex__1_System_Collections_Generic_IEnumerable___0__System_Int32___0_">Verify.IfNoIndex&lt;T&gt;(IEnumerable&lt;T&gt;, Int32, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlankOrNoIndex__1_System_Collections_Generic_IEnumerable___0__System_Int32___0_">Verify.IfBlankOrNoIndex&lt;T&gt;(IEnumerable&lt;T&gt;, Int32, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlank__1_System_Object___0_">Verify.IfBlank&lt;T&gt;(Object, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0_System_Func___0_System_Boolean__">Verify.NullIf&lt;T&gt;(T, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0___0_">Verify.NullIf&lt;T&gt;(T, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsEmpty__1_System_Collections_Generic_IEnumerable___0__">Verify.IsEmpty&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_CreateFromAjax__1___0__System_String_System_String_System_Collections_Specialized_NameValueCollection_System_String_System_Text_Encoding_">Web.CreateFromAjax&lt;Type&gt;(ref Type, String, String, NameValueCollection, String, Encoding)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_AsListItem__3___0_System_Func___0___1__System_Func___0___2__">Web.AsListItem&lt;T, TextType, ValueType&gt;(T, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_ToListItems__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Func___0_System_Boolean__">Web.ToListItems&lt;T, TextType, ValueType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_ToListItems__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2____2___">Web.ToListItems&lt;T, TextType, ValueType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;, ValueType[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_GetCastedValue_System_Object_">WinForms.GetCastedValue(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_CastValueForControl_System_Object__System_Object_">WinForms.CastValueForControl(ref Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ApplyToControls__1___0_System_Web_UI_HtmlControls_HtmlControl___">LINQExtensions.ApplyToControls&lt;T&gt;(T, HtmlControl[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_DistinctBy__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__System_Boolean_">LINQExtensions.DistinctBy&lt;T, TKey, TOrder&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TKey&gt;, Func&lt;T, TOrder&gt;, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_DistinctBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__">LINQExtensions.DistinctBy&lt;T, TKey&gt;(IEnumerable&lt;T&gt;, Func&lt;T, TKey&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__">LINQExtensions.ForEach&lt;T&gt;(IEnumerable&lt;T&gt;, Action&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_GroupByPage__1_System_Collections_Generic_IEnumerable___0__System_Int32_">LINQExtensions.GroupByPage&lt;Tsource&gt;(IEnumerable&lt;Tsource&gt;, Int32)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_HasSamePropertyValues__1___0___0_System_Func___0_System_Object____">LINQExtensions.HasSamePropertyValues&lt;T&gt;(T, T, Func&lt;T, Object&gt;[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_OrderByLike__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_String__System_Boolean_System_String___">LINQExtensions.OrderByLike&lt;T&gt;(IEnumerable&lt;T&gt;, Func&lt;T, String&gt;, Boolean, String[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_OrderByRandom__1_System_Collections_Generic_IEnumerable___0__">LINQExtensions.OrderByRandom&lt;T&gt;(IEnumerable&lt;T&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_Page__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_Int32_">LINQExtensions.Page&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32, Int32)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_SelectJoin__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_String__System_String_">LINQExtensions.SelectJoin&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, String&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_SelectManyJoin__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Collections_Generic_IEnumerable_System_String___System_String_">LINQExtensions.SelectManyJoin&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;String&gt;&gt;, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_TakeAndOrder__2_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_Func___0___1__">LINQExtensions.TakeAndOrder&lt;T, DefaultOrderType&gt;(IEnumerable&lt;T&gt;, Func&lt;T, Boolean&gt;, Func&lt;T, DefaultOrderType&gt;)</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
