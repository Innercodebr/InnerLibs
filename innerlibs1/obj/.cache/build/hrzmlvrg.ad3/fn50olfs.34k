<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class Mathematic
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class Mathematic
   ">
    <meta name="generator" content="docfx 2.37.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InnerLibs.Mathematic">
  
  
  <h1 id="InnerLibs_Mathematic" data-uid="InnerLibs.Mathematic" class="text-break">Class Mathematic
  </h1>
  <div class="markdown level0 summary"><p>Módulo para calculos</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">Mathematic</span></div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InnerLibs.html">InnerLibs</a></h6>
  <h6><strong>Assembly</strong>: InnerLibs.dll</h6>
  <h5 id="InnerLibs_Mathematic_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class Mathematic</code></pre>
  </div>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InnerLibs_Mathematic_ArithmeticProgression_" data-uid="InnerLibs.Mathematic.ArithmeticProgression*"></a>
  <h4 id="InnerLibs_Mathematic_ArithmeticProgression_System_Int32_System_Int32_System_Int32_" data-uid="InnerLibs.Mathematic.ArithmeticProgression(System.Int32,System.Int32,System.Int32)">ArithmeticProgression(Int32, Int32, Int32)</h4>
  <div class="markdown level1 summary"><p>Retorna uma progressão Aritmética com N numeros</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;int&gt; ArithmeticProgression(int FirstNumber, int Constant, int Length)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">FirstNumber</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Constant</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Length</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Average_" data-uid="InnerLibs.Mathematic.Average*"></a>
  <h4 id="InnerLibs_Mathematic_Average_System_Decimal___" data-uid="InnerLibs.Mathematic.Average(System.Decimal[])">Average(Decimal[])</h4>
  <div class="markdown level1 summary"><p>Tira a média de todos os números de um Array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static decimal Average(params decimal[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><p>Decimal contendo</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Average_" data-uid="InnerLibs.Mathematic.Average*"></a>
  <h4 id="InnerLibs_Mathematic_Average_System_Double___" data-uid="InnerLibs.Mathematic.Average(System.Double[])">Average(Double[])</h4>
  <div class="markdown level1 summary"><p>Tira a média de todos os números de um Array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double Average(params double[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p>Decimal contendo</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Average_" data-uid="InnerLibs.Mathematic.Average*"></a>
  <h4 id="InnerLibs_Mathematic_Average_System_Int32___" data-uid="InnerLibs.Mathematic.Average(System.Int32[])">Average(Int32[])</h4>
  <div class="markdown level1 summary"><p>Tira a média de todos os números de um Array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int Average(params int[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><p>Decimal contendo</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Average_" data-uid="InnerLibs.Mathematic.Average*"></a>
  <h4 id="InnerLibs_Mathematic_Average_System_Int64___" data-uid="InnerLibs.Mathematic.Average(System.Int64[])">Average(Int64[])</h4>
  <div class="markdown level1 summary"><p>Tira a média de todos os números de um Array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static long Average(params long[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Decimal contendo</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculateDistance_" data-uid="InnerLibs.Mathematic.CalculateDistance*"></a>
  <h4 id="InnerLibs_Mathematic_CalculateDistance_InnerLibs_Location_InnerLibs_Location_" data-uid="InnerLibs.Mathematic.CalculateDistance(InnerLibs.Location,InnerLibs.Location)">CalculateDistance(Location, Location)</h4>
  <div class="markdown level1 summary"><p>Calcula a distancia entre 2 locais</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double CalculateDistance(Location FirstLocation, Location SecondLocation)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.Location.html">Location</a></td>
        <td><span class="parametername">FirstLocation</span></td>
        <td><p>Primeiro Local</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="InnerLibs.Location.html">Location</a></td>
        <td><span class="parametername">SecondLocation</span></td>
        <td><p>Segundo Local</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p>A distancia em kilometros</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculateDistance_" data-uid="InnerLibs.Mathematic.CalculateDistance*"></a>
  <h4 id="InnerLibs_Mathematic_CalculateDistance_InnerLibs_Location___" data-uid="InnerLibs.Mathematic.CalculateDistance(InnerLibs.Location[])">CalculateDistance(Location[])</h4>
  <div class="markdown level1 summary"><p>Calcula a distancia passando por todos os pontos</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double CalculateDistance(params Location[] Locations)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.Location.html">Location</a>[]</td>
        <td><span class="parametername">Locations</span></td>
        <td><p>Localizacoes</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculatePercent_" data-uid="InnerLibs.Mathematic.CalculatePercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculatePercent_System_Decimal_System_Decimal_" data-uid="InnerLibs.Mathematic.CalculatePercent(System.Decimal,System.Decimal)">CalculatePercent(Decimal, Decimal)</h4>
  <div class="markdown level1 summary"><p>Retorna o percentual de um valor</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static decimal CalculatePercent(this decimal Value, decimal Total)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Value</span></td>
        <td><p>Valor a ser calculado</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Total</span></td>
        <td><p>Valor Total (Representa 100%)</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><p>Um numero decimal contendo a porcentagem</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculatePercent_" data-uid="InnerLibs.Mathematic.CalculatePercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculatePercent__1_System_Collections_Generic_IEnumerable___0__" data-uid="InnerLibs.Mathematic.CalculatePercent``1(System.Collections.Generic.IEnumerable{``0})">CalculatePercent&lt;TValue&gt;(IEnumerable&lt;TValue&gt;)</h4>
  <div class="markdown level1 summary"><p>Calcula a porcentagem de cada valor de uma classe em relação a sua totalidade em uma lista</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Dictionary&lt;TValue, decimal&gt; CalculatePercent&lt;TValue&gt;(this IEnumerable&lt;TValue&gt; Obj)
    where TValue : struct</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TValue&gt;</td>
        <td><span class="parametername">Obj</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;TValue, <span class="xref">System.Decimal</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculatePercent_" data-uid="InnerLibs.Mathematic.CalculatePercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculatePercent__2_System_Collections_Generic_Dictionary___0___1__" data-uid="InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.Dictionary{``0,``1})">CalculatePercent&lt;TKey, TValue&gt;(Dictionary&lt;TKey, TValue&gt;)</h4>
  <div class="markdown level1 summary"><p>Calcula a porcentagem de cada valor em um dicionario em relação a sua totalidade</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Dictionary&lt;TKey, decimal&gt; CalculatePercent&lt;TKey, TValue&gt;(this Dictionary&lt;TKey, TValue&gt; Dic)
    where TValue : struct</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;TKey, TValue&gt;</td>
        <td><span class="parametername">Dic</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;TKey, <span class="xref">System.Decimal</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculatePercent_" data-uid="InnerLibs.Mathematic.CalculatePercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculatePercent__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__" data-uid="InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">CalculatePercent&lt;Tobject, Tvalue&gt;(IEnumerable&lt;Tobject&gt;, Func&lt;Tobject, Tvalue&gt;)</h4>
  <div class="markdown level1 summary"><p>Calcula a porcentagem de cada valor de uma classe em relação a sua totalidade em uma lista</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Dictionary&lt;Tobject, decimal&gt; CalculatePercent&lt;Tobject, Tvalue&gt;(this IEnumerable&lt;Tobject&gt; Obj, Func&lt;Tobject, Tvalue&gt; ValueSelector)
    where Tvalue : struct</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;Tobject&gt;</td>
        <td><span class="parametername">Obj</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;Tobject, Tvalue&gt;</td>
        <td><span class="parametername">ValueSelector</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;Tobject, <span class="xref">System.Decimal</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Tobject</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">Tvalue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculatePercent_" data-uid="InnerLibs.Mathematic.CalculatePercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculatePercent__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__" data-uid="InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">CalculatePercent&lt;TObject, TKey, TValue&gt;(IEnumerable&lt;TObject&gt;, Func&lt;TObject, TKey&gt;, Func&lt;TObject, TValue&gt;)</h4>
  <div class="markdown level1 summary"><p>Calcula a porcentagem de cada valor de uma classe em relação a sua totalidade em uma lista</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Dictionary&lt;TKey, decimal&gt; CalculatePercent&lt;TObject, TKey, TValue&gt;(this IEnumerable&lt;TObject&gt; Obj, Func&lt;TObject, TKey&gt; KeySelector, Func&lt;TObject, TValue&gt; ValueSelector)
    where TValue : struct</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TObject&gt;</td>
        <td><span class="parametername">Obj</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TObject, TKey&gt;</td>
        <td><span class="parametername">KeySelector</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TObject, TValue&gt;</td>
        <td><span class="parametername">ValueSelector</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;TKey, <span class="xref">System.Decimal</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TObject</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="parametername">TValue</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CalculateValueFromPercent_" data-uid="InnerLibs.Mathematic.CalculateValueFromPercent*"></a>
  <h4 id="InnerLibs_Mathematic_CalculateValueFromPercent_System_String_System_Decimal_" data-uid="InnerLibs.Mathematic.CalculateValueFromPercent(System.String,System.Decimal)">CalculateValueFromPercent(String, Decimal)</h4>
  <div class="markdown level1 summary"><p>Retorna o valor de um determinado percentual de um valor total</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static decimal CalculateValueFromPercent(this string Percent, decimal Total)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Percent</span></td>
        <td><p>Porcentagem, pode ser um numero ou uma string com o sinal de porcento. Ex.: 15 ou 15%</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Total</span></td>
        <td><p>Valor Total (Representa 100%)</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><p>Um numero decimal contendo o valor relativo a porcentagem</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_CartesianProduct_" data-uid="InnerLibs.Mathematic.CartesianProduct*"></a>
  <h4 id="InnerLibs_Mathematic_CartesianProduct__1___0_____" data-uid="InnerLibs.Mathematic.CartesianProduct``1(``0[][])">CartesianProduct&lt;T&gt;(T[][])</h4>
  <div class="markdown level1 summary"><p>Retorna todas as possiveis combinações de Arrays do mesmo tipo (Produto Cartesiano)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;T[]&gt; CartesianProduct&lt;T&gt;(params T[][] Sets)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>T[][]</td>
        <td><span class="parametername">Sets</span></td>
        <td><p>Lista de Arrays para combinar</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;T[]&gt;</td>
        <td><p>Plano Cartesiano</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Ceil_" data-uid="InnerLibs.Mathematic.Ceil*"></a>
  <h4 id="InnerLibs_Mathematic_Ceil_System_Decimal_" data-uid="InnerLibs.Mathematic.Ceil(System.Decimal)">Ceil(Decimal)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para cima. Ex.: 4,5 -&gt; 5</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long Ceil(this decimal Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero a ser arredondado</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Um numero inteiro (Integer ou Int)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Ceil_" data-uid="InnerLibs.Mathematic.Ceil*"></a>
  <h4 id="InnerLibs_Mathematic_Ceil_System_Double_" data-uid="InnerLibs.Mathematic.Ceil(System.Double)">Ceil(Double)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para cima. Ex.: 4,5 -&gt; 5</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long Ceil(this double Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero a ser arredondado</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Um numero inteiro (Integer ou Int)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_EvaluateExpression_" data-uid="InnerLibs.Mathematic.EvaluateExpression*"></a>
  <h4 id="InnerLibs_Mathematic_EvaluateExpression_System_String_System_Boolean_" data-uid="InnerLibs.Mathematic.EvaluateExpression(System.String,System.Boolean)">EvaluateExpression(String, Boolean)</h4>
  <div class="markdown level1 summary"><p>Executa uma Expressão matematica/lógica simples</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static object EvaluateExpression(string Formula, bool Exception = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Formula</span></td>
        <td><p>Expressão matematica</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">Exception</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_EvaluateExpression_" data-uid="InnerLibs.Mathematic.EvaluateExpression*"></a>
  <h4 id="InnerLibs_Mathematic_EvaluateExpression__1_System_String_System_Boolean_" data-uid="InnerLibs.Mathematic.EvaluateExpression``1(System.String,System.Boolean)">EvaluateExpression&lt;T&gt;(String, Boolean)</h4>
  <div class="markdown level1 summary"><p>Executa uma Expressão matematica/lógica simples</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static T EvaluateExpression&lt;T&gt;(string Formula, bool Exception = false)
    where T : struct</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Formula</span></td>
        <td><p>Expressão matematica</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">Exception</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Factorial_" data-uid="InnerLibs.Mathematic.Factorial*"></a>
  <h4 id="InnerLibs_Mathematic_Factorial_System_Int32_" data-uid="InnerLibs.Mathematic.Factorial(System.Int32)">Factorial(Int32)</h4>
  <div class="markdown level1 summary"><p>Calcula o fatorial de um numero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static int Factorial(this int Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero inteiro positivo maior que zero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><p>fatorial do numero inteiro</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Fibonacci_" data-uid="InnerLibs.Mathematic.Fibonacci*"></a>
  <h4 id="InnerLibs_Mathematic_Fibonacci_System_Int32_" data-uid="InnerLibs.Mathematic.Fibonacci(System.Int32)">Fibonacci(Int32)</h4>
  <div class="markdown level1 summary"><p>Retorna uma sequencia Fibonacci de N numeros</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;int&gt; Fibonacci(int Length)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Length</span></td>
        <td><p>Quantidade de numeros da sequencia</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td><p>Lista com a sequencia Fibonacci</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Floor_" data-uid="InnerLibs.Mathematic.Floor*"></a>
  <h4 id="InnerLibs_Mathematic_Floor_System_Decimal_" data-uid="InnerLibs.Mathematic.Floor(System.Decimal)">Floor(Decimal)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para baixo. Ex.: 4,5 -&gt; 4</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long Floor(this decimal Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero a ser arredondado</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Um numero inteiro (Integer ou Int)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Floor_" data-uid="InnerLibs.Mathematic.Floor*"></a>
  <h4 id="InnerLibs_Mathematic_Floor_System_Double_" data-uid="InnerLibs.Mathematic.Floor(System.Double)">Floor(Double)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para baixo. Ex.: 4,5 -&gt; 4</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long Floor(this double Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero a ser arredondado</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Um numero inteiro (Integer ou Int)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_GeometricProgression_" data-uid="InnerLibs.Mathematic.GeometricProgression*"></a>
  <h4 id="InnerLibs_Mathematic_GeometricProgression_System_Int32_System_Int32_System_Int32_" data-uid="InnerLibs.Mathematic.GeometricProgression(System.Int32,System.Int32,System.Int32)">GeometricProgression(Int32, Int32, Int32)</h4>
  <div class="markdown level1 summary"><p>Retorna uma Progressão Gemoétrica com N numeros</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;int&gt; GeometricProgression(int FirstNumber, int Constant, int Length)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">FirstNumber</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Constant</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Length</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.Int32</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_GetDecimalPlaces_" data-uid="InnerLibs.Mathematic.GetDecimalPlaces*"></a>
  <h4 id="InnerLibs_Mathematic_GetDecimalPlaces_System_Decimal_System_Int32_System_Globalization_CultureInfo_" data-uid="InnerLibs.Mathematic.GetDecimalPlaces(System.Decimal,System.Int32,System.Globalization.CultureInfo)">GetDecimalPlaces(Decimal, Int32, CultureInfo)</h4>
  <div class="markdown level1 summary"><p>Retorna um numero inteiro representando a parte decimal de um numero decimal</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long GetDecimalPlaces(this decimal Value, int DecimalPlaces = 0, CultureInfo Culture = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Value</span></td>
        <td><p>Valor decimal</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">DecimalPlaces</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Globalization.CultureInfo</span></td>
        <td><span class="parametername">Culture</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_IsBetween_" data-uid="InnerLibs.Mathematic.IsBetween*"></a>
  <h4 id="InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_" data-uid="InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)">IsBetween&lt;Type&gt;(Type, Object, Object)</h4>
  <div class="markdown level1 summary"><p>Verifica se um numero está entre outros 2 números</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static bool IsBetween&lt;Type&gt;(this Type Number, object FirstNumber, object SecondNumber)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td><span class="parametername">FirstNumber</span></td>
        <td><p>Primeiro numero comparador</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td><span class="parametername">SecondNumber</span></td>
        <td><p>Segundo numero comparador</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Lerp_" data-uid="InnerLibs.Mathematic.Lerp*"></a>
  <h4 id="InnerLibs_Mathematic_Lerp_System_Single_System_Single_System_Single_" data-uid="InnerLibs.Mathematic.Lerp(System.Single,System.Single,System.Single)">Lerp(Single, Single, Single)</h4>
  <div class="markdown level1 summary"><p>Realiza um calculo de interpolação Linear</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static float Lerp(this float Start, float End, float Amount)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">Start</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">End</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">Amount</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_LimitIndex_" data-uid="InnerLibs.Mathematic.LimitIndex*"></a>
  <h4 id="InnerLibs_Mathematic_LimitIndex__1_System_Int32_System_Collections_Generic_IEnumerable___0__" data-uid="InnerLibs.Mathematic.LimitIndex``1(System.Int32,System.Collections.Generic.IEnumerable{``0})">LimitIndex&lt;AnyType&gt;(Int32, IEnumerable&lt;AnyType&gt;)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static int LimitIndex&lt;AnyType&gt;(this int Int, IEnumerable&lt;AnyType&gt; Collection)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Int</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;AnyType&gt;</td>
        <td><span class="parametername">Collection</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">AnyType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_LimitIndex_" data-uid="InnerLibs.Mathematic.LimitIndex*"></a>
  <h4 id="InnerLibs_Mathematic_LimitIndex__1_System_Int64_System_Collections_Generic_IEnumerable___0__" data-uid="InnerLibs.Mathematic.LimitIndex``1(System.Int64,System.Collections.Generic.IEnumerable{``0})">LimitIndex&lt;AnyType&gt;(Int64, IEnumerable&lt;AnyType&gt;)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static long LimitIndex&lt;AnyType&gt;(this long Lng, IEnumerable&lt;AnyType&gt; Collection)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><span class="parametername">Lng</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;AnyType&gt;</td>
        <td><span class="parametername">Collection</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">AnyType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_LimitRange_" data-uid="InnerLibs.Mathematic.LimitRange*"></a>
  <h4 id="InnerLibs_Mathematic_LimitRange__1___0_System_Object_System_Object_" data-uid="InnerLibs.Mathematic.LimitRange``1(``0,System.Object,System.Object)">LimitRange&lt;Type&gt;(Type, Object, Object)</h4>
  <div class="markdown level1 summary"><p>Limita um range para um numero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Type LimitRange&lt;Type&gt;(this Type Number, object MinValue = null, object MaxValue = null)
    where Type : IConvertible</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td><span class="parametername">MinValue</span></td>
        <td><p>Valor Minimo para o numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Object</span></td>
        <td><span class="parametername">MaxValue</span></td>
        <td><p>Valor máximo para o numero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Round_" data-uid="InnerLibs.Mathematic.Round*"></a>
  <h4 id="InnerLibs_Mathematic_Round_System_Decimal_" data-uid="InnerLibs.Mathematic.Round(System.Decimal)">Round(Decimal)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para o valor inteiro mais próximo</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static int Round(this decimal Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Round_" data-uid="InnerLibs.Mathematic.Round*"></a>
  <h4 id="InnerLibs_Mathematic_Round_System_Decimal_System_Int32_System_Globalization_CultureInfo_" data-uid="InnerLibs.Mathematic.Round(System.Decimal,System.Int32,System.Globalization.CultureInfo)">Round(Decimal, Int32, CultureInfo)</h4>
  <div class="markdown level1 summary"><p>Arredonda um numero para baixo ou para cima de acordo com outro numero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static int Round(this decimal Number, int MiddleNumber = 5, CultureInfo Culture = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">MiddleNumber</span></td>
        <td><p>Numero Médio</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Globalization.CultureInfo</span></td>
        <td><span class="parametername">Culture</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_SetMaxValue_" data-uid="InnerLibs.Mathematic.SetMaxValue*"></a>
  <h4 id="InnerLibs_Mathematic_SetMaxValue__1___0___0_" data-uid="InnerLibs.Mathematic.SetMaxValue``1(``0,``0)">SetMaxValue&lt;Type&gt;(Type, Type)</h4>
  <div class="markdown level1 summary"><p>Limita o valor Maximo de um numero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Type SetMaxValue&lt;Type&gt;(this Type Number, Type MaxValue)
    where Type : IConvertible</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">MaxValue</span></td>
        <td><p>Valor Maximo</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_SetMinValue_" data-uid="InnerLibs.Mathematic.SetMinValue*"></a>
  <h4 id="InnerLibs_Mathematic_SetMinValue__1___0___0_" data-uid="InnerLibs.Mathematic.SetMinValue``1(``0,``0)">SetMinValue&lt;Type&gt;(Type, Type)</h4>
  <div class="markdown level1 summary"><p>Limita o valor minimo de um numero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static Type SetMinValue&lt;Type&gt;(this Type Number, Type MinValue)
    where Type : IConvertible</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">Type</span></td>
        <td><span class="parametername">MinValue</span></td>
        <td><p>Valor Maximo</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Slice_" data-uid="InnerLibs.Mathematic.Slice*"></a>
  <h4 id="InnerLibs_Mathematic_Slice_System_Decimal_System_Int32_" data-uid="InnerLibs.Mathematic.Slice(System.Decimal,System.Int32)">Slice(Decimal, Int32)</h4>
  <div class="markdown level1 summary"><p>Corta um numero decimal com a quantidade de casas especiicadas</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static decimal Slice(this decimal Value, int Places = 2)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Value</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Places</span></td>
        <td><p>Numero de casas apos a virgula</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Sum_" data-uid="InnerLibs.Mathematic.Sum*"></a>
  <h4 id="InnerLibs_Mathematic_Sum_System_Decimal___" data-uid="InnerLibs.Mathematic.Sum(System.Decimal[])">Sum(Decimal[])</h4>
  <div class="markdown level1 summary"><p>Soma todos os números de um array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static decimal Sum(params decimal[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><p>Decimal contendo a soma de todos os valores</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Sum_" data-uid="InnerLibs.Mathematic.Sum*"></a>
  <h4 id="InnerLibs_Mathematic_Sum_System_Double___" data-uid="InnerLibs.Mathematic.Sum(System.Double[])">Sum(Double[])</h4>
  <div class="markdown level1 summary"><p>Soma todos os números de um array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double Sum(params double[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p>Decimal contendo a soma de todos os valores</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Sum_" data-uid="InnerLibs.Mathematic.Sum*"></a>
  <h4 id="InnerLibs_Mathematic_Sum_System_Int32___" data-uid="InnerLibs.Mathematic.Sum(System.Int32[])">Sum(Int32[])</h4>
  <div class="markdown level1 summary"><p>Soma todos os números de um array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int Sum(params int[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><p>Decimal contendo a soma de todos os valores</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_Sum_" data-uid="InnerLibs.Mathematic.Sum*"></a>
  <h4 id="InnerLibs_Mathematic_Sum_System_Int64___" data-uid="InnerLibs.Mathematic.Sum(System.Int64[])">Sum(Int64[])</h4>
  <div class="markdown level1 summary"><p>Soma todos os números de um array</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static long Sum(params long[] Values)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span>[]</td>
        <td><span class="parametername">Values</span></td>
        <td><p>Array de números</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><p>Decimal contendo a soma de todos os valores</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToOrdinalNumber_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber*"></a>
  <h4 id="InnerLibs_Mathematic_ToOrdinalNumber_System_Decimal_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber(System.Decimal)">ToOrdinalNumber(Decimal)</h4>
  <div class="markdown level1 summary"><p>retorna o numeor em sua forma ordinal (inglês)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static string ToOrdinalNumber(this decimal Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Decimal</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToOrdinalNumber_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber*"></a>
  <h4 id="InnerLibs_Mathematic_ToOrdinalNumber_System_Double_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber(System.Double)">ToOrdinalNumber(Double)</h4>
  <div class="markdown level1 summary"><p>retorna o numeor em sua forma ordinal (inglês)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static string ToOrdinalNumber(this double Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToOrdinalNumber_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber*"></a>
  <h4 id="InnerLibs_Mathematic_ToOrdinalNumber_System_Int16_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber(System.Int16)">ToOrdinalNumber(Int16)</h4>
  <div class="markdown level1 summary"><p>retorna o numeor em sua forma ordinal (inglês)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static string ToOrdinalNumber(this short Number)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int16</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToOrdinalNumber_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber*"></a>
  <h4 id="InnerLibs_Mathematic_ToOrdinalNumber_System_Int32_System_Boolean_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber(System.Int32,System.Boolean)">ToOrdinalNumber(Int32, Boolean)</h4>
  <div class="markdown level1 summary"><p>retorna o numeor em sua forma ordinal (inglês)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static string ToOrdinalNumber(this int Number, bool ExcludeNumber = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">ExcludeNumber</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToOrdinalNumber_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber*"></a>
  <h4 id="InnerLibs_Mathematic_ToOrdinalNumber_System_Int64_System_Boolean_" data-uid="InnerLibs.Mathematic.ToOrdinalNumber(System.Int64,System.Boolean)">ToOrdinalNumber(Int64, Boolean)</h4>
  <div class="markdown level1 summary"><p>retorna o numeor em sua forma ordinal (inglês)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static string ToOrdinalNumber(this long Number, bool ExcludeNumber = false)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int64</span></td>
        <td><span class="parametername">Number</span></td>
        <td><p>Numero</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">ExcludeNumber</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_Mathematic_ToRadians_" data-uid="InnerLibs.Mathematic.ToRadians*"></a>
  <h4 id="InnerLibs_Mathematic_ToRadians_System_Double_" data-uid="InnerLibs.Mathematic.ToRadians(System.Double)">ToRadians(Double)</h4>
  <div class="markdown level1 summary"><p>COnverte graus para radianos</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Extension]
public static double ToRadians(this double Degrees)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Degrees</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_CreateDictionary__1___0_">ClassTools.CreateDictionary&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_System_Reflection_BindingFlags_">ClassTools.GetProperties(Object, BindingFlags)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_">ClassTools.GetProperties(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Type_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Type, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue__1_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue&lt;Type&gt;(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_HasProperty_System_Object_System_String_">ClassTools.HasProperty(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsArrayOf__1_System_Object_">ClassTools.IsArrayOf&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsDictionary_System_Object_">ClassTools.IsDictionary(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsInAny__1___0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsInAny&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;[], IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsList_System_Object_">ClassTools.IsList(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsNotIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsNotIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsType__1_System_Object_">ClassTools.IsType&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1___0___0___">ClassTools.NullCoalesce&lt;T&gt;(T, T[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullifyProperties__1___0_">ClassTools.NullifyProperties&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValue__1_System_Object_System_String___0_">ClassTools.SetPropertyValue&lt;Type&gt;(Object, String, Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValueFromCollection__1_System_Object_System_String_System_Collections_CollectionBase_">ClassTools.SetPropertyValueFromCollection&lt;Type&gt;(Object, String, CollectionBase)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ToFlatString_System_Object_System_String_">ClassTools.ToFlatString(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.DataManipulation.html#InnerLibs_DataManipulation_GetDbType_System_Object_">DataManipulation.GetDbType(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_DefineEmptyList__1___0_">Converter.DefineEmptyList&lt;T&gt;(T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_ChangeType__2___1_">Converter.ChangeType&lt;ToType, FromType&gt;(FromType)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.JsonViewer.html#InnerLibs_JsonViewer_CreateNode_System_Object_">JsonViewer.CreateNode(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_">Mathematic.IsBetween&lt;Type&gt;(Type, Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_SerializeJSON_System_Object_System_String_">Text.SerializeJSON(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNumber_System_Object_">Verify.IsNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNotNumber_System_Object_">Verify.IsNotNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlank__1_System_Object___0_">Verify.IfBlank&lt;T&gt;(Object, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0_System_Func___0_System_Boolean__">Verify.NullIf&lt;T&gt;(T, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0___0_">Verify.NullIf&lt;T&gt;(T, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_CreateFromAjax__1___0__System_String_System_String_System_Collections_Specialized_NameValueCollection_System_String_System_Text_Encoding_">Web.CreateFromAjax&lt;Type&gt;(ref Type, String, String, NameValueCollection, String, Encoding)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_AsListItem__3___0_System_Func___0___1__System_Func___0___2__">Web.AsListItem&lt;T, TextType, ValueType&gt;(T, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_GetCastedValue_System_Object_">WinForms.GetCastedValue(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_CastValueForControl_System_Object__System_Object_">WinForms.CastValueForControl(ref Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ApplyToControls__1___0_System_Web_UI_HtmlControls_HtmlControl___">LINQExtensions.ApplyToControls&lt;T&gt;(T, HtmlControl[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_HasSamePropertyValues__1___0___0_System_Func___0_System_Object____">LINQExtensions.HasSamePropertyValues&lt;T&gt;(T, T, Func&lt;T, Object&gt;[])</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
