<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class HtmlElement
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class HtmlElement
   ">
    <meta name="generator" content="docfx 2.37.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InnerLibs.HtmlParser.HtmlElement">
  
  
  <h1 id="InnerLibs_HtmlParser_HtmlElement" data-uid="InnerLibs.HtmlParser.HtmlElement" class="text-break">Class HtmlElement
  </h1>
  <div class="markdown level0 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">The HtmlElement object represents any HTML element. An element has a name and zero or more attributes.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a></div>
    <div class="level2"><span class="xref">HtmlElement</span></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlAnchorElement.html">HtmlAnchorElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlBreakLine.html">HtmlBreakLine</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlHorizontalRule.html">HtmlHorizontalRule</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlImageElement.html">HtmlImageElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlInputElement.html">HtmlInputElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlListElement.html">HtmlListElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlOptionElement.html">HtmlOptionElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlSelectElement.html">HtmlSelectElement</a></div>
      <div class="level3"><a class="xref" href="InnerLibs.HtmlParser.HtmlTimeElement.html">HtmlTimeElement</a></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_mParent">HtmlNode.mParent</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_ToJSON">HtmlNode.ToJSON()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_JsonRepresentation">HtmlNode.JsonRepresentation</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Next">HtmlNode.Next</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_FirstChild">HtmlNode.FirstChild</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_AsElement">HtmlNode.AsElement()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_AsElement__1">HtmlNode.AsElement&lt;ElementType&gt;()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_AsText">HtmlNode.AsText()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Index">HtmlNode.Index</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsChild">HtmlNode.IsChild</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsParent">HtmlNode.IsParent</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsRoot">HtmlNode.IsRoot</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_LastChild">HtmlNode.LastChild</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Parent">HtmlNode.Parent</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Previous">HtmlNode.Previous</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_AppendTo_InnerLibs_HtmlParser_HtmlElement_System_Boolean_">HtmlNode.AppendTo(HtmlElement, Boolean)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Closest_System_String_">HtmlNode.Closest(String)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_GetCommonAncestor_InnerLibs_HtmlParser_HtmlNode_">HtmlNode.GetCommonAncestor(HtmlNode)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsAncestorOf_InnerLibs_HtmlParser_HtmlNode_">HtmlNode.IsAncestorOf(HtmlNode)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsDescendentOf_InnerLibs_HtmlParser_HtmlNode_">HtmlNode.IsDescendentOf(HtmlNode)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsElement">HtmlNode.IsElement()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsElement__1">HtmlNode.IsElement&lt;HtmlElementType&gt;()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_IsText">HtmlNode.IsText()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Move_InnerLibs_HtmlParser_HtmlElement_System_Int32_">HtmlNode.Move(HtmlElement, Int32)</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Remove">HtmlNode.Remove()</a>
    </div>
    <div>
      <a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_TopParent">HtmlNode.TopParent()</a>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.Finalize()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="InnerLibs.HtmlParser.html">InnerLibs.HtmlParser</a></h6>
  <h6><strong>Assembly</strong>: InnerLibs.dll</h6>
  <h5 id="InnerLibs_HtmlParser_HtmlElement_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class HtmlElement : HtmlNode</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement__ctor_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement__ctor_InnerLibs_HtmlParser_HtmlElement_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor(InnerLibs.HtmlParser.HtmlElement)">HtmlElement(HtmlElement)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This constructs a new HTML element using a <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> as source.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement(HtmlElement Element)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td><span class="parametername">Element</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The htmlelement</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement__ctor_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement__ctor_System_String_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor(System.String,System.String)">HtmlElement(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This constructs a new HTML element with the specified tag name.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement(string name, string InnerHtml = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The name of this element</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">InnerHtml</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement__ctor_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement__ctor_System_Web_UI_HtmlControls_HtmlGenericControl_" data-uid="InnerLibs.HtmlParser.HtmlElement.#ctor(System.Web.UI.HtmlControls.HtmlGenericControl)">HtmlElement(HtmlGenericControl)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This constructs a new HTML element using a <span class="xref">System.Web.UI.HtmlControls.HtmlGenericControl</span> as source.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement(HtmlGenericControl HtmlControl)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlGenericControl</span></td>
        <td><span class="parametername">HtmlControl</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The server control</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="fields">Fields
  </h3>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlElement_mAttributes" data-uid="InnerLibs.HtmlParser.HtmlElement.mAttributes">mAttributes</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected HtmlAttributeCollection mAttributes</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlAttributeCollection.html">HtmlAttributeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlElement_mIsExplicitlyTerminated" data-uid="InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated">mIsExplicitlyTerminated</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected bool mIsExplicitlyTerminated</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlElement_mIsTerminated" data-uid="InnerLibs.HtmlParser.HtmlElement.mIsTerminated">mIsTerminated</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected bool mIsTerminated</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlElement_mName" data-uid="InnerLibs.HtmlParser.HtmlElement.mName">mName</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected string mName</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="InnerLibs_HtmlParser_HtmlElement_mNodes" data-uid="InnerLibs.HtmlParser.HtmlElement.mNodes">mNodes</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected HtmlNodeCollection mNodes</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Attribute_" data-uid="InnerLibs.HtmlParser.HtmlElement.Attribute*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Attribute_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)">Attribute[String]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the value of specific attibute</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string Attribute { get; set; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Attributes_" data-uid="InnerLibs.HtmlParser.HtmlElement.Attributes*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Attributes" data-uid="InnerLibs.HtmlParser.HtmlElement.Attributes">Attributes</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This is the collection of attributes associated with this element.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlAttributeCollection Attributes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlAttributeCollection.html">HtmlAttributeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_AttributesNames_" data-uid="InnerLibs.HtmlParser.HtmlElement.AttributesNames*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_AttributesNames" data-uid="InnerLibs.HtmlParser.HtmlElement.AttributesNames">AttributesNames</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the name of al attributes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;string&gt; AttributesNames { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ChildElements_" data-uid="InnerLibs.HtmlParser.HtmlElement.ChildElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ChildElements" data-uid="InnerLibs.HtmlParser.HtmlElement.ChildElements">ChildElements</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the child elements of this element (excluding HtmlText)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;HtmlElement&gt; ChildElements { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Class_" data-uid="InnerLibs.HtmlParser.HtmlElement.Class*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Class" data-uid="InnerLibs.HtmlParser.HtmlElement.Class">Class</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets os sets a boolean value for toggle an specific class</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[TypeConverter(typeof(ExpandableObjectConverter))]
public ClassList Class { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.ClassList.html">ClassList</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ContentText_" data-uid="InnerLibs.HtmlParser.HtmlElement.ContentText*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ContentText" data-uid="InnerLibs.HtmlParser.HtmlElement.ContentText">ContentText</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return thedirect child text of this element (excluding HtmlElement)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IEnumerable&lt;HtmlText&gt; ContentText { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="InnerLibs.HtmlParser.HtmlText.html">HtmlText</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Data_" data-uid="InnerLibs.HtmlParser.HtmlElement.Data*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Data_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.Data(System.String)">Data[String]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the value of specific data-attribute</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string Data { get; set; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Disabled_" data-uid="InnerLibs.HtmlParser.HtmlElement.Disabled*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Disabled" data-uid="InnerLibs.HtmlParser.HtmlElement.Disabled">Disabled</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets os sets a value indicating thats element is disabled</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Disabled { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ElementRepresentation_" data-uid="InnerLibs.HtmlParser.HtmlElement.ElementRepresentation*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ElementRepresentation" data-uid="InnerLibs.HtmlParser.HtmlElement.ElementRepresentation">ElementRepresentation</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will return the HTML representation of this element.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ElementRepresentation { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_ElementRepresentation">HtmlNode.ElementRepresentation</a></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_HTML_" data-uid="InnerLibs.HtmlParser.HtmlElement.HTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_HTML" data-uid="InnerLibs.HtmlParser.HtmlElement.HTML">HTML</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will return the HTML for this element and all subnodes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string HTML { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_HTML">HtmlNode.HTML</a></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ID_" data-uid="InnerLibs.HtmlParser.HtmlElement.ID*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ID" data-uid="InnerLibs.HtmlParser.HtmlElement.ID">ID</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">The ID of element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ID { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_InnerHTML_" data-uid="InnerLibs.HtmlParser.HtmlElement.InnerHTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_InnerHTML" data-uid="InnerLibs.HtmlParser.HtmlElement.InnerHTML">InnerHTML</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return a html string of child nodes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string InnerHTML { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_InnerText_" data-uid="InnerLibs.HtmlParser.HtmlElement.InnerText*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_InnerText" data-uid="InnerLibs.HtmlParser.HtmlElement.InnerText">InnerText</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string InnerText { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_IsExplicitlyTerminated_" data-uid="InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_IsExplicitlyTerminated" data-uid="InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated">IsExplicitlyTerminated</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This flag indicates that the element is explicitly closed using the /name method.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsExplicitlyTerminated { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_IsTerminated_" data-uid="InnerLibs.HtmlParser.HtmlElement.IsTerminated*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_IsTerminated" data-uid="InnerLibs.HtmlParser.HtmlElement.IsTerminated">IsTerminated</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsTerminated { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_IsVisible_" data-uid="InnerLibs.HtmlParser.HtmlElement.IsVisible*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_IsVisible" data-uid="InnerLibs.HtmlParser.HtmlElement.IsVisible">IsVisible</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsVisible { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Name_" data-uid="InnerLibs.HtmlParser.HtmlElement.Name*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Name" data-uid="InnerLibs.HtmlParser.HtmlElement.Name">Name</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This is the tag name of the element. e.g. BR, BODY, TABLE etc.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public virtual string Name { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Nodes_" data-uid="InnerLibs.HtmlParser.HtmlElement.Nodes*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Nodes" data-uid="InnerLibs.HtmlParser.HtmlElement.Nodes">Nodes</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="3">This is the collection of all child nodes of this one. If this node is actually a text
node, this will return nothing.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public virtual HtmlNodeCollection Nodes { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_QuerySelectorAll_" data-uid="InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_QuerySelectorAll_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)">QuerySelectorAll[String]</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Travesse element with a CSS selector an retireve nodes</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection this[string CssSelector] { get; }</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Teh CSS selector</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Style_" data-uid="InnerLibs.HtmlParser.HtmlElement.Style*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Style" data-uid="InnerLibs.HtmlParser.HtmlElement.Style">Style</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">The CSS style of element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[TypeConverter(typeof(ExpandableObjectConverter))]
public CssProperties Style { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.CssProperties.html">CssProperties</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Title_" data-uid="InnerLibs.HtmlParser.HtmlElement.Title*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Title" data-uid="InnerLibs.HtmlParser.HtmlElement.Title">Title</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Gets or sets the Title attribute of this element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string Title { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_XHTML_" data-uid="InnerLibs.HtmlParser.HtmlElement.XHTML*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_XHTML" data-uid="InnerLibs.HtmlParser.HtmlElement.XHTML">XHTML</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will return the XHTML for this element and all subnodes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string XHTML { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_XHTML">HtmlNode.XHTML</a></div>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_AddAttribute_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddAttribute*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_AddAttribute_System_String_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)">AddAttribute(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a attribute to this element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement AddAttribute(string Name, string Value = null)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Value</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_AddNode_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_AddNode_InnerLibs_HtmlParser_HtmlNode___" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])">AddNode(HtmlNode[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a node (or nodes) to collection</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddNode(params HtmlNode[] Node)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html">HtmlNode</a>[]</td>
        <td><span class="parametername">Node</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_AddNode_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_AddNode_System_String_System_Int32_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)">AddNode(String, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a node to collection using a HTML string as base</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddNode(string HTML, int Index = 0)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">HTML</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_AddNode_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_AddNode_System_Web_UI_HtmlControls_HtmlGenericControl_" data-uid="InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)">AddNode(HtmlGenericControl)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Add a node to collection using an <span class="xref">System.Web.UI.HtmlControls.HtmlGenericControl</span> as base</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void AddNode(HtmlGenericControl Node)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Web.UI.HtmlControls.HtmlGenericControl</span></td>
        <td><span class="parametername">Node</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Censor_" data-uid="InnerLibs.HtmlParser.HtmlElement.Censor*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Censor_System_Char_System_String___" data-uid="InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])">Censor(Char, String[])</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">ReplaceFrom Badwords in all text elements.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override bool Censor(char CensorChar, params string[] BadWords)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Char</span></td>
        <td><span class="parametername">CensorChar</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">BadWords</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_Censor_System_Char_System_String___">HtmlNode.Censor(Char, String[])</a></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Children_" data-uid="InnerLibs.HtmlParser.HtmlElement.Children*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Children_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.Children(System.String)">Children(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the first child element thats match de CssSelector</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement Children(string CssSelector = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Children_" data-uid="InnerLibs.HtmlParser.HtmlElement.Children*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Children__1_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)">Children&lt;ElementType&gt;(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the first child element thats match de CssSelector or first child element of specific type if CssSelector is blank</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ElementType Children&lt;ElementType&gt;(string CssSelector = &quot;&quot;)
    where ElementType : HtmlElement</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">CssSelector</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ElementType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">ElementType</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Clone_" data-uid="InnerLibs.HtmlParser.HtmlElement.Clone*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Clone" data-uid="InnerLibs.HtmlParser.HtmlElement.Clone">Clone()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Clone this element into a new HtmlElement</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement Clone()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_CreateWebFormControl_" data-uid="InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_CreateWebFormControl__1" data-uid="InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1">CreateWebFormControl&lt;Type&gt;()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Create a <span class="xref">System.Web.UI.HtmlControls.HtmlControl</span> using this <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> as source</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Type CreateWebFormControl&lt;Type&gt;()
    where Type : HtmlControl</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">Type</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Destroy_" data-uid="InnerLibs.HtmlParser.HtmlElement.Destroy*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Destroy" data-uid="InnerLibs.HtmlParser.HtmlElement.Destroy">Destroy()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove this element from parent element. If parent element is null, nothing happens</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool Destroy()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_FindElements_" data-uid="InnerLibs.HtmlParser.HtmlElement.FindElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_FindElements__1_System_Func___0_System_Boolean__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)">FindElements&lt;NodeType&gt;(Func&lt;NodeType, Boolean&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will search though this collection of nodes for all elements with matchs the predicate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection FindElements&lt;NodeType&gt;(Func&lt;NodeType, bool&gt; predicate, bool SearchChildren = true)
    where NodeType : HtmlNode</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;NodeType, <span class="xref">System.Boolean</span>&gt;</td>
        <td><span class="parametername">predicate</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The predicate to match the nodes</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Travesse the child nodes</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">NodeType</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Type of Node ( <a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a> or <a class="xref" href="InnerLibs.HtmlParser.HtmlText.html">HtmlText</a>)</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_FixText_" data-uid="InnerLibs.HtmlParser.HtmlElement.FixText*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_FixText" data-uid="InnerLibs.HtmlParser.HtmlElement.FixText">FixText()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Fix the punctuation, white spaces and captalization of the child text elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override void FixText()</code></pre>
  </div>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_FixText">HtmlNode.FixText()</a></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_GetTextElements_" data-uid="InnerLibs.HtmlParser.HtmlElement.GetTextElements*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_GetTextElements_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)">GetTextElements(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Returns all Text elements excluding style and script elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlNodeCollection GetTextElements(bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_HasAttribute_" data-uid="InnerLibs.HtmlParser.HtmlElement.HasAttribute*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_HasAttribute_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)">HasAttribute(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Verify if this element has an specific attribute</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool HasAttribute(string Name)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_HasClass_" data-uid="InnerLibs.HtmlParser.HtmlElement.HasClass*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_HasClass_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)">HasClass(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Verify if this element has an specific class</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool HasClass(string ClassName = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">ClassName</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Mutate_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Mutate_InnerLibs_HtmlParser_HtmlElement_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)">Mutate(HtmlElement)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Transform the current element into a new element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Mutate(HtmlElement Element)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td><span class="parametername">Element</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">New element</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Mutate_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Mutate_InnerLibs_HtmlParser_HtmlNodeCollection_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)">Mutate(HtmlNodeCollection)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Transform the current element into a new set of elements</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Mutate(HtmlNodeCollection Elements)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlNodeCollection.html">HtmlNodeCollection</a></td>
        <td><span class="parametername">Elements</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Collection of new elements</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_Mutate_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_Mutate_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)">Mutate(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="3">Transform the current element into a new element or set of elements using a html string
as source</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Mutate(string Html)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Html</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">Html String</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ParseEmoji_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseEmoji*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ParseEmoji_System_Func_System_String_System_String__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)">ParseEmoji(Func&lt;String, String&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Find :emoji: and replace then using specific method</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ParseEmoji(Func&lt;string, string&gt; Method = null, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">System.String</span>, <span class="xref">System.String</span>&gt;</td>
        <td><span class="parametername">Method</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ParseHashTags_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseHashTags*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ParseHashTags_System_Func_System_String_System_String__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)">ParseHashTags(Func&lt;String, String&gt;, Boolean)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ParseHashTags(Func&lt;string, string&gt; Method, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">System.String</span>, <span class="xref">System.String</span>&gt;</td>
        <td><span class="parametername">Method</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ParseOEmbed_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseOEmbed*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ParseOEmbed_System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)">ParseOEmbed(Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Find URLs out of Anchor elements and replace then to their respective oEmbed</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ParseOEmbed(bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ParseURL_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseURL*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ParseURL_System_Boolean_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)">ParseURL(Boolean, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Find URLs out of Anchor elements and replace then to anchors</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ParseURL(bool SearchChildren = true, string Target = &quot;_self&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Target</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ParseUsername_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseUsername*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ParseUsername_System_Func_System_String_System_String__System_Boolean_" data-uid="InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)">ParseUsername(Func&lt;String, String&gt;, Boolean)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Find @mentions and replace then using specific method</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void ParseUsername(Func&lt;string, string&gt; Method, bool SearchChildren = true)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Func</span>&lt;<span class="xref">System.String</span>, <span class="xref">System.String</span>&gt;</td>
        <td><span class="parametername">Method</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><span class="parametername">SearchChildren</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_RemoveAttribute_" data-uid="InnerLibs.HtmlParser.HtmlElement.RemoveAttribute*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_RemoveAttribute_System_String_" data-uid="InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)">RemoveAttribute(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Remove an attribute from element</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HtmlElement RemoveAttribute(string Name)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">Name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="InnerLibs.HtmlParser.HtmlElement.html">HtmlElement</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_SideClone_" data-uid="InnerLibs.HtmlParser.HtmlElement.SideClone*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_SideClone_System_Int32_" data-uid="InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)">SideClone(Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Clone this element into a new HtmlElement and inserts into same parent</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void SideClone(int Index = -1)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Index</span></td>
        <td><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The position of clone element. Use -1 to insert in the same position of the original element</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ToString_" data-uid="InnerLibs.HtmlParser.HtmlElement.ToString*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ToString" data-uid="InnerLibs.HtmlParser.HtmlElement.ToString">ToString()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">This will return the HTML representation of this element.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ToString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><a class="xref" href="InnerLibs.HtmlParser.HtmlNode.html#InnerLibs_HtmlParser_HtmlNode_ToString">HtmlNode.ToString()</a></div>
  
  
  <a id="InnerLibs_HtmlParser_HtmlElement_ToXmlElement_" data-uid="InnerLibs.HtmlParser.HtmlElement.ToXmlElement*"></a>
  <h4 id="InnerLibs_HtmlParser_HtmlElement_ToXmlElement" data-uid="InnerLibs.HtmlParser.HtmlElement.ToXmlElement">ToXmlElement()</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/InnerLibs.HtmlParser.HtmlElement.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Return the <span class="xref">System.Xml.XmlElement</span> equivalent to this node</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public XmlElement ToXmlElement()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Xml.XmlElement</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_CreateDictionary__1___0_">ClassTools.CreateDictionary&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_System_Reflection_BindingFlags_">ClassTools.GetProperties(Object, BindingFlags)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetProperties_System_Object_">ClassTools.GetProperties(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Type_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Type, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue__1_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue&lt;Type&gt;(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_GetPropertyValue_System_Object_System_String_System_Boolean_">ClassTools.GetPropertyValue(Object, String, Boolean)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_HasProperty_System_Object_System_String_">ClassTools.HasProperty(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsArrayOf__1_System_Object_">ClassTools.IsArrayOf&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsDictionary_System_Object_">ClassTools.IsDictionary(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsInAny__1___0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsInAny&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;[], IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsList_System_Object_">ClassTools.IsList(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__">ClassTools.IsNotIn&lt;Type&gt;(Type, IEnumerable&lt;Type&gt;, IEqualityComparer&lt;Type&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsNotIn__1___0_System_String_System_Collections_Generic_IEqualityComparer_System_Char__">ClassTools.IsNotIn&lt;Type&gt;(Type, String, IEqualityComparer&lt;Char&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_IsType__1_System_Object_">ClassTools.IsType&lt;T&gt;(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullCoalesce__1___0___0___">ClassTools.NullCoalesce&lt;T&gt;(T, T[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_NullifyProperties__1___0_">ClassTools.NullifyProperties&lt;Type&gt;(Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValue__1_System_Object_System_String___0_">ClassTools.SetPropertyValue&lt;Type&gt;(Object, String, Type)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_SetPropertyValueFromCollection__1_System_Object_System_String_System_Collections_CollectionBase_">ClassTools.SetPropertyValueFromCollection&lt;Type&gt;(Object, String, CollectionBase)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.ClassTools.html#InnerLibs_ClassTools_ToFlatString_System_Object_System_String_">ClassTools.ToFlatString(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.DataManipulation.html#InnerLibs_DataManipulation_GetDbType_System_Object_">DataManipulation.GetDbType(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_DefineEmptyList__1___0_">Converter.DefineEmptyList&lt;T&gt;(T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Converter.html#InnerLibs_Converter_ChangeType__2___1_">Converter.ChangeType&lt;ToType, FromType&gt;(FromType)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.JsonViewer.html#InnerLibs_JsonViewer_CreateNode_System_Object_">JsonViewer.CreateNode(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Mathematic.html#InnerLibs_Mathematic_IsBetween__1___0_System_Object_System_Object_">Mathematic.IsBetween&lt;Type&gt;(Type, Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Text.html#InnerLibs_Text_SerializeJSON_System_Object_System_String_">Text.SerializeJSON(Object, String)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNumber_System_Object_">Verify.IsNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IsNotNumber_System_Object_">Verify.IsNotNumber(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_IfBlank__1_System_Object___0_">Verify.IfBlank&lt;T&gt;(Object, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0_System_Func___0_System_Boolean__">Verify.NullIf&lt;T&gt;(T, Func&lt;T, Boolean&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Verify.html#InnerLibs_Verify_NullIf__1___0___0_">Verify.NullIf&lt;T&gt;(T, T)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_CreateFromAjax__1___0__System_String_System_String_System_Collections_Specialized_NameValueCollection_System_String_System_Text_Encoding_">Web.CreateFromAjax&lt;Type&gt;(ref Type, String, String, NameValueCollection, String, Encoding)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.Web.html#InnerLibs_Web_AsListItem__3___0_System_Func___0___1__System_Func___0___2__">Web.AsListItem&lt;T, TextType, ValueType&gt;(T, Func&lt;T, TextType&gt;, Func&lt;T, ValueType&gt;)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_GetCastedValue_System_Object_">WinForms.GetCastedValue(Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.WinForms.html#InnerLibs_WinForms_CastValueForControl_System_Object__System_Object_">WinForms.CastValueForControl(ref Object, Object)</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_ApplyToControls__1___0_System_Web_UI_HtmlControls_HtmlControl___">LINQExtensions.ApplyToControls&lt;T&gt;(T, HtmlControl[])</a>
  </div>
  <div>
      <a class="xref" href="InnerLibs.LINQ.LINQExtensions.html#InnerLibs_LINQ_LINQExtensions_HasSamePropertyValues__1___0___0_System_Func___0_System_Object____">LINQExtensions.HasSamePropertyValues&lt;T&gt;(T, T, Func&lt;T, Object&gt;[])</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
