### YamlMime:ManagedReference
items:
- uid: InnerLibs.EnhancedCollectionEditor
  commentId: T:InnerLibs.EnhancedCollectionEditor
  id: EnhancedCollectionEditor
  parent: InnerLibs
  children:
  - InnerLibs.EnhancedCollectionEditor.#ctor(System.Type)
  - InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
  - InnerLibs.EnhancedCollectionEditor.BaseCollectionType
  - InnerLibs.EnhancedCollectionEditor.BaseItemType
  - InnerLibs.EnhancedCollectionEditor.BaseNameFromType(System.Type)
  - InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName(System.String)
  - InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances
  - InnerLibs.EnhancedCollectionEditor.CreateCollectionForm
  - InnerLibs.EnhancedCollectionEditor.CreateInstance(System.Type)
  - InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes
  - InnerLibs.EnhancedCollectionEditor.CTRL_addButton
  - InnerLibs.EnhancedCollectionEditor.CTRL_cancelButton
  - InnerLibs.EnhancedCollectionEditor.CTRL_downButton
  - InnerLibs.EnhancedCollectionEditor.CTRL_listbox
  - InnerLibs.EnhancedCollectionEditor.CTRL_okButton
  - InnerLibs.EnhancedCollectionEditor.CTRL_propertyBrowser
  - InnerLibs.EnhancedCollectionEditor.CTRL_removeButton
  - InnerLibs.EnhancedCollectionEditor.CTRL_upButton
  - InnerLibs.EnhancedCollectionEditor.DisplayError(System.String)
  - InnerLibs.EnhancedCollectionEditor.EditorFormCreated
  - InnerLibs.EnhancedCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  - InnerLibs.EnhancedCollectionEditor.ExcludedTypes
  - InnerLibs.EnhancedCollectionEditor.Finalize
  - InnerLibs.EnhancedCollectionEditor.FormCaption
  - InnerLibs.EnhancedCollectionEditor.GetControlByName(System.String,System.Windows.Forms.Control.ControlCollection)
  - InnerLibs.EnhancedCollectionEditor.GetVersion
  - InnerLibs.EnhancedCollectionEditor.NameService
  - InnerLibs.EnhancedCollectionEditor.NewItemCreated
  - InnerLibs.EnhancedCollectionEditor.PropertyValueChanged
  - InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
  - InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
  langs:
  - csharp
  - vb
  name: EnhancedCollectionEditor
  nameWithType: EnhancedCollectionEditor
  fullName: InnerLibs.EnhancedCollectionEditor
  type: Class
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: EnhancedCollectionEditor
    path: CollectionEditos.vb
    startLine: 37
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: 'public abstract class EnhancedCollectionEditor : CollectionEditor'
    content.vb: >-
      Public MustInherit Class EnhancedCollectionEditor
          Inherits CollectionEditor
  inheritance:
  - System.Object
  - System.Drawing.Design.UITypeEditor
  - System.ComponentModel.Design.CollectionEditor
  derivedClasses:
  - InnerLibs.QuestionTest.QuestionEditor
  inheritedMembers:
  - System.ComponentModel.Design.CollectionEditor.CancelChanges
  - System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
  - System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
  - System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
  - System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
  - System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
  - System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
  - System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
  - System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])
  - System.ComponentModel.Design.CollectionEditor.ShowHelp
  - System.ComponentModel.Design.CollectionEditor.CollectionItemType
  - System.ComponentModel.Design.CollectionEditor.CollectionType
  - System.ComponentModel.Design.CollectionEditor.Context
  - System.ComponentModel.Design.CollectionEditor.NewItemTypes
  - System.ComponentModel.Design.CollectionEditor.HelpTopic
  - System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  - System.Drawing.Design.UITypeEditor.GetEditStyle
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  - System.Drawing.Design.UITypeEditor.IsDropDownResizable
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.CreateDictionary
  - System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  - System.Object.InnerLibs.ClassTools.GetProperties
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  - System.Object.InnerLibs.ClassTools.IsArrayOf``1
  - System.Object.InnerLibs.ClassTools.IsDictionary
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor}[],System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  - System.Object.InnerLibs.ClassTools.IsList
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - System.Object.InnerLibs.ClassTools.IsType``1
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor[])
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.NullifyProperties
  - System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  - System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  - System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  - System.Object.InnerLibs.DataManipulation.GetDbType
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Converter.DefineEmptyList
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Converter.ChangeType``1
  - System.Object.InnerLibs.JsonViewer.CreateNode
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  - System.Object.InnerLibs.Text.SerializeJSON(System.String)
  - System.Object.InnerLibs.Verify.IsNumber
  - System.Object.InnerLibs.Verify.IsNotNumber
  - System.Object.InnerLibs.Verify.IfBlank``1({T})
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Verify.NullIf(System.Func{InnerLibs.EnhancedCollectionEditor,System.Boolean})
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Verify.NullIf(InnerLibs.EnhancedCollectionEditor)
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.EnhancedCollectionEditor,{TextType}},System.Func{InnerLibs.EnhancedCollectionEditor,{ValueType}})
  - System.Object.InnerLibs.WinForms.GetCastedValue
  - System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  - InnerLibs.EnhancedCollectionEditor.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor,System.Func{InnerLibs.EnhancedCollectionEditor,System.Object}[])
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_listbox
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_listbox
  id: CTRL_listbox
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_listbox
  nameWithType: EnhancedCollectionEditor.CTRL_listbox
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_listbox
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_listbox
    path: CollectionEditos.vb
    startLine: 41
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_listbox = "listbox"
    return:
      type: System.String
    content.vb: Protected Const CTRL_listbox As String = "listbox"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_downButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_downButton
  id: CTRL_downButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_downButton
  nameWithType: EnhancedCollectionEditor.CTRL_downButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_downButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_downButton
    path: CollectionEditos.vb
    startLine: 43
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_downButton = "downButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_downButton As String = "downButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_upButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_upButton
  id: CTRL_upButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_upButton
  nameWithType: EnhancedCollectionEditor.CTRL_upButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_upButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_upButton
    path: CollectionEditos.vb
    startLine: 44
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_upButton = "upButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_upButton As String = "upButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_okButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_okButton
  id: CTRL_okButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_okButton
  nameWithType: EnhancedCollectionEditor.CTRL_okButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_okButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_okButton
    path: CollectionEditos.vb
    startLine: 45
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_okButton = "okButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_okButton As String = "okButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_cancelButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_cancelButton
  id: CTRL_cancelButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_cancelButton
  nameWithType: EnhancedCollectionEditor.CTRL_cancelButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_cancelButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_cancelButton
    path: CollectionEditos.vb
    startLine: 46
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_cancelButton = "cancelButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_cancelButton As String = "cancelButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_addButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_addButton
  id: CTRL_addButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_addButton
  nameWithType: EnhancedCollectionEditor.CTRL_addButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_addButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_addButton
    path: CollectionEditos.vb
    startLine: 47
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_addButton = "addButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_addButton As String = "addButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_removeButton
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_removeButton
  id: CTRL_removeButton
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_removeButton
  nameWithType: EnhancedCollectionEditor.CTRL_removeButton
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_removeButton
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_removeButton
    path: CollectionEditos.vb
    startLine: 48
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_removeButton = "removeButton"
    return:
      type: System.String
    content.vb: Protected Const CTRL_removeButton As String = "removeButton"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.CTRL_propertyBrowser
  commentId: F:InnerLibs.EnhancedCollectionEditor.CTRL_propertyBrowser
  id: CTRL_propertyBrowser
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CTRL_propertyBrowser
  nameWithType: EnhancedCollectionEditor.CTRL_propertyBrowser
  fullName: InnerLibs.EnhancedCollectionEditor.CTRL_propertyBrowser
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CTRL_propertyBrowser
    path: CollectionEditos.vb
    startLine: 49
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected const string CTRL_propertyBrowser = "propertyBrowser"
    return:
      type: System.String
    content.vb: Protected Const CTRL_propertyBrowser As String = "propertyBrowser"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: InnerLibs.EnhancedCollectionEditor.FormCaption
  commentId: P:InnerLibs.EnhancedCollectionEditor.FormCaption
  id: FormCaption
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: FormCaption
  nameWithType: EnhancedCollectionEditor.FormCaption
  fullName: InnerLibs.EnhancedCollectionEditor.FormCaption
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: FormCaption
    path: CollectionEditos.vb
    startLine: 61
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected string FormCaption { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property FormCaption As String
  overload: InnerLibs.EnhancedCollectionEditor.FormCaption*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
  commentId: P:InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
  id: ShowPropGridHelp
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: ShowPropGridHelp
  nameWithType: EnhancedCollectionEditor.ShowPropGridHelp
  fullName: InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: ShowPropGridHelp
    path: CollectionEditos.vb
    startLine: 63
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected bool ShowPropGridHelp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property ShowPropGridHelp As Boolean
  overload: InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
  commentId: P:InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
  id: AllowMultipleSelect
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: AllowMultipleSelect
  nameWithType: EnhancedCollectionEditor.AllowMultipleSelect
  fullName: InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: AllowMultipleSelect
    path: CollectionEditos.vb
    startLine: 64
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected bool AllowMultipleSelect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property AllowMultipleSelect As Boolean
  overload: InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
  commentId: P:InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
  id: UsePropGridChangeEvent
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: UsePropGridChangeEvent
  nameWithType: EnhancedCollectionEditor.UsePropGridChangeEvent
  fullName: InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: UsePropGridChangeEvent
    path: CollectionEditos.vb
    startLine: 65
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected bool UsePropGridChangeEvent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property UsePropGridChangeEvent As Boolean
  overload: InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.NameService
  commentId: P:InnerLibs.EnhancedCollectionEditor.NameService
  id: NameService
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: NameService
  nameWithType: EnhancedCollectionEditor.NameService
  fullName: InnerLibs.EnhancedCollectionEditor.NameService
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: NameService
    path: CollectionEditos.vb
    startLine: 66
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected NameServices NameService { get; set; }
    parameters: []
    return:
      type: InnerLibs.NameServices
    content.vb: Protected Property NameService As NameServices
  overload: InnerLibs.EnhancedCollectionEditor.NameService*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.ExcludedTypes
  commentId: F:InnerLibs.EnhancedCollectionEditor.ExcludedTypes
  id: ExcludedTypes
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: ExcludedTypes
  nameWithType: EnhancedCollectionEditor.ExcludedTypes
  fullName: InnerLibs.EnhancedCollectionEditor.ExcludedTypes
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: ExcludedTypes
    path: CollectionEditos.vb
    startLine: 68
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected List<Type> ExcludedTypes
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Protected ExcludedTypes As List(Of Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.PropertyValueChanged
  commentId: E:InnerLibs.EnhancedCollectionEditor.PropertyValueChanged
  id: PropertyValueChanged
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: PropertyValueChanged
  nameWithType: EnhancedCollectionEditor.PropertyValueChanged
  fullName: InnerLibs.EnhancedCollectionEditor.PropertyValueChanged
  type: Event
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: PropertyValueChanged
    path: CollectionEditos.vb
    startLine: 77
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected event EnhancedCollectionEditor.PropertyValueChangedEventHandler PropertyValueChanged
    return:
      type: InnerLibs.EnhancedCollectionEditor.PropertyValueChangedEventHandler
    content.vb: Protected Event PropertyValueChanged As EnhancedCollectionEditor.PropertyValueChangedEventHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.EditorFormCreated
  commentId: E:InnerLibs.EnhancedCollectionEditor.EditorFormCreated
  id: EditorFormCreated
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: EditorFormCreated
  nameWithType: EnhancedCollectionEditor.EditorFormCreated
  fullName: InnerLibs.EnhancedCollectionEditor.EditorFormCreated
  type: Event
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: EditorFormCreated
    path: CollectionEditos.vb
    startLine: 80
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected event EnhancedCollectionEditor.EditorFormCreatedEventHandler EditorFormCreated
    return:
      type: InnerLibs.EnhancedCollectionEditor.EditorFormCreatedEventHandler
    content.vb: Protected Event EditorFormCreated As EnhancedCollectionEditor.EditorFormCreatedEventHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.NewItemCreated
  commentId: E:InnerLibs.EnhancedCollectionEditor.NewItemCreated
  id: NewItemCreated
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: NewItemCreated
  nameWithType: EnhancedCollectionEditor.NewItemCreated
  fullName: InnerLibs.EnhancedCollectionEditor.NewItemCreated
  type: Event
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: NewItemCreated
    path: CollectionEditos.vb
    startLine: 82
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected event EnhancedCollectionEditor.NewItemCreatedEventHandler NewItemCreated
    return:
      type: InnerLibs.EnhancedCollectionEditor.NewItemCreatedEventHandler
    content.vb: Protected Event NewItemCreated As EnhancedCollectionEditor.NewItemCreatedEventHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.BaseCollectionType
  commentId: P:InnerLibs.EnhancedCollectionEditor.BaseCollectionType
  id: BaseCollectionType
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: BaseCollectionType
  nameWithType: EnhancedCollectionEditor.BaseCollectionType
  fullName: InnerLibs.EnhancedCollectionEditor.BaseCollectionType
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: BaseCollectionType
    path: CollectionEditos.vb
    startLine: 84
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected Type BaseCollectionType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected ReadOnly Property BaseCollectionType As Type
  overload: InnerLibs.EnhancedCollectionEditor.BaseCollectionType*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: InnerLibs.EnhancedCollectionEditor.BaseItemType
  commentId: P:InnerLibs.EnhancedCollectionEditor.BaseItemType
  id: BaseItemType
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: BaseItemType
  nameWithType: EnhancedCollectionEditor.BaseItemType
  fullName: InnerLibs.EnhancedCollectionEditor.BaseItemType
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: BaseItemType
    path: CollectionEditos.vb
    startLine: 90
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected Type BaseItemType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected ReadOnly Property BaseItemType As Type
  overload: InnerLibs.EnhancedCollectionEditor.BaseItemType*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: InnerLibs.EnhancedCollectionEditor.GetVersion
  commentId: P:InnerLibs.EnhancedCollectionEditor.GetVersion
  id: GetVersion
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: GetVersion
  nameWithType: EnhancedCollectionEditor.GetVersion
  fullName: InnerLibs.EnhancedCollectionEditor.GetVersion
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: GetVersion
    path: CollectionEditos.vb
    startLine: 96
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected string GetVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property GetVersion As String
  overload: InnerLibs.EnhancedCollectionEditor.GetVersion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: InnerLibs.EnhancedCollectionEditor.#ctor(System.Type)
  commentId: M:InnerLibs.EnhancedCollectionEditor.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: EnhancedCollectionEditor(Type)
  nameWithType: EnhancedCollectionEditor.EnhancedCollectionEditor(Type)
  fullName: InnerLibs.EnhancedCollectionEditor.EnhancedCollectionEditor(System.Type)
  type: Constructor
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: .ctor
    path: CollectionEditos.vb
    startLine: 109
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCreates a new collection editor\n"
  example: []
  syntax:
    content: public EnhancedCollectionEditor(Type t)
    parameters:
    - id: t
      type: System.Type
      description: The type of the collection for this editor to edit.
    content.vb: Public Sub New(t As Type)
  overload: InnerLibs.EnhancedCollectionEditor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes
  commentId: M:InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes
  id: CreateNewItemTypes
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CreateNewItemTypes()
  nameWithType: EnhancedCollectionEditor.CreateNewItemTypes()
  fullName: InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CreateNewItemTypes
    path: CollectionEditos.vb
    startLine: 197
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected override sealed Type[] CreateNewItemTypes()
    return:
      type: System.Type[]
    content.vb: Protected NotOverridable Overrides Function CreateNewItemTypes As Type()
  overridden: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
  overload: InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
- uid: InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances
  commentId: M:InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances
  id: CanSelectMultipleInstances
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CanSelectMultipleInstances()
  nameWithType: EnhancedCollectionEditor.CanSelectMultipleInstances()
  fullName: InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CanSelectMultipleInstances
    path: CollectionEditos.vb
    startLine: 235
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected override bool CanSelectMultipleInstances()
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function CanSelectMultipleInstances As Boolean
  overridden: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
  overload: InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: InnerLibs.EnhancedCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  commentId: M:InnerLibs.EnhancedCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  id: EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: EditValue(ITypeDescriptorContext, IServiceProvider, Object)
  nameWithType: EnhancedCollectionEditor.EditValue(ITypeDescriptorContext, IServiceProvider, Object)
  fullName: InnerLibs.EnhancedCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext, System.IServiceProvider, System.Object)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: EditValue
    path: CollectionEditos.vb
    startLine: 241
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: public override sealed object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value)
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
    - id: provider
      type: System.IServiceProvider
    - id: value
      type: System.Object
    return:
      type: System.Object
    content.vb: Public NotOverridable Overrides Function EditValue(context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object
  overridden: System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  overload: InnerLibs.EnhancedCollectionEditor.EditValue*
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: InnerLibs.EnhancedCollectionEditor.CreateCollectionForm
  commentId: M:InnerLibs.EnhancedCollectionEditor.CreateCollectionForm
  id: CreateCollectionForm
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CreateCollectionForm()
  nameWithType: EnhancedCollectionEditor.CreateCollectionForm()
  fullName: InnerLibs.EnhancedCollectionEditor.CreateCollectionForm()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CreateCollectionForm
    path: CollectionEditos.vb
    startLine: 250
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected override sealed CollectionEditor.CollectionForm CreateCollectionForm()
    return:
      type: System.ComponentModel.Design.CollectionEditor.CollectionForm
    content.vb: Protected NotOverridable Overrides Function CreateCollectionForm As CollectionEditor.CollectionForm
  overridden: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
  overload: InnerLibs.EnhancedCollectionEditor.CreateCollectionForm*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
- uid: InnerLibs.EnhancedCollectionEditor.Finalize
  commentId: M:InnerLibs.EnhancedCollectionEditor.Finalize
  id: Finalize
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: EnhancedCollectionEditor.Finalize()
  fullName: InnerLibs.EnhancedCollectionEditor.Finalize()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: Finalize
    path: CollectionEditos.vb
    startLine: 290
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected override void Finalize()
    content.vb: Protected Overrides Sub Finalize
  overridden: System.Object.Finalize
  overload: InnerLibs.EnhancedCollectionEditor.Finalize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: InnerLibs.EnhancedCollectionEditor.BaseNameFromType(System.Type)
  commentId: M:InnerLibs.EnhancedCollectionEditor.BaseNameFromType(System.Type)
  id: BaseNameFromType(System.Type)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: BaseNameFromType(Type)
  nameWithType: EnhancedCollectionEditor.BaseNameFromType(Type)
  fullName: InnerLibs.EnhancedCollectionEditor.BaseNameFromType(System.Type)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: BaseNameFromType
    path: CollectionEditos.vb
    startLine: 310
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: public static string BaseNameFromType(Type ItemType)
    parameters:
    - id: ItemType
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function BaseNameFromType(ItemType As Type) As String
  overload: InnerLibs.EnhancedCollectionEditor.BaseNameFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName(System.String)
  commentId: M:InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName(System.String)
  id: BaseNameFromTypeName(System.String)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: BaseNameFromTypeName(String)
  nameWithType: EnhancedCollectionEditor.BaseNameFromTypeName(String)
  fullName: InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: BaseNameFromTypeName
    path: CollectionEditos.vb
    startLine: 314
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: public static string BaseNameFromTypeName(string ItemTypeName)
    parameters:
    - id: ItemTypeName
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function BaseNameFromTypeName(ItemTypeName As String) As String
  overload: InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.EnhancedCollectionEditor.CreateInstance(System.Type)
  commentId: M:InnerLibs.EnhancedCollectionEditor.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: CreateInstance(Type)
  nameWithType: EnhancedCollectionEditor.CreateInstance(Type)
  fullName: InnerLibs.EnhancedCollectionEditor.CreateInstance(System.Type)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: CreateInstance
    path: CollectionEditos.vb
    startLine: 318
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected override sealed object CreateInstance(Type itemType)
    parameters:
    - id: itemType
      type: System.Type
    return:
      type: System.Object
    content.vb: Protected NotOverridable Overrides Function CreateInstance(itemType As Type) As Object
  overridden: System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
  overload: InnerLibs.EnhancedCollectionEditor.CreateInstance*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
- uid: InnerLibs.EnhancedCollectionEditor.GetControlByName(System.String,System.Windows.Forms.Control.ControlCollection)
  commentId: M:InnerLibs.EnhancedCollectionEditor.GetControlByName(System.String,System.Windows.Forms.Control.ControlCollection)
  id: GetControlByName(System.String,System.Windows.Forms.Control.ControlCollection)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: GetControlByName(String, Control.ControlCollection)
  nameWithType: EnhancedCollectionEditor.GetControlByName(String, Control.ControlCollection)
  fullName: InnerLibs.EnhancedCollectionEditor.GetControlByName(System.String, System.Windows.Forms.Control.ControlCollection)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: GetControlByName
    path: CollectionEditos.vb
    startLine: 458
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected Control GetControlByName(string ctlName, Control.ControlCollection ctls)
    parameters:
    - id: ctlName
      type: System.String
    - id: ctls
      type: System.Windows.Forms.Control.ControlCollection
    return:
      type: System.Windows.Forms.Control
    content.vb: Protected Function GetControlByName(ctlName As String, ctls As Control.ControlCollection) As Control
  overload: InnerLibs.EnhancedCollectionEditor.GetControlByName*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.EnhancedCollectionEditor.DisplayError(System.String)
  commentId: M:InnerLibs.EnhancedCollectionEditor.DisplayError(System.String)
  id: DisplayError(System.String)
  parent: InnerLibs.EnhancedCollectionEditor
  langs:
  - csharp
  - vb
  name: DisplayError(String)
  nameWithType: EnhancedCollectionEditor.DisplayError(String)
  fullName: InnerLibs.EnhancedCollectionEditor.DisplayError(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/CollectionEditos.vb
    id: DisplayError
    path: CollectionEditos.vb
    startLine: 482
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: protected void DisplayError(string msg)
    parameters:
    - id: msg
      type: System.String
    content.vb: Protected Sub DisplayError(msg As String)
  overload: InnerLibs.EnhancedCollectionEditor.DisplayError*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: InnerLibs
  commentId: N:InnerLibs
  name: InnerLibs
  nameWithType: InnerLibs
  fullName: InnerLibs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Design.UITypeEditor
  commentId: T:System.Drawing.Design.UITypeEditor
  parent: System.Drawing.Design
  isExternal: true
  name: UITypeEditor
  nameWithType: UITypeEditor
  fullName: System.Drawing.Design.UITypeEditor
- uid: System.ComponentModel.Design.CollectionEditor
  commentId: T:System.ComponentModel.Design.CollectionEditor
  parent: System.ComponentModel.Design
  isExternal: true
  name: CollectionEditor
  nameWithType: CollectionEditor
  fullName: System.ComponentModel.Design.CollectionEditor
- uid: System.ComponentModel.Design.CollectionEditor.CancelChanges
  commentId: M:System.ComponentModel.Design.CollectionEditor.CancelChanges
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CancelChanges()
  nameWithType: CollectionEditor.CancelChanges()
  fullName: System.ComponentModel.Design.CollectionEditor.CancelChanges()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CancelChanges
    name: CancelChanges
    nameWithType: CollectionEditor.CancelChanges
    fullName: System.ComponentModel.Design.CollectionEditor.CancelChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CancelChanges
    name: CancelChanges
    nameWithType: CollectionEditor.CancelChanges
    fullName: System.ComponentModel.Design.CollectionEditor.CancelChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CanRemoveInstance(Object)
  nameWithType: CollectionEditor.CanRemoveInstance(Object)
  fullName: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
    name: CanRemoveInstance
    nameWithType: CollectionEditor.CanRemoveInstance
    fullName: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)
    name: CanRemoveInstance
    nameWithType: CollectionEditor.CanRemoveInstance
    fullName: System.ComponentModel.Design.CollectionEditor.CanRemoveInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: GetObjectsFromInstance(Object)
  nameWithType: CollectionEditor.GetObjectsFromInstance(Object)
  fullName: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
    name: GetObjectsFromInstance
    nameWithType: CollectionEditor.GetObjectsFromInstance
    fullName: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)
    name: GetObjectsFromInstance
    nameWithType: CollectionEditor.GetObjectsFromInstance
    fullName: System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: GetDisplayText(Object)
  nameWithType: CollectionEditor.GetDisplayText(Object)
  fullName: System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
    name: GetDisplayText
    nameWithType: CollectionEditor.GetDisplayText
    fullName: System.ComponentModel.Design.CollectionEditor.GetDisplayText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)
    name: GetDisplayText
    nameWithType: CollectionEditor.GetDisplayText
    fullName: System.ComponentModel.Design.CollectionEditor.GetDisplayText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
  commentId: M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CreateCollectionItemType()
  nameWithType: CollectionEditor.CreateCollectionItemType()
  fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
    name: CreateCollectionItemType
    nameWithType: CollectionEditor.CreateCollectionItemType
    fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
    name: CreateCollectionItemType
    nameWithType: CollectionEditor.CreateCollectionItemType
    fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: DestroyInstance(Object)
  nameWithType: CollectionEditor.DestroyInstance(Object)
  fullName: System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
    name: DestroyInstance
    nameWithType: CollectionEditor.DestroyInstance
    fullName: System.ComponentModel.Design.CollectionEditor.DestroyInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)
    name: DestroyInstance
    nameWithType: CollectionEditor.DestroyInstance
    fullName: System.ComponentModel.Design.CollectionEditor.DestroyInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: GetEditStyle(ITypeDescriptorContext)
  nameWithType: CollectionEditor.GetEditStyle(ITypeDescriptorContext)
  fullName: System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
    name: GetEditStyle
    nameWithType: CollectionEditor.GetEditStyle
    fullName: System.ComponentModel.Design.CollectionEditor.GetEditStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
    name: GetEditStyle
    nameWithType: CollectionEditor.GetEditStyle
    fullName: System.ComponentModel.Design.CollectionEditor.GetEditStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: GetItems(Object)
  nameWithType: CollectionEditor.GetItems(Object)
  fullName: System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
    name: GetItems
    nameWithType: CollectionEditor.GetItems
    fullName: System.ComponentModel.Design.CollectionEditor.GetItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)
    name: GetItems
    nameWithType: CollectionEditor.GetItems
    fullName: System.ComponentModel.Design.CollectionEditor.GetItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
  commentId: M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: GetService(Type)
  nameWithType: CollectionEditor.GetService(Type)
  fullName: System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
    name: GetService
    nameWithType: CollectionEditor.GetService
    fullName: System.ComponentModel.Design.CollectionEditor.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.GetService(System.Type)
    name: GetService
    nameWithType: CollectionEditor.GetService
    fullName: System.ComponentModel.Design.CollectionEditor.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])
  commentId: M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: SetItems(Object, Object[])
  nameWithType: CollectionEditor.SetItems(Object, Object[])
  fullName: System.ComponentModel.Design.CollectionEditor.SetItems(System.Object, System.Object[])
  nameWithType.vb: CollectionEditor.SetItems(Object, Object())
  fullName.vb: System.ComponentModel.Design.CollectionEditor.SetItems(System.Object, System.Object())
  name.vb: SetItems(Object, Object())
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])
    name: SetItems
    nameWithType: CollectionEditor.SetItems
    fullName: System.ComponentModel.Design.CollectionEditor.SetItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])
    name: SetItems
    nameWithType: CollectionEditor.SetItems
    fullName: System.ComponentModel.Design.CollectionEditor.SetItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.ShowHelp
  commentId: M:System.ComponentModel.Design.CollectionEditor.ShowHelp
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: ShowHelp()
  nameWithType: CollectionEditor.ShowHelp()
  fullName: System.ComponentModel.Design.CollectionEditor.ShowHelp()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.ShowHelp
    name: ShowHelp
    nameWithType: CollectionEditor.ShowHelp
    fullName: System.ComponentModel.Design.CollectionEditor.ShowHelp
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.ShowHelp
    name: ShowHelp
    nameWithType: CollectionEditor.ShowHelp
    fullName: System.ComponentModel.Design.CollectionEditor.ShowHelp
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Design.CollectionEditor.CollectionItemType
  commentId: P:System.ComponentModel.Design.CollectionEditor.CollectionItemType
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CollectionItemType
  nameWithType: CollectionEditor.CollectionItemType
  fullName: System.ComponentModel.Design.CollectionEditor.CollectionItemType
- uid: System.ComponentModel.Design.CollectionEditor.CollectionType
  commentId: P:System.ComponentModel.Design.CollectionEditor.CollectionType
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CollectionType
  nameWithType: CollectionEditor.CollectionType
  fullName: System.ComponentModel.Design.CollectionEditor.CollectionType
- uid: System.ComponentModel.Design.CollectionEditor.Context
  commentId: P:System.ComponentModel.Design.CollectionEditor.Context
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: Context
  nameWithType: CollectionEditor.Context
  fullName: System.ComponentModel.Design.CollectionEditor.Context
- uid: System.ComponentModel.Design.CollectionEditor.NewItemTypes
  commentId: P:System.ComponentModel.Design.CollectionEditor.NewItemTypes
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: NewItemTypes
  nameWithType: CollectionEditor.NewItemTypes
  fullName: System.ComponentModel.Design.CollectionEditor.NewItemTypes
- uid: System.ComponentModel.Design.CollectionEditor.HelpTopic
  commentId: P:System.ComponentModel.Design.CollectionEditor.HelpTopic
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: HelpTopic
  nameWithType: CollectionEditor.HelpTopic
  fullName: System.ComponentModel.Design.CollectionEditor.HelpTopic
- uid: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  commentId: M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: EditValue(IServiceProvider, Object)
  nameWithType: UITypeEditor.EditValue(IServiceProvider, Object)
  fullName: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider, System.Object)
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
    name: EditValue
    nameWithType: UITypeEditor.EditValue
    fullName: System.Drawing.Design.UITypeEditor.EditValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
    name: EditValue
    nameWithType: UITypeEditor.EditValue
    fullName: System.Drawing.Design.UITypeEditor.EditValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle
  commentId: M:System.Drawing.Design.UITypeEditor.GetEditStyle
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: GetEditStyle()
  nameWithType: UITypeEditor.GetEditStyle()
  fullName: System.Drawing.Design.UITypeEditor.GetEditStyle()
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.GetEditStyle
    name: GetEditStyle
    nameWithType: UITypeEditor.GetEditStyle
    fullName: System.Drawing.Design.UITypeEditor.GetEditStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.GetEditStyle
    name: GetEditStyle
    nameWithType: UITypeEditor.GetEditStyle
    fullName: System.Drawing.Design.UITypeEditor.GetEditStyle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  commentId: M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: GetPaintValueSupported()
  nameWithType: UITypeEditor.GetPaintValueSupported()
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported()
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    name: GetPaintValueSupported
    nameWithType: UITypeEditor.GetPaintValueSupported
    fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    name: GetPaintValueSupported
    nameWithType: UITypeEditor.GetPaintValueSupported
    fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: GetPaintValueSupported(ITypeDescriptorContext)
  nameWithType: UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext)
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPaintValueSupported
    nameWithType: UITypeEditor.GetPaintValueSupported
    fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPaintValueSupported
    nameWithType: UITypeEditor.GetPaintValueSupported
    fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  commentId: M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: PaintValue(Object, Graphics, Rectangle)
  nameWithType: UITypeEditor.PaintValue(Object, Graphics, Rectangle)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(System.Object, System.Drawing.Graphics, System.Drawing.Rectangle)
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
    name: PaintValue
    nameWithType: UITypeEditor.PaintValue
    fullName: System.Drawing.Design.UITypeEditor.PaintValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
    name: PaintValue
    nameWithType: UITypeEditor.PaintValue
    fullName: System.Drawing.Design.UITypeEditor.PaintValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Graphics
    name: Graphics
    nameWithType: Graphics
    fullName: System.Drawing.Graphics
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: System.Drawing.Rectangle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  commentId: M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: PaintValue(PaintValueEventArgs)
  nameWithType: UITypeEditor.PaintValue(PaintValueEventArgs)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  spec.csharp:
  - uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
    name: PaintValue
    nameWithType: UITypeEditor.PaintValue
    fullName: System.Drawing.Design.UITypeEditor.PaintValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Design.PaintValueEventArgs
    name: PaintValueEventArgs
    nameWithType: PaintValueEventArgs
    fullName: System.Drawing.Design.PaintValueEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
    name: PaintValue
    nameWithType: UITypeEditor.PaintValue
    fullName: System.Drawing.Design.UITypeEditor.PaintValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Drawing.Design.PaintValueEventArgs
    name: PaintValueEventArgs
    nameWithType: PaintValueEventArgs
    fullName: System.Drawing.Design.PaintValueEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Drawing.Design.UITypeEditor.IsDropDownResizable
  commentId: P:System.Drawing.Design.UITypeEditor.IsDropDownResizable
  parent: System.Drawing.Design.UITypeEditor
  isExternal: true
  name: IsDropDownResizable
  nameWithType: UITypeEditor.IsDropDownResizable
  fullName: System.Drawing.Design.UITypeEditor.IsDropDownResizable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.CreateDictionary
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary()
  nameWithType: ClassTools.CreateDictionary()
  fullName: InnerLibs.ClassTools.CreateDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  nameWithType: ClassTools.GetProperties(BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object)
  name: GetProperties()
  nameWithType: ClassTools.GetProperties()
  fullName: InnerLibs.ClassTools.GetProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  name: GetPropertyValue(String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  name: GetPropertyValue<Type>(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  name: GetPropertyValue(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  name: HasProperty(String)
  nameWithType: ClassTools.HasProperty(String)
  fullName: InnerLibs.ClassTools.HasProperty(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsArrayOf``1
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  name: IsArrayOf<T>()
  nameWithType: ClassTools.IsArrayOf<T>()
  fullName: InnerLibs.ClassTools.IsArrayOf<T>()
  nameWithType.vb: ClassTools.IsArrayOf(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)()
  name.vb: IsArrayOf(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsDictionary
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsDictionary(System.Object)
  name: IsDictionary()
  nameWithType: ClassTools.IsDictionary()
  fullName: InnerLibs.ClassTools.IsDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsIn(IEnumerable<EnhancedCollectionEditor>, IEqualityComparer<EnhancedCollectionEditor>)
  nameWithType: ClassTools.IsIn(IEnumerable<EnhancedCollectionEditor>, IEqualityComparer<EnhancedCollectionEditor>)
  fullName: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable<InnerLibs.EnhancedCollectionEditor>, System.Collections.Generic.IEqualityComparer<InnerLibs.EnhancedCollectionEditor>)
  nameWithType.vb: ClassTools.IsIn(IEnumerable(Of EnhancedCollectionEditor), IEqualityComparer(Of EnhancedCollectionEditor))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable(Of InnerLibs.EnhancedCollectionEditor), System.Collections.Generic.IEqualityComparer(Of InnerLibs.EnhancedCollectionEditor))
  name.vb: IsIn(IEnumerable(Of EnhancedCollectionEditor), IEqualityComparer(Of EnhancedCollectionEditor))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor}[],System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  name: IsInAny(IEnumerable<EnhancedCollectionEditor>[], IEqualityComparer<EnhancedCollectionEditor>)
  nameWithType: ClassTools.IsInAny(IEnumerable<EnhancedCollectionEditor>[], IEqualityComparer<EnhancedCollectionEditor>)
  fullName: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable<InnerLibs.EnhancedCollectionEditor>[], System.Collections.Generic.IEqualityComparer<InnerLibs.EnhancedCollectionEditor>)
  nameWithType.vb: ClassTools.IsInAny(IEnumerable(Of EnhancedCollectionEditor)(), IEqualityComparer(Of EnhancedCollectionEditor))
  fullName.vb: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable(Of InnerLibs.EnhancedCollectionEditor)(), System.Collections.Generic.IEqualityComparer(Of InnerLibs.EnhancedCollectionEditor))
  name.vb: IsInAny(IEnumerable(Of EnhancedCollectionEditor)(), IEqualityComparer(Of EnhancedCollectionEditor))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor}[],System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor}[],System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsList
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsList(System.Object)
  name: IsList()
  nameWithType: ClassTools.IsList()
  fullName: InnerLibs.ClassTools.IsList()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsNotIn(IEnumerable<EnhancedCollectionEditor>, IEqualityComparer<EnhancedCollectionEditor>)
  nameWithType: ClassTools.IsNotIn(IEnumerable<EnhancedCollectionEditor>, IEqualityComparer<EnhancedCollectionEditor>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable<InnerLibs.EnhancedCollectionEditor>, System.Collections.Generic.IEqualityComparer<InnerLibs.EnhancedCollectionEditor>)
  nameWithType.vb: ClassTools.IsNotIn(IEnumerable(Of EnhancedCollectionEditor), IEqualityComparer(Of EnhancedCollectionEditor))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable(Of InnerLibs.EnhancedCollectionEditor), System.Collections.Generic.IEqualityComparer(Of InnerLibs.EnhancedCollectionEditor))
  name.vb: IsNotIn(IEnumerable(Of EnhancedCollectionEditor), IEqualityComparer(Of EnhancedCollectionEditor))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.EnhancedCollectionEditor},System.Collections.Generic.IEqualityComparer{InnerLibs.EnhancedCollectionEditor})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsNotIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsType``1
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsType``1(System.Object)
  name: IsType<T>()
  nameWithType: ClassTools.IsType<T>()
  fullName: InnerLibs.ClassTools.IsType<T>()
  nameWithType.vb: ClassTools.IsType(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)()
  name.vb: IsType(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce(EnhancedCollectionEditor[])
  nameWithType: ClassTools.NullCoalesce(EnhancedCollectionEditor[])
  fullName: InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor[])
  nameWithType.vb: ClassTools.NullCoalesce(EnhancedCollectionEditor())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor())
  name.vb: NullCoalesce(EnhancedCollectionEditor())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.EnhancedCollectionEditor[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.ClassTools.NullifyProperties
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties()
  nameWithType: ClassTools.NullifyProperties()
  fullName: InnerLibs.ClassTools.NullifyProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  name: SetPropertyValue<Type>(String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.String, Type)
  name.vb: SetPropertyValue(Of Type)(String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  name: SetPropertyValueFromCollection<Type>(String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  name: ToFlatString(String)
  nameWithType: ClassTools.ToFlatString(String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.DataManipulation.GetDbType
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  parent: InnerLibs.DataManipulation
  definition: InnerLibs.DataManipulation.GetDbType(System.Object)
  name: GetDbType()
  nameWithType: DataManipulation.GetDbType()
  fullName: InnerLibs.DataManipulation.GetDbType()
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Converter.DefineEmptyList
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList()
  nameWithType: Converter.DefineEmptyList()
  fullName: InnerLibs.Converter.DefineEmptyList()
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Converter.ChangeType``1
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType>()
  nameWithType: Converter.ChangeType<ToType>()
  fullName: InnerLibs.Converter.ChangeType<ToType>()
  nameWithType.vb: Converter.ChangeType(Of ToType)()
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType)()
  name.vb: ChangeType(Of ToType)()
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType<ToType>
    nameWithType: Converter.ChangeType<ToType>
    fullName: InnerLibs.Converter.ChangeType<ToType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType(Of ToType)
    nameWithType: Converter.ChangeType(Of ToType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.JsonViewer.CreateNode
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  parent: InnerLibs.JsonViewer
  definition: InnerLibs.JsonViewer.CreateNode(System.Object)
  name: CreateNode()
  nameWithType: JsonViewer.CreateNode()
  fullName: InnerLibs.JsonViewer.CreateNode()
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  name: IsBetween(Object, Object)
  nameWithType: Mathematic.IsBetween(Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Text.SerializeJSON(System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  name: SerializeJSON(String)
  nameWithType: Text.SerializeJSON(String)
  fullName: InnerLibs.Text.SerializeJSON(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNumber
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNumber(System.Object)
  name: IsNumber()
  nameWithType: Verify.IsNumber()
  fullName: InnerLibs.Verify.IsNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNotNumber
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNotNumber(System.Object)
  name: IsNotNumber()
  nameWithType: Verify.IsNotNumber()
  fullName: InnerLibs.Verify.IsNotNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IfBlank``1({T})
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  name: IfBlank<T>(T)
  nameWithType: Verify.IfBlank<T>(T)
  fullName: InnerLibs.Verify.IfBlank<T>(T)
  nameWithType.vb: Verify.IfBlank(Of T)(T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(T)
  name.vb: IfBlank(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Verify.NullIf(System.Func{InnerLibs.EnhancedCollectionEditor,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  name: NullIf(Func<EnhancedCollectionEditor, Boolean>)
  nameWithType: Verify.NullIf(Func<EnhancedCollectionEditor, Boolean>)
  fullName: InnerLibs.Verify.NullIf(System.Func<InnerLibs.EnhancedCollectionEditor, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Func(Of EnhancedCollectionEditor, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(System.Func(Of InnerLibs.EnhancedCollectionEditor, System.Boolean))
  name.vb: NullIf(Func(Of EnhancedCollectionEditor, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.EnhancedCollectionEditor,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.EnhancedCollectionEditor,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Verify.NullIf(InnerLibs.EnhancedCollectionEditor)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf(EnhancedCollectionEditor)
  nameWithType: Verify.NullIf(EnhancedCollectionEditor)
  fullName: InnerLibs.Verify.NullIf(InnerLibs.EnhancedCollectionEditor)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.EnhancedCollectionEditor)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.EnhancedCollectionEditor)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  parent: InnerLibs.Web
  definition: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  name: CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax(System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.EnhancedCollectionEditor,{TextType}},System.Func{InnerLibs.EnhancedCollectionEditor,{ValueType}})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  name: AsListItem<TextType, ValueType>(Func<EnhancedCollectionEditor, TextType>, Func<EnhancedCollectionEditor, ValueType>)
  nameWithType: Web.AsListItem<TextType, ValueType>(Func<EnhancedCollectionEditor, TextType>, Func<EnhancedCollectionEditor, ValueType>)
  fullName: InnerLibs.Web.AsListItem<TextType, ValueType>(System.Func<InnerLibs.EnhancedCollectionEditor, TextType>, System.Func<InnerLibs.EnhancedCollectionEditor, ValueType>)
  nameWithType.vb: Web.AsListItem(Of TextType, ValueType)(Func(Of EnhancedCollectionEditor, TextType), Func(Of EnhancedCollectionEditor, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of TextType, ValueType)(System.Func(Of InnerLibs.EnhancedCollectionEditor, TextType), System.Func(Of InnerLibs.EnhancedCollectionEditor, ValueType))
  name.vb: AsListItem(Of TextType, ValueType)(Func(Of EnhancedCollectionEditor, TextType), Func(Of EnhancedCollectionEditor, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.EnhancedCollectionEditor,``0},System.Func{InnerLibs.EnhancedCollectionEditor,``1})
    name: AsListItem<TextType, ValueType>
    nameWithType: Web.AsListItem<TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.EnhancedCollectionEditor,``0},System.Func{InnerLibs.EnhancedCollectionEditor,``1})
    name: AsListItem(Of TextType, ValueType)
    nameWithType: Web.AsListItem(Of TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.GetCastedValue
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.GetCastedValue(System.Object)
  name: GetCastedValue()
  nameWithType: WinForms.GetCastedValue()
  fullName: InnerLibs.WinForms.GetCastedValue()
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  name: CastValueForControl(Object)
  nameWithType: WinForms.CastValueForControl(Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  name: ApplyToControls(HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls(HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor,System.Func{InnerLibs.EnhancedCollectionEditor,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  name: HasSamePropertyValues(EnhancedCollectionEditor, Func<EnhancedCollectionEditor, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues(EnhancedCollectionEditor, Func<EnhancedCollectionEditor, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor, System.Func<InnerLibs.EnhancedCollectionEditor, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(EnhancedCollectionEditor, Func(Of EnhancedCollectionEditor, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor, System.Func(Of InnerLibs.EnhancedCollectionEditor, System.Object)())
  name.vb: HasSamePropertyValues(EnhancedCollectionEditor, Func(Of EnhancedCollectionEditor, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor,System.Func{InnerLibs.EnhancedCollectionEditor,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.EnhancedCollectionEditor,System.Func{InnerLibs.EnhancedCollectionEditor,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.EnhancedCollectionEditor
    name: EnhancedCollectionEditor
    nameWithType: EnhancedCollectionEditor
    fullName: InnerLibs.EnhancedCollectionEditor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Drawing.Design
  commentId: N:System.Drawing.Design
  isExternal: true
  name: System.Drawing.Design
  nameWithType: System.Drawing.Design
  fullName: System.Drawing.Design
- uid: System.ComponentModel.Design
  commentId: N:System.ComponentModel.Design
  isExternal: true
  name: System.ComponentModel.Design
  nameWithType: System.ComponentModel.Design
  fullName: System.ComponentModel.Design
- uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary<Type>(Type)
  nameWithType: ClassTools.CreateDictionary<Type>(Type)
  fullName: InnerLibs.ClassTools.CreateDictionary<Type>(Type)
  nameWithType.vb: ClassTools.CreateDictionary(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.CreateDictionary(Of Type)(Type)
  name.vb: CreateDictionary(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary<Type>
    nameWithType: ClassTools.CreateDictionary<Type>
    fullName: InnerLibs.ClassTools.CreateDictionary<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary(Of Type)
    nameWithType: ClassTools.CreateDictionary(Of Type)
    fullName: InnerLibs.ClassTools.CreateDictionary(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools
  commentId: T:InnerLibs.ClassTools
  parent: InnerLibs
  name: ClassTools
  nameWithType: ClassTools
  fullName: InnerLibs.ClassTools
- uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Object, BindingFlags)
  nameWithType: ClassTools.GetProperties(Object, BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  isExternal: true
  name: GetProperties(Object)
  nameWithType: ClassTools.GetProperties(Object)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue<Type>(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.Object, System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(Object, String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.Object, System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(Object, String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  isExternal: true
  name: HasProperty(Object, String)
  nameWithType: ClassTools.HasProperty(Object, String)
  fullName: InnerLibs.ClassTools.HasProperty(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  isExternal: true
  name: IsArrayOf<T>(Object)
  nameWithType: ClassTools.IsArrayOf<T>(Object)
  fullName: InnerLibs.ClassTools.IsArrayOf<T>(System.Object)
  nameWithType.vb: ClassTools.IsArrayOf(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)(System.Object)
  name.vb: IsArrayOf(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsDictionary(System.Object)
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  isExternal: true
  name: IsDictionary(Object)
  nameWithType: ClassTools.IsDictionary(Object)
  fullName: InnerLibs.ClassTools.IsDictionary(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  nameWithType: ClassTools.IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsInAny<Type>(Type, System.Collections.Generic.IEnumerable<Type>[], System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsInAny(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type)(), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny<Type>
    nameWithType: ClassTools.IsInAny<Type>
    fullName: InnerLibs.ClassTools.IsInAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny(Of Type)
    nameWithType: ClassTools.IsInAny(Of Type)
    fullName: InnerLibs.ClassTools.IsInAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsList(System.Object)
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  isExternal: true
  name: IsList(Object)
  nameWithType: ClassTools.IsList(Object)
  fullName: InnerLibs.ClassTools.IsList(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsType``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  isExternal: true
  name: IsType<T>(Object)
  nameWithType: ClassTools.IsType<T>(Object)
  fullName: InnerLibs.ClassTools.IsType<T>(System.Object)
  nameWithType.vb: ClassTools.IsType(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)(System.Object)
  name.vb: IsType(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce<T>(T, T[])
  nameWithType: ClassTools.NullCoalesce<T>(T, T[])
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(T, T[])
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(T, T())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(T, T())
  name.vb: NullCoalesce(Of T)(T, T())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties<Type>(Type)
  nameWithType: ClassTools.NullifyProperties<Type>(Type)
  fullName: InnerLibs.ClassTools.NullifyProperties<Type>(Type)
  nameWithType.vb: ClassTools.NullifyProperties(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.NullifyProperties(Of Type)(Type)
  name.vb: NullifyProperties(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties<Type>
    nameWithType: ClassTools.NullifyProperties<Type>
    fullName: InnerLibs.ClassTools.NullifyProperties<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties(Of Type)
    nameWithType: ClassTools.NullifyProperties(Of Type)
    fullName: InnerLibs.ClassTools.NullifyProperties(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  isExternal: true
  name: SetPropertyValue<Type>(Object, String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(Object, String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.Object, System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(Object, String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.Object, System.String, Type)
  name.vb: SetPropertyValue(Of Type)(Object, String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  isExternal: true
  name: SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.Object, System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.Object, System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  isExternal: true
  name: ToFlatString(Object, String)
  nameWithType: ClassTools.ToFlatString(Object, String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation.GetDbType(System.Object)
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  isExternal: true
  name: GetDbType(Object)
  nameWithType: DataManipulation.GetDbType(Object)
  fullName: InnerLibs.DataManipulation.GetDbType(System.Object)
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation
  commentId: T:InnerLibs.DataManipulation
  parent: InnerLibs
  name: DataManipulation
  nameWithType: DataManipulation
  fullName: InnerLibs.DataManipulation
- uid: InnerLibs.Converter.DefineEmptyList``1(``0)
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList<T>(T)
  nameWithType: Converter.DefineEmptyList<T>(T)
  fullName: InnerLibs.Converter.DefineEmptyList<T>(T)
  nameWithType.vb: Converter.DefineEmptyList(Of T)(T)
  fullName.vb: InnerLibs.Converter.DefineEmptyList(Of T)(T)
  name.vb: DefineEmptyList(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList<T>
    nameWithType: Converter.DefineEmptyList<T>
    fullName: InnerLibs.Converter.DefineEmptyList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList(Of T)
    nameWithType: Converter.DefineEmptyList(Of T)
    fullName: InnerLibs.Converter.DefineEmptyList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Converter
  commentId: T:InnerLibs.Converter
  parent: InnerLibs
  name: Converter
  nameWithType: Converter
  fullName: InnerLibs.Converter
- uid: InnerLibs.Converter.ChangeType``2(``1)
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType, FromType>(FromType)
  nameWithType: Converter.ChangeType<ToType, FromType>(FromType)
  fullName: InnerLibs.Converter.ChangeType<ToType, FromType>(FromType)
  nameWithType.vb: Converter.ChangeType(Of ToType, FromType)(FromType)
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType, FromType)(FromType)
  name.vb: ChangeType(Of ToType, FromType)(FromType)
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType<ToType, FromType>
    nameWithType: Converter.ChangeType<ToType, FromType>
    fullName: InnerLibs.Converter.ChangeType<ToType, FromType>
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType(Of ToType, FromType)
    nameWithType: Converter.ChangeType(Of ToType, FromType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType, FromType)
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer.CreateNode(System.Object)
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  isExternal: true
  name: CreateNode(Object)
  nameWithType: JsonViewer.CreateNode(Object)
  fullName: InnerLibs.JsonViewer.CreateNode(System.Object)
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer
  commentId: T:InnerLibs.JsonViewer
  parent: InnerLibs
  name: JsonViewer
  nameWithType: JsonViewer
  fullName: InnerLibs.JsonViewer
- uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  isExternal: true
  name: IsBetween<Type>(Type, Object, Object)
  nameWithType: Mathematic.IsBetween<Type>(Type, Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween<Type>(Type, System.Object, System.Object)
  nameWithType.vb: Mathematic.IsBetween(Of Type)(Type, Object, Object)
  fullName.vb: InnerLibs.Mathematic.IsBetween(Of Type)(Type, System.Object, System.Object)
  name.vb: IsBetween(Of Type)(Type, Object, Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween<Type>
    nameWithType: Mathematic.IsBetween<Type>
    fullName: InnerLibs.Mathematic.IsBetween<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween(Of Type)
    nameWithType: Mathematic.IsBetween(Of Type)
    fullName: InnerLibs.Mathematic.IsBetween(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic
  commentId: T:InnerLibs.Mathematic
  parent: InnerLibs
  name: Mathematic
  nameWithType: Mathematic
  fullName: InnerLibs.Mathematic
- uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  isExternal: true
  name: SerializeJSON(Object, String)
  nameWithType: Text.SerializeJSON(Object, String)
  fullName: InnerLibs.Text.SerializeJSON(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text
  commentId: T:InnerLibs.Text
  parent: InnerLibs
  name: Text
  nameWithType: Text
  fullName: InnerLibs.Text
- uid: InnerLibs.Verify.IsNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  isExternal: true
  name: IsNumber(Object)
  nameWithType: Verify.IsNumber(Object)
  fullName: InnerLibs.Verify.IsNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify
  commentId: T:InnerLibs.Verify
  parent: InnerLibs
  name: Verify
  nameWithType: Verify
  fullName: InnerLibs.Verify
- uid: InnerLibs.Verify.IsNotNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  isExternal: true
  name: IsNotNumber(Object)
  nameWithType: Verify.IsNotNumber(Object)
  fullName: InnerLibs.Verify.IsNotNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  isExternal: true
  name: IfBlank<T>(Object, T)
  nameWithType: Verify.IfBlank<T>(Object, T)
  fullName: InnerLibs.Verify.IfBlank<T>(System.Object, T)
  nameWithType.vb: Verify.IfBlank(Of T)(Object, T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(System.Object, T)
  name.vb: IfBlank(Of T)(Object, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  isExternal: true
  name: NullIf<T>(T, Func<T, Boolean>)
  nameWithType: Verify.NullIf<T>(T, Func<T, Boolean>)
  fullName: InnerLibs.Verify.NullIf<T>(T, System.Func<T, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Of T)(T, Func(Of T, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, System.Func(Of T, System.Boolean))
  name.vb: NullIf(Of T)(T, Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,``0)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf<T>(T, T)
  nameWithType: Verify.NullIf<T>(T, T)
  fullName: InnerLibs.Verify.NullIf<T>(T, T)
  nameWithType.vb: Verify.NullIf(Of T)(T, T)
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, T)
  name.vb: NullIf(Of T)(T, T)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExternal: true
  name: CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  nameWithType.vb: Web.CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax<Type>
    nameWithType: Web.CreateFromAjax<Type>
    fullName: InnerLibs.Web.CreateFromAjax<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax(Of Type)
    nameWithType: Web.CreateFromAjax(Of Type)
    fullName: InnerLibs.Web.CreateFromAjax(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  parent: InnerLibs
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem<T, TextType, ValueType>
    nameWithType: Web.AsListItem<T, TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem(Of T, TextType, ValueType)
    nameWithType: Web.AsListItem(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms.GetCastedValue(System.Object)
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  isExternal: true
  name: GetCastedValue(Object)
  nameWithType: WinForms.GetCastedValue(Object)
  fullName: InnerLibs.WinForms.GetCastedValue(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms
  commentId: T:InnerLibs.WinForms
  parent: InnerLibs
  name: WinForms
  nameWithType: WinForms
  fullName: InnerLibs.WinForms
- uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  isExternal: true
  name: CastValueForControl(Object, Object)
  nameWithType: WinForms.CastValueForControl(Object, Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  isExternal: true
  name: ApplyToControls<T>(T, HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls<T>(T, HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>(T, System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(Of T)(T, HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)(T, System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(Of T)(T, HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls<T>
    nameWithType: LINQExtensions.ApplyToControls<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls(Of T)
    nameWithType: LINQExtensions.ApplyToControls(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions
  commentId: T:InnerLibs.LINQ.LINQExtensions
  parent: InnerLibs.LINQ
  name: LINQExtensions
  nameWithType: LINQExtensions
  fullName: InnerLibs.LINQ.LINQExtensions
- uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  isExternal: true
  name: HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>(T, T, System.Func<T, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)(T, T, System.Func(Of T, System.Object)())
  name.vb: HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues<T>
    nameWithType: LINQExtensions.HasSamePropertyValues<T>
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues(Of T)
    nameWithType: LINQExtensions.HasSamePropertyValues(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ
  commentId: N:InnerLibs.LINQ
  name: InnerLibs.LINQ
  nameWithType: InnerLibs.LINQ
  fullName: InnerLibs.LINQ
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: InnerLibs.EnhancedCollectionEditor.FormCaption*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.FormCaption
  name: FormCaption
  nameWithType: EnhancedCollectionEditor.FormCaption
  fullName: InnerLibs.EnhancedCollectionEditor.FormCaption
- uid: InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
  name: ShowPropGridHelp
  nameWithType: EnhancedCollectionEditor.ShowPropGridHelp
  fullName: InnerLibs.EnhancedCollectionEditor.ShowPropGridHelp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
  name: AllowMultipleSelect
  nameWithType: EnhancedCollectionEditor.AllowMultipleSelect
  fullName: InnerLibs.EnhancedCollectionEditor.AllowMultipleSelect
- uid: InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
  name: UsePropGridChangeEvent
  nameWithType: EnhancedCollectionEditor.UsePropGridChangeEvent
  fullName: InnerLibs.EnhancedCollectionEditor.UsePropGridChangeEvent
- uid: InnerLibs.EnhancedCollectionEditor.NameService*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.NameService
  name: NameService
  nameWithType: EnhancedCollectionEditor.NameService
  fullName: InnerLibs.EnhancedCollectionEditor.NameService
- uid: InnerLibs.NameServices
  commentId: T:InnerLibs.NameServices
  parent: InnerLibs
  name: NameServices
  nameWithType: NameServices
  fullName: InnerLibs.NameServices
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: InnerLibs.EnhancedCollectionEditor.PropertyValueChangedEventHandler
  commentId: T:InnerLibs.EnhancedCollectionEditor.PropertyValueChangedEventHandler
  parent: InnerLibs
  isExternal: true
  name: EnhancedCollectionEditor.PropertyValueChangedEventHandler
  nameWithType: EnhancedCollectionEditor.PropertyValueChangedEventHandler
  fullName: InnerLibs.EnhancedCollectionEditor.PropertyValueChangedEventHandler
- uid: InnerLibs.EnhancedCollectionEditor.EditorFormCreatedEventHandler
  commentId: T:InnerLibs.EnhancedCollectionEditor.EditorFormCreatedEventHandler
  parent: InnerLibs
  isExternal: true
  name: EnhancedCollectionEditor.EditorFormCreatedEventHandler
  nameWithType: EnhancedCollectionEditor.EditorFormCreatedEventHandler
  fullName: InnerLibs.EnhancedCollectionEditor.EditorFormCreatedEventHandler
- uid: InnerLibs.EnhancedCollectionEditor.NewItemCreatedEventHandler
  commentId: T:InnerLibs.EnhancedCollectionEditor.NewItemCreatedEventHandler
  parent: InnerLibs
  isExternal: true
  name: EnhancedCollectionEditor.NewItemCreatedEventHandler
  nameWithType: EnhancedCollectionEditor.NewItemCreatedEventHandler
  fullName: InnerLibs.EnhancedCollectionEditor.NewItemCreatedEventHandler
- uid: InnerLibs.EnhancedCollectionEditor.BaseCollectionType*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.BaseCollectionType
  name: BaseCollectionType
  nameWithType: EnhancedCollectionEditor.BaseCollectionType
  fullName: InnerLibs.EnhancedCollectionEditor.BaseCollectionType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: InnerLibs.EnhancedCollectionEditor.BaseItemType*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.BaseItemType
  name: BaseItemType
  nameWithType: EnhancedCollectionEditor.BaseItemType
  fullName: InnerLibs.EnhancedCollectionEditor.BaseItemType
- uid: InnerLibs.EnhancedCollectionEditor.GetVersion*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.GetVersion
  name: GetVersion
  nameWithType: EnhancedCollectionEditor.GetVersion
  fullName: InnerLibs.EnhancedCollectionEditor.GetVersion
- uid: InnerLibs.EnhancedCollectionEditor.#ctor*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.#ctor
  name: EnhancedCollectionEditor
  nameWithType: EnhancedCollectionEditor.EnhancedCollectionEditor
  fullName: InnerLibs.EnhancedCollectionEditor.EnhancedCollectionEditor
- uid: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
  commentId: M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CreateNewItemTypes()
  nameWithType: CollectionEditor.CreateNewItemTypes()
  fullName: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
    name: CreateNewItemTypes
    nameWithType: CollectionEditor.CreateNewItemTypes
    fullName: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
    name: CreateNewItemTypes
    nameWithType: CollectionEditor.CreateNewItemTypes
    fullName: System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes
  name: CreateNewItemTypes
  nameWithType: EnhancedCollectionEditor.CreateNewItemTypes
  fullName: InnerLibs.EnhancedCollectionEditor.CreateNewItemTypes
- uid: System.Type[]
  commentId: T:System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
  commentId: M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CanSelectMultipleInstances()
  nameWithType: CollectionEditor.CanSelectMultipleInstances()
  fullName: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
    name: CanSelectMultipleInstances
    nameWithType: CollectionEditor.CanSelectMultipleInstances
    fullName: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
    name: CanSelectMultipleInstances
    nameWithType: CollectionEditor.CanSelectMultipleInstances
    fullName: System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances
  name: CanSelectMultipleInstances
  nameWithType: EnhancedCollectionEditor.CanSelectMultipleInstances
  fullName: InnerLibs.EnhancedCollectionEditor.CanSelectMultipleInstances
- uid: System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  commentId: M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: EditValue(ITypeDescriptorContext, IServiceProvider, Object)
  nameWithType: CollectionEditor.EditValue(ITypeDescriptorContext, IServiceProvider, Object)
  fullName: System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext, System.IServiceProvider, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
    name: EditValue
    nameWithType: CollectionEditor.EditValue
    fullName: System.ComponentModel.Design.CollectionEditor.EditValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
    name: EditValue
    nameWithType: CollectionEditor.EditValue
    fullName: System.ComponentModel.Design.CollectionEditor.EditValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.EditValue*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.EditValue
  name: EditValue
  nameWithType: EnhancedCollectionEditor.EditValue
  fullName: InnerLibs.EnhancedCollectionEditor.EditValue
- uid: System.ComponentModel.ITypeDescriptorContext
  commentId: T:System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
  commentId: M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CreateCollectionForm()
  nameWithType: CollectionEditor.CreateCollectionForm()
  fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm()
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
    name: CreateCollectionForm
    nameWithType: CollectionEditor.CreateCollectionForm
    fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
    name: CreateCollectionForm
    nameWithType: CollectionEditor.CreateCollectionForm
    fullName: System.ComponentModel.Design.CollectionEditor.CreateCollectionForm
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.CreateCollectionForm*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.CreateCollectionForm
  name: CreateCollectionForm
  nameWithType: EnhancedCollectionEditor.CreateCollectionForm
  fullName: InnerLibs.EnhancedCollectionEditor.CreateCollectionForm
- uid: System.ComponentModel.Design.CollectionEditor.CollectionForm
  commentId: T:System.ComponentModel.Design.CollectionEditor.CollectionForm
  parent: System.ComponentModel.Design
  isExternal: true
  name: CollectionEditor.CollectionForm
  nameWithType: CollectionEditor.CollectionForm
  fullName: System.ComponentModel.Design.CollectionEditor.CollectionForm
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.Finalize*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.Finalize
  name: Finalize
  nameWithType: EnhancedCollectionEditor.Finalize
  fullName: InnerLibs.EnhancedCollectionEditor.Finalize
- uid: InnerLibs.EnhancedCollectionEditor.BaseNameFromType*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.BaseNameFromType
  name: BaseNameFromType
  nameWithType: EnhancedCollectionEditor.BaseNameFromType
  fullName: InnerLibs.EnhancedCollectionEditor.BaseNameFromType
- uid: InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName
  name: BaseNameFromTypeName
  nameWithType: EnhancedCollectionEditor.BaseNameFromTypeName
  fullName: InnerLibs.EnhancedCollectionEditor.BaseNameFromTypeName
- uid: System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
  commentId: M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
  parent: System.ComponentModel.Design.CollectionEditor
  isExternal: true
  name: CreateInstance(Type)
  nameWithType: CollectionEditor.CreateInstance(Type)
  fullName: System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionEditor.CreateInstance
    fullName: System.ComponentModel.Design.CollectionEditor.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)
    name: CreateInstance
    nameWithType: CollectionEditor.CreateInstance
    fullName: System.ComponentModel.Design.CollectionEditor.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.EnhancedCollectionEditor.CreateInstance*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.CreateInstance
  name: CreateInstance
  nameWithType: EnhancedCollectionEditor.CreateInstance
  fullName: InnerLibs.EnhancedCollectionEditor.CreateInstance
- uid: InnerLibs.EnhancedCollectionEditor.GetControlByName*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.GetControlByName
  name: GetControlByName
  nameWithType: EnhancedCollectionEditor.GetControlByName
  fullName: InnerLibs.EnhancedCollectionEditor.GetControlByName
- uid: System.Windows.Forms.Control.ControlCollection
  commentId: T:System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: true
  name: Control.ControlCollection
  nameWithType: Control.ControlCollection
  fullName: System.Windows.Forms.Control.ControlCollection
- uid: System.Windows.Forms.Control
  commentId: T:System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: true
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms
  commentId: N:System.Windows.Forms
  isExternal: true
  name: System.Windows.Forms
  nameWithType: System.Windows.Forms
  fullName: System.Windows.Forms
- uid: InnerLibs.EnhancedCollectionEditor.DisplayError*
  commentId: Overload:InnerLibs.EnhancedCollectionEditor.DisplayError
  name: DisplayError
  nameWithType: EnhancedCollectionEditor.DisplayError
  fullName: InnerLibs.EnhancedCollectionEditor.DisplayError
