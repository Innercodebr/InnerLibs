### YamlMime:ManagedReference
items:
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  id: Web
  parent: InnerLibs
  children:
  - InnerLibs.Web.AddParameter(System.Uri,System.String,System.String[])
  - InnerLibs.Web.AsEnumerable(System.Web.HttpFileCollection)
  - InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  - InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.Web.DestroySessionAndCookies(System.Web.HttpApplication)
  - InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  - InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  - InnerLibs.Web.ExtractOptions(System.Web.UI.HtmlControls.HtmlSelect)
  - InnerLibs.Web.GetAllFiles(System.Web.HttpRequest)
  - InnerLibs.Web.GetFacebookUsername(System.String)
  - InnerLibs.Web.GetFacebookUsername(System.Uri)
  - InnerLibs.Web.GetVideoId(System.String)
  - InnerLibs.Web.GetVideoId(System.Uri)
  - InnerLibs.Web.GetYoutubeThumbnail(System.String)
  - InnerLibs.Web.GetYoutubeThumbnail(System.Uri)
  - InnerLibs.Web.IsConnected(System.String)
  - InnerLibs.Web.IsDown(System.String)
  - InnerLibs.Web.IsDown(System.Uri)
  - InnerLibs.Web.IsUp(System.String)
  - InnerLibs.Web.IsUp(System.Uri)
  - InnerLibs.Web.MinifyCSS(System.String)
  - InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,InnerLibs.FileType)
  - InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,System.String)
  - InnerLibs.Web.RemoveParameter(System.Uri,System.String[])
  - InnerLibs.Web.RewriteUrl(System.Web.HttpApplication,System.String,System.String)
  - InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  - InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  - InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.String,System.String)
  - InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.Web.UI.WebControls.ListItem)
  - InnerLibs.Web.SetItems(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.List{System.Web.UI.WebControls.ListItem})
  - InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  - InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  - InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime)
  - InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime,System.String[])
  - InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.String[])
  - InnerLibs.Web.ToHtmlString(System.Web.UI.HtmlControls.HtmlSelect)
  - InnerLibs.Web.ToINSERT(System.Collections.Specialized.NameValueCollection,System.String,System.String[])
  - InnerLibs.Web.ToINSERT(System.Web.HttpRequest,System.String,System.String[])
  - InnerLibs.Web.ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  - InnerLibs.Web.ToINSERTorUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  - InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  - InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  - InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String)
  - InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String,System.String[])
  - InnerLibs.Web.ToUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  - InnerLibs.Web.ToUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  - InnerLibs.Web.WriteCSV(System.Web.HttpResponse,System.String,System.String)
  - InnerLibs.Web.WriteEnd(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  - InnerLibs.Web.WriteEnd(System.Web.HttpResponse,System.String)
  - InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],InnerLibs.FileType)
  - InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],System.String)
  - InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)
  - InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.AJAX.Response)
  - InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  - InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String)
  - InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String,System.String,System.Object)
  - InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,``0)
  - InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,System.Func{``0},System.String,System.String)
  - InnerLibs.Web.WriteRedirect(System.Web.HttpResponse,System.Uri,System.String,System.Int32)
  - InnerLibs.Web.WriteScript(System.Web.HttpResponse,System.String)
  - InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.String)
  - InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.Xml.XmlDocument)
  langs:
  - csharp
  - vb
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
  type: Class
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: Web
    path: Web.vb
    startLine: 186
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nModulo Web\n"
  remarks: ''
  example: []
  syntax:
    content: public class Web
    content.vb: Public Module Web
  extensionMethods:
  - InnerLibs.Web.InnerLibs.ClassTools.CreateDictionary
  - System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  - System.Object.InnerLibs.ClassTools.GetProperties
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  - System.Object.InnerLibs.ClassTools.IsArrayOf``1
  - System.Object.InnerLibs.ClassTools.IsDictionary
  - InnerLibs.Web.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  - InnerLibs.Web.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - InnerLibs.Web.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.Web}[],System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  - System.Object.InnerLibs.ClassTools.IsList
  - InnerLibs.Web.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  - InnerLibs.Web.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - System.Object.InnerLibs.ClassTools.IsType``1
  - InnerLibs.Web.InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web[])
  - InnerLibs.Web.InnerLibs.ClassTools.NullifyProperties
  - System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  - System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  - System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  - System.Object.InnerLibs.DataManipulation.GetDbType
  - InnerLibs.Web.InnerLibs.Converter.DefineEmptyList
  - InnerLibs.Web.InnerLibs.Converter.ChangeType``1
  - System.Object.InnerLibs.JsonViewer.CreateNode
  - InnerLibs.Web.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  - System.Object.InnerLibs.Text.SerializeJSON(System.String)
  - System.Object.InnerLibs.Verify.IsNumber
  - System.Object.InnerLibs.Verify.IsNotNumber
  - System.Object.InnerLibs.Verify.IfBlank``1({T})
  - InnerLibs.Web.InnerLibs.Verify.NullIf(System.Func{InnerLibs.Web,System.Boolean})
  - InnerLibs.Web.InnerLibs.Verify.NullIf(InnerLibs.Web)
  - InnerLibs.Web.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.Web.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.Web,{TextType}},System.Func{InnerLibs.Web,{ValueType}})
  - System.Object.InnerLibs.WinForms.GetCastedValue
  - System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  - InnerLibs.Web.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  - InnerLibs.Web.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web,System.Func{InnerLibs.Web,System.Object}[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Module
- uid: InnerLibs.Web.AsEnumerable(System.Web.HttpFileCollection)
  commentId: M:InnerLibs.Web.AsEnumerable(System.Web.HttpFileCollection)
  id: AsEnumerable(System.Web.HttpFileCollection)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: AsEnumerable(HttpFileCollection)
  nameWithType: Web.AsEnumerable(HttpFileCollection)
  fullName: InnerLibs.Web.AsEnumerable(System.Web.HttpFileCollection)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: AsEnumerable
    path: Web.vb
    startLine: 193
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna todos os arquivos de uma <xref href=\"System.Web.HttpFileCollection\" data-throw-if-not-resolved=\"false\"></xref> em um  <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static IEnumerable<HttpPostedFile> AsEnumerable(this HttpFileCollection Files)
    parameters:
    - id: Files
      type: System.Web.HttpFileCollection
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.HttpPostedFile}
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function AsEnumerable(Files As HttpFileCollection) As IEnumerable(Of HttpPostedFile)
  overload: InnerLibs.Web.AsEnumerable*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetAllFiles(System.Web.HttpRequest)
  commentId: M:InnerLibs.Web.GetAllFiles(System.Web.HttpRequest)
  id: GetAllFiles(System.Web.HttpRequest)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetAllFiles(HttpRequest)
  nameWithType: Web.GetAllFiles(HttpRequest)
  fullName: InnerLibs.Web.GetAllFiles(System.Web.HttpRequest)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetAllFiles
    path: Web.vb
    startLine: 209
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna todos os arquivos de uma <xref href=\"System.Web.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref> em um  <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static IEnumerable<HttpPostedFile> GetAllFiles(this HttpRequest Request)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.HttpPostedFile}
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function GetAllFiles(Request As HttpRequest) As IEnumerable(Of HttpPostedFile)
  overload: InnerLibs.Web.GetAllFiles*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.MinifyCSS(System.String)
  commentId: M:InnerLibs.Web.MinifyCSS(System.String)
  id: MinifyCSS(System.String)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: MinifyCSS(String)
  nameWithType: Web.MinifyCSS(String)
  fullName: InnerLibs.Web.MinifyCSS(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: MinifyCSS
    path: Web.vb
    startLine: 218
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMinifica uma folha de estilo CSS\n"
  example: []
  syntax:
    content: public static string MinifyCSS(string CSS)
    parameters:
    - id: CSS
      type: System.String
      description: String contendo o CSS
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function MinifyCSS(CSS As String) As String
  overload: InnerLibs.Web.MinifyCSS*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.IsConnected(System.String)
  commentId: M:InnerLibs.Web.IsConnected(System.String)
  id: IsConnected(System.String)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: IsConnected(String)
  nameWithType: Web.IsConnected(String)
  fullName: InnerLibs.Web.IsConnected(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: IsConnected
    path: Web.vb
    startLine: 234
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se o computador está conectado com a internet\n"
  example: []
  syntax:
    content: public static bool IsConnected(string Test = "http://google.com")
    parameters:
    - id: Test
      type: System.String
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsConnected(Test As String = "http://google.com") As Boolean
  overload: InnerLibs.Web.IsConnected*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  id: CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: CreateFromAjax<Type>(ref Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(ref Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(ref Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: CreateFromAjax
    path: Web.vb
    startLine: 256
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCria um objeto a partir de uma requisiçao AJAX\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void CreateFromAjax<Type>(this ref Type TheObject, string URL, string Method, NameValueCollection Parameters = null, string ContentType = "application/x-www-form-urlencoded", Encoding Encoding = null)
    parameters:
    - id: TheObject
      type: '{Type}'
      description: Objeto
    - id: URL
      type: System.String
      description: URL de requisiçao
    - id: Method
      type: System.String
    - id: Parameters
      type: System.Collections.Specialized.NameValueCollection
      description: Parametros da URL
    - id: ContentType
      type: System.String
      description: Conteudo
    - id: Encoding
      type: System.Text.Encoding
      description: Codificação
    typeParameters:
    - id: Type
      description: Tipo do objeto
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub CreateFromAjax(Of Type)(ByRef TheObject As Type, URL As String, Method As String, Parameters As NameValueCollection = Nothing, ContentType As String = "application/x-www-form-urlencoded", Encoding As Encoding = Nothing)
  overload: InnerLibs.Web.CreateFromAjax*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.CreateFromAjax(Of Type)(ByRef Type, String, String, NameValueCollection, String, Encoding)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(ByRef Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(ByRef Type, String, String, NameValueCollection, String, Encoding)
- uid: InnerLibs.Web.DestroySessionAndCookies(System.Web.HttpApplication)
  commentId: M:InnerLibs.Web.DestroySessionAndCookies(System.Web.HttpApplication)
  id: DestroySessionAndCookies(System.Web.HttpApplication)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: DestroySessionAndCookies(HttpApplication)
  nameWithType: Web.DestroySessionAndCookies(HttpApplication)
  fullName: InnerLibs.Web.DestroySessionAndCookies(System.Web.HttpApplication)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: DestroySessionAndCookies
    path: Web.vb
    startLine: 265
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nDestroi a Sessão, cache e cookies de uma aplicação ASP.NET\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string DestroySessionAndCookies(this HttpApplication Page)
    parameters:
    - id: Page
      type: System.Web.HttpApplication
      description: Pagina atual
    return:
      type: System.String
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function DestroySessionAndCookies(Page As HttpApplication) As String
  overload: InnerLibs.Web.DestroySessionAndCookies*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.String[])
  id: ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToCookie(HttpSessionState, String, String[])
  nameWithType: Web.ToCookie(HttpSessionState, String, String[])
  fullName: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToCookie
    path: Web.vb
    startLine: 290
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCria um cookie guardando valores especificos da sessão atual (1 dia de duração)\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HttpCookie ToCookie(this HttpSessionState Session, string CookieName, params string[] SessionKeys)
    parameters:
    - id: Session
      type: System.Web.SessionState.HttpSessionState
      description: Sessão
    - id: CookieName
      type: System.String
      description: Nome do Cookie
    - id: SessionKeys
      type: System.String[]
      description: As keys especificas que você quer guardar
    return:
      type: System.Web.HttpCookie
      description: Um cookie com os valores da sessão
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToCookie(Session As HttpSessionState, CookieName As String, ParamArray SessionKeys As String()) As HttpCookie
  overload: InnerLibs.Web.ToCookie*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToCookie(HttpSessionState, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState, System.String, System.String())
  name.vb: ToCookie(HttpSessionState, String, String())
- uid: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime,System.String[])
  commentId: M:InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime,System.String[])
  id: ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToCookie(HttpSessionState, String, DateTime, String[])
  nameWithType: Web.ToCookie(HttpSessionState, String, DateTime, String[])
  fullName: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState, System.String, System.DateTime, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToCookie
    path: Web.vb
    startLine: 308
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCria um cookie guardando valores especificos da sessão atual\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HttpCookie ToCookie(this HttpSessionState Session, string CookieName, DateTime Expires, params string[] SessionKeys)
    parameters:
    - id: Session
      type: System.Web.SessionState.HttpSessionState
      description: Sessão
    - id: CookieName
      type: System.String
      description: Nome do Cookie
    - id: Expires
      type: System.DateTime
      description: Data de expiração
    - id: SessionKeys
      type: System.String[]
      description: As keys especificas que você quer guardar
    return:
      type: System.Web.HttpCookie
      description: Um cookie com os valores da sessão
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToCookie(Session As HttpSessionState, CookieName As String, Expires As Date, ParamArray SessionKeys As String()) As HttpCookie
  overload: InnerLibs.Web.ToCookie*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToCookie(HttpSessionState, String, DateTime, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState, System.String, System.DateTime, System.String())
  name.vb: ToCookie(HttpSessionState, String, DateTime, String())
- uid: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime)
  commentId: M:InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime)
  id: ToCookie(System.Web.SessionState.HttpSessionState,System.String,System.DateTime)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToCookie(HttpSessionState, String, DateTime)
  nameWithType: Web.ToCookie(HttpSessionState, String, DateTime)
  fullName: InnerLibs.Web.ToCookie(System.Web.SessionState.HttpSessionState, System.String, System.DateTime)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToCookie
    path: Web.vb
    startLine: 325
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCria um cookie guardando todos os valores da sessão atual\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HttpCookie ToCookie(this HttpSessionState Session, string CookieName = "", DateTime Expires)
    parameters:
    - id: Session
      type: System.Web.SessionState.HttpSessionState
      description: Sessão
    - id: CookieName
      type: System.String
      description: Nome do Cookie
    - id: Expires
      type: System.DateTime
      description: Data de expiração
    return:
      type: System.Web.HttpCookie
      description: Um cookie com os valores da sessão
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToCookie(Session As HttpSessionState, CookieName As String = "", Expires As Date) As HttpCookie
  overload: InnerLibs.Web.ToCookie*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.AddParameter(System.Uri,System.String,System.String[])
  commentId: M:InnerLibs.Web.AddParameter(System.Uri,System.String,System.String[])
  id: AddParameter(System.Uri,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: AddParameter(Uri, String, String[])
  nameWithType: Web.AddParameter(Uri, String, String[])
  fullName: InnerLibs.Web.AddParameter(System.Uri, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: AddParameter
    path: Web.vb
    startLine: 341
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdciona um parametro a Query String de uma URL\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static Uri AddParameter(this Uri Url, string Key, params string[] Values)
    parameters:
    - id: Url
      type: System.Uri
      description: Uri
    - id: Key
      type: System.String
      description: Nome do parâmetro
    - id: Values
      type: System.String[]
      description: Valor do Parâmetro
    return:
      type: System.Uri
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function AddParameter(Url As Uri, Key As String, ParamArray Values As String()) As Uri
  overload: InnerLibs.Web.AddParameter*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.AddParameter(Uri, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.AddParameter(System.Uri, System.String, System.String())
  name.vb: AddParameter(Uri, String, String())
- uid: InnerLibs.Web.RemoveParameter(System.Uri,System.String[])
  commentId: M:InnerLibs.Web.RemoveParameter(System.Uri,System.String[])
  id: RemoveParameter(System.Uri,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: RemoveParameter(Uri, String[])
  nameWithType: Web.RemoveParameter(Uri, String[])
  fullName: InnerLibs.Web.RemoveParameter(System.Uri, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: RemoveParameter
    path: Web.vb
    startLine: 358
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  syntax:
    content: >-
      [Extension]

      public static Uri RemoveParameter(this Uri Url, params string[] Keys)
    parameters:
    - id: Url
      type: System.Uri
    - id: Keys
      type: System.String[]
    return:
      type: System.Uri
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function RemoveParameter(Url As Uri, ParamArray Keys As String()) As Uri
  overload: InnerLibs.Web.RemoveParameter*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.RemoveParameter(Uri, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.RemoveParameter(System.Uri, System.String())
  name.vb: RemoveParameter(Uri, String())
- uid: InnerLibs.Web.RewriteUrl(System.Web.HttpApplication,System.String,System.String)
  commentId: M:InnerLibs.Web.RewriteUrl(System.Web.HttpApplication,System.String,System.String)
  id: RewriteUrl(System.Web.HttpApplication,System.String,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: RewriteUrl(HttpApplication, String, String)
  nameWithType: Web.RewriteUrl(HttpApplication, String, String)
  fullName: InnerLibs.Web.RewriteUrl(System.Web.HttpApplication, System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: RewriteUrl
    path: Web.vb
    startLine: 378
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nReescreve a URL original a partir de uma REGEX aplicada em uma URL amigavel\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static bool RewriteUrl(this HttpApplication App, string URLPattern, string OriginalURL)
    parameters:
    - id: App
      type: System.Web.HttpApplication
      description: Aplicaçao HTTP
    - id: URLPattern
      type: System.String
      description: REGEX da URL
    - id: OriginalURL
      type: System.String
      description: URL original
    return:
      type: System.Boolean
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function RewriteUrl(App As HttpApplication, URLPattern As String, OriginalURL As String) As Boolean
  overload: InnerLibs.Web.RewriteUrl*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String,System.String[])
  id: ToProcedure(System.Web.HttpRequest,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToProcedure(HttpRequest, String, String[])
  nameWithType: Web.ToProcedure(HttpRequest, String, String[])
  fullName: InnerLibs.Web.ToProcedure(System.Web.HttpRequest, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToProcedure
    path: Web.vb
    startLine: 407
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar uma procedure especifica e trata parametros espicificos de\numa URL como parametros da procedure\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ToProcedure(this HttpRequest Request, string ProcedureName, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: Requisicao HTTP
    - id: ProcedureName
      type: System.String
      description: Nome da Procedure
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.String
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToProcedure(Request As HttpRequest, ProcedureName As String, ParamArray QueryStringKeys As String()) As String
  overload: InnerLibs.Web.ToProcedure*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToProcedure(HttpRequest, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToProcedure(System.Web.HttpRequest, System.String, System.String())
  name.vb: ToProcedure(HttpRequest, String, String())
- uid: InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String)
  commentId: M:InnerLibs.Web.ToProcedure(System.Web.HttpRequest,System.String)
  id: ToProcedure(System.Web.HttpRequest,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToProcedure(HttpRequest, String)
  nameWithType: Web.ToProcedure(HttpRequest, String)
  fullName: InnerLibs.Web.ToProcedure(System.Web.HttpRequest, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToProcedure
    path: Web.vb
    startLine: 419
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar uma procedure especifica e trata todos os parametros de\numa URL como parametros da procedure\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ToProcedure(this HttpRequest Request, string ProcedureName)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: Requisicao HTTP
    - id: ProcedureName
      type: System.String
      description: Nome da Procedure
    return:
      type: System.String
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToProcedure(Request As HttpRequest, ProcedureName As String) As String
  overload: InnerLibs.Web.ToProcedure*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.ToINSERTorUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToINSERTorUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  id: ToINSERTorUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToINSERTorUPDATE(HttpRequest, String, String, String[])
  nameWithType: Web.ToINSERTorUPDATE(HttpRequest, String, String, String[])
  fullName: InnerLibs.Web.ToINSERTorUPDATE(System.Web.HttpRequest, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToINSERTorUPDATE
    path: Web.vb
    startLine: 434
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT ou UPDATE e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ToINSERTorUPDATE(this HttpRequest Request, string TableName, string QueryStringPrimaryKey, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da Tabela
    - id: QueryStringPrimaryKey
      type: System.String
      description: Parametro que representa a chave primaria da Tabela
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.String
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToINSERTorUPDATE(Request As HttpRequest, TableName As String, QueryStringPrimaryKey As String, ParamArray QueryStringKeys As String()) As String
  overload: InnerLibs.Web.ToINSERTorUPDATE*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToINSERTorUPDATE(HttpRequest, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToINSERTorUPDATE(System.Web.HttpRequest, System.String, System.String, System.String())
  name.vb: ToINSERTorUPDATE(HttpRequest, String, String, String())
- uid: InnerLibs.Web.ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  id: ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToINSERTorUPDATE(NameValueCollection, String, String, String[])
  nameWithType: Web.ToINSERTorUPDATE(NameValueCollection, String, String, String[])
  fullName: InnerLibs.Web.ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToINSERTorUPDATE
    path: Web.vb
    startLine: 448
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT ou UPDATE e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ToINSERTorUPDATE(this NameValueCollection Request, string TableName, string QueryStringPrimaryKey, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Collections.Specialized.NameValueCollection
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da Tabela
    - id: QueryStringPrimaryKey
      type: System.String
      description: Parametro que representa a chave primaria da Tabela
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.String
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToINSERTorUPDATE(Request As NameValueCollection, TableName As String, QueryStringPrimaryKey As String, ParamArray QueryStringKeys As String()) As String
  overload: InnerLibs.Web.ToINSERTorUPDATE*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToINSERTorUPDATE(NameValueCollection, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToINSERTorUPDATE(System.Collections.Specialized.NameValueCollection, System.String, System.String, System.String())
  name.vb: ToINSERTorUPDATE(NameValueCollection, String, String, String())
- uid: InnerLibs.Web.ToUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  id: ToUPDATE(System.Collections.Specialized.NameValueCollection,System.String,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToUPDATE(NameValueCollection, String, String, String[])
  nameWithType: Web.ToUPDATE(NameValueCollection, String, String, String[])
  fullName: InnerLibs.Web.ToUPDATE(System.Collections.Specialized.NameValueCollection, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToUPDATE
    path: Web.vb
    startLine: 469
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static object ToUPDATE(this NameValueCollection Request, string TableName, string WhereClausule, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Collections.Specialized.NameValueCollection
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da tabela
    - id: WhereClausule
      type: System.String
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.Object
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToUPDATE(Request As NameValueCollection, TableName As String, WhereClausule As String, ParamArray QueryStringKeys As String()) As Object
  overload: InnerLibs.Web.ToUPDATE*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToUPDATE(NameValueCollection, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToUPDATE(System.Collections.Specialized.NameValueCollection, System.String, System.String, System.String())
  name.vb: ToUPDATE(NameValueCollection, String, String, String())
- uid: InnerLibs.Web.ToUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  id: ToUPDATE(System.Web.HttpRequest,System.String,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToUPDATE(HttpRequest, String, String, String[])
  nameWithType: Web.ToUPDATE(HttpRequest, String, String, String[])
  fullName: InnerLibs.Web.ToUPDATE(System.Web.HttpRequest, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToUPDATE
    path: Web.vb
    startLine: 490
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static object ToUPDATE(this HttpRequest Request, string TableName, string WhereClausule, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da tabela
    - id: WhereClausule
      type: System.String
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.Object
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToUPDATE(Request As HttpRequest, TableName As String, WhereClausule As String, ParamArray QueryStringKeys As String()) As Object
  overload: InnerLibs.Web.ToUPDATE*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToUPDATE(HttpRequest, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToUPDATE(System.Web.HttpRequest, System.String, System.String, System.String())
  name.vb: ToUPDATE(HttpRequest, String, String, String())
- uid: InnerLibs.Web.ToINSERT(System.Web.HttpRequest,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToINSERT(System.Web.HttpRequest,System.String,System.String[])
  id: ToINSERT(System.Web.HttpRequest,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToINSERT(HttpRequest, String, String[])
  nameWithType: Web.ToINSERT(HttpRequest, String, String[])
  fullName: InnerLibs.Web.ToINSERT(System.Web.HttpRequest, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToINSERT
    path: Web.vb
    startLine: 502
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static object ToINSERT(this HttpRequest Request, string TableName, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Web.HttpRequest
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da Procedure
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.Object
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToINSERT(Request As HttpRequest, TableName As String, ParamArray QueryStringKeys As String()) As Object
  overload: InnerLibs.Web.ToINSERT*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToINSERT(HttpRequest, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToINSERT(System.Web.HttpRequest, System.String, System.String())
  name.vb: ToINSERT(HttpRequest, String, String())
- uid: InnerLibs.Web.ToINSERT(System.Collections.Specialized.NameValueCollection,System.String,System.String[])
  commentId: M:InnerLibs.Web.ToINSERT(System.Collections.Specialized.NameValueCollection,System.String,System.String[])
  id: ToINSERT(System.Collections.Specialized.NameValueCollection,System.String,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToINSERT(NameValueCollection, String, String[])
  nameWithType: Web.ToINSERT(NameValueCollection, String, String[])
  fullName: InnerLibs.Web.ToINSERT(System.Collections.Specialized.NameValueCollection, System.String, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToINSERT
    path: Web.vb
    startLine: 514
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nMonta um Comando SQL para executar um INSERT e trata parametros espicificos de\numa URL como as colunas da tabela de destino\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static object ToINSERT(this NameValueCollection Request, string TableName, params string[] QueryStringKeys)
    parameters:
    - id: Request
      type: System.Collections.Specialized.NameValueCollection
      description: Requisicao HTTP
    - id: TableName
      type: System.String
      description: Nome da tabela
    - id: QueryStringKeys
      type: System.String[]
      description: Parametros da URL que devem ser utilizados
    return:
      type: System.Object
      description: Uma string com o comando montado
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToINSERT(Request As NameValueCollection, TableName As String, ParamArray QueryStringKeys As String()) As Object
  overload: InnerLibs.Web.ToINSERT*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToINSERT(NameValueCollection, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToINSERT(System.Collections.Specialized.NameValueCollection, System.String, System.String())
  name.vb: ToINSERT(NameValueCollection, String, String())
- uid: InnerLibs.Web.WriteEnd(System.Web.HttpResponse,System.String)
  commentId: M:InnerLibs.Web.WriteEnd(System.Web.HttpResponse,System.String)
  id: WriteEnd(System.Web.HttpResponse,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteEnd(HttpResponse, String)
  nameWithType: Web.WriteEnd(HttpResponse, String)
  fullName: InnerLibs.Web.WriteEnd(System.Web.HttpResponse, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteEnd
    path: Web.vb
    startLine: 529
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um texto e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteEnd(this HttpResponse Response, string Text)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: Text
      type: System.String
      description: Texto
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteEnd(Response As HttpResponse, Text As String)
  overload: InnerLibs.Web.WriteEnd*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteEnd(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  commentId: M:InnerLibs.Web.WriteEnd(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  id: WriteEnd(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteEnd(HttpResponse, HtmlDocument)
  nameWithType: Web.WriteEnd(HttpResponse, HtmlDocument)
  fullName: InnerLibs.Web.WriteEnd(System.Web.HttpResponse, InnerLibs.HtmlParser.HtmlDocument)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteEnd
    path: Web.vb
    startLine: 540
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um texto e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteEnd(this HttpResponse Response, HtmlDocument Text)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: Text
      type: InnerLibs.HtmlParser.HtmlDocument
      description: Texto
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteEnd(Response As HttpResponse, Text As HtmlDocument)
  overload: InnerLibs.Web.WriteEnd*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteRedirect(System.Web.HttpResponse,System.Uri,System.String,System.Int32)
  commentId: M:InnerLibs.Web.WriteRedirect(System.Web.HttpResponse,System.Uri,System.String,System.Int32)
  id: WriteRedirect(System.Web.HttpResponse,System.Uri,System.String,System.Int32)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteRedirect(HttpResponse, Uri, String, Int32)
  nameWithType: Web.WriteRedirect(HttpResponse, Uri, String, Int32)
  fullName: InnerLibs.Web.WriteRedirect(System.Web.HttpResponse, System.Uri, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteRedirect
    path: Web.vb
    startLine: 553
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEsreve um script de Redirect na pagina e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteRedirect(this HttpResponse Response, Uri Url, string Message = "", int RefreshTime = 1)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: ''
    - id: Url
      type: System.Uri
      description: Url de Redirect
    - id: Message
      type: System.String
      description: Mensagem na pagina
    - id: RefreshTime
      type: System.Int32
      description: Tempo em segundos para dar Redirect
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteRedirect(Response As HttpResponse, Url As Uri, Message As String = "", RefreshTime As Integer = 1)
  overload: InnerLibs.Web.WriteRedirect*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteCSV(System.Web.HttpResponse,System.String,System.String)
  commentId: M:InnerLibs.Web.WriteCSV(System.Web.HttpResponse,System.String,System.String)
  id: WriteCSV(System.Web.HttpResponse,System.String,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteCSV(HttpResponse, String, String)
  nameWithType: Web.WriteCSV(HttpResponse, String, String)
  fullName: InnerLibs.Web.WriteCSV(System.Web.HttpResponse, System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteCSV
    path: Web.vb
    startLine: 565
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um arquivo CSV e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteCSV(this HttpResponse Response, string CSVString, string FileName = "CSV")
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: CSVString
      type: System.String
      description: String com o conteudo do arquivo CSV
    - id: FileName
      type: System.String
      description: Nome do arquivo CSV
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteCSV(Response As HttpResponse, CSVString As String, FileName As String = "CSV")
  overload: InnerLibs.Web.WriteCSV*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String)
  commentId: M:InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String)
  id: WriteJSON(System.Web.HttpResponse,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON(HttpResponse, String)
  nameWithType: Web.WriteJSON(HttpResponse, String)
  fullName: InnerLibs.Web.WriteJSON(System.Web.HttpResponse, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 577
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um JSON e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON(this HttpResponse Response, string JSON)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: JSON
      type: System.String
      description: String JSON
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(Response As HttpResponse, JSON As String)
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],System.String)
  commentId: M:InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],System.String)
  id: WriteImage(System.Web.HttpResponse,System.Byte[],System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteImage(HttpResponse, Byte[], String)
  nameWithType: Web.WriteImage(HttpResponse, Byte[], String)
  fullName: InnerLibs.Web.WriteImage(System.Web.HttpResponse, System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteImage
    path: Web.vb
    startLine: 589
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve uma imagem e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteImage(this HttpResponse Response, byte[] Image, string MimeType)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: Image
      type: System.Byte[]
      description: Imagem
    - id: MimeType
      type: System.String
      description: Formato MIME Type
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteImage(Response As HttpResponse, Image As Byte(), MimeType As String)
  overload: InnerLibs.Web.WriteImage*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.WriteImage(HttpResponse, Byte(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.WriteImage(System.Web.HttpResponse, System.Byte(), System.String)
  name.vb: WriteImage(HttpResponse, Byte(), String)
- uid: InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],InnerLibs.FileType)
  commentId: M:InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Byte[],InnerLibs.FileType)
  id: WriteImage(System.Web.HttpResponse,System.Byte[],InnerLibs.FileType)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteImage(HttpResponse, Byte[], FileType)
  nameWithType: Web.WriteImage(HttpResponse, Byte[], FileType)
  fullName: InnerLibs.Web.WriteImage(System.Web.HttpResponse, System.Byte[], InnerLibs.FileType)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteImage
    path: Web.vb
    startLine: 603
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve uma imagem e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteImage(this HttpResponse Response, byte[] Image, FileType MimeType)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: Image
      type: System.Byte[]
      description: Imagem
    - id: MimeType
      type: InnerLibs.FileType
      description: Formato MIME Type
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteImage(Response As HttpResponse, Image As Byte(), MimeType As FileType)
  overload: InnerLibs.Web.WriteImage*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.WriteImage(HttpResponse, Byte(), FileType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.WriteImage(System.Web.HttpResponse, System.Byte(), InnerLibs.FileType)
  name.vb: WriteImage(HttpResponse, Byte(), FileType)
- uid: InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)
  commentId: M:InnerLibs.Web.WriteImage(System.Web.HttpResponse,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)
  id: WriteImage(System.Web.HttpResponse,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteImage(HttpResponse, Image, ImageFormat)
  nameWithType: Web.WriteImage(HttpResponse, Image, ImageFormat)
  fullName: InnerLibs.Web.WriteImage(System.Web.HttpResponse, System.Drawing.Image, System.Drawing.Imaging.ImageFormat)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteImage
    path: Web.vb
    startLine: 616
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve uma imagem e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteImage(this HttpResponse Response, Image Image, ImageFormat ImageFormat = null)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: Image
      type: System.Drawing.Image
      description: Imagem
    - id: ImageFormat
      type: System.Drawing.Imaging.ImageFormat
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteImage(Response As HttpResponse, Image As Image, ImageFormat As ImageFormat = Nothing)
  overload: InnerLibs.Web.WriteImage*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.AJAX.Response)
  commentId: M:InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.AJAX.Response)
  id: WriteJSON(System.Web.HttpResponse,InnerLibs.AJAX.Response)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON(HttpResponse, AJAX.Response)
  nameWithType: Web.WriteJSON(HttpResponse, AJAX.Response)
  fullName: InnerLibs.Web.WriteJSON(System.Web.HttpResponse, InnerLibs.AJAX.Response)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 629
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um JSON e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON(this HttpResponse Response, AJAX.Response JSON)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: JSON
      type: InnerLibs.AJAX.Response
      description: Objeto de resposta AJAX
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(Response As HttpResponse, JSON As AJAX.Response)
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,``0)
  commentId: M:InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,``0)
  id: WriteJSON``1(System.Web.HttpResponse,``0)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON<Type>(HttpResponse, Type)
  nameWithType: Web.WriteJSON<Type>(HttpResponse, Type)
  fullName: InnerLibs.Web.WriteJSON<Type>(System.Web.HttpResponse, Type)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 641
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um JSON e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON<Type>(this HttpResponse Response, Type JSON)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: JSON
      type: '{Type}'
      description: Objeto de resposta AJAX
    typeParameters:
    - id: Type
      description: Tipo de Objeto que será Serializado em JSON
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(Of Type)(Response As HttpResponse, JSON As Type)
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.WriteJSON(Of Type)(HttpResponse, Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.WriteJSON(Of Type)(System.Web.HttpResponse, Type)
  name.vb: WriteJSON(Of Type)(HttpResponse, Type)
- uid: InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String,System.String,System.Object)
  commentId: M:InnerLibs.Web.WriteJSON(System.Web.HttpResponse,System.String,System.String,System.Object)
  id: WriteJSON(System.Web.HttpResponse,System.String,System.String,System.Object)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON(HttpResponse, String, String, Object)
  nameWithType: Web.WriteJSON(HttpResponse, String, String, Object)
  fullName: InnerLibs.Web.WriteJSON(System.Web.HttpResponse, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 654
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um JSON e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON(this HttpResponse HttpResponse, string Status, string Message, object Response = null)
    parameters:
    - id: HttpResponse
      type: System.Web.HttpResponse
      description: Response
    - id: Status
      type: System.String
      description: Status
    - id: Message
      type: System.String
      description: Mensagem
    - id: Response
      type: System.Object
      description: Objeto anexado ao JSON
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(HttpResponse As HttpResponse, Status As String, Message As String, Response As Object = Nothing)
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,System.Func{``0},System.String,System.String)
  commentId: M:InnerLibs.Web.WriteJSON``1(System.Web.HttpResponse,System.Func{``0},System.String,System.String)
  id: WriteJSON``1(System.Web.HttpResponse,System.Func{``0},System.String,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON<Type>(HttpResponse, Func<Type>, String, String)
  nameWithType: Web.WriteJSON<Type>(HttpResponse, Func<Type>, String, String)
  fullName: InnerLibs.Web.WriteJSON<Type>(System.Web.HttpResponse, System.Func<Type>, System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 666
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um JSON e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON<Type>(this HttpResponse HttpResponse, Func<Type> ActResponse, string SuccessMessage = "", string ErrorMessage = "")
    parameters:
    - id: HttpResponse
      type: System.Web.HttpResponse
      description: Response
    - id: ActResponse
      type: System.Func{{Type}}
      description: Função Anexada que dará origem ao response
    - id: SuccessMessage
      type: System.String
      description: Mensagem de Sucesso
    - id: ErrorMessage
      type: System.String
      description: Mensagem de Erro
    typeParameters:
    - id: Type
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(Of Type)(HttpResponse As HttpResponse, ActResponse As Func(Of Type), SuccessMessage As String = "", ErrorMessage As String = "")
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.WriteJSON(Of Type)(HttpResponse, Func(Of Type), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.WriteJSON(Of Type)(System.Web.HttpResponse, System.Func(Of Type), System.String, System.String)
  name.vb: WriteJSON(Of Type)(HttpResponse, Func(Of Type), String, String)
- uid: InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.String)
  commentId: M:InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.String)
  id: WriteXML(System.Web.HttpResponse,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteXML(HttpResponse, String)
  nameWithType: Web.WriteXML(HttpResponse, String)
  fullName: InnerLibs.Web.WriteXML(System.Web.HttpResponse, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteXML
    path: Web.vb
    startLine: 688
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um XML e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteXML(this HttpResponse Response, string XML)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: XML
      type: System.String
      description: String XML
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteXML(Response As HttpResponse, XML As String)
  overload: InnerLibs.Web.WriteXML*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.Xml.XmlDocument)
  commentId: M:InnerLibs.Web.WriteXML(System.Web.HttpResponse,System.Xml.XmlDocument)
  id: WriteXML(System.Web.HttpResponse,System.Xml.XmlDocument)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteXML(HttpResponse, XmlDocument)
  nameWithType: Web.WriteXML(HttpResponse, XmlDocument)
  fullName: InnerLibs.Web.WriteXML(System.Web.HttpResponse, System.Xml.XmlDocument)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteXML
    path: Web.vb
    startLine: 699
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um XML e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteXML(this HttpResponse Response, XmlDocument XML)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: XML
      type: System.Xml.XmlDocument
      description: String XML
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteXML(Response As HttpResponse, XML As XmlDocument)
  overload: InnerLibs.Web.WriteXML*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteScript(System.Web.HttpResponse,System.String)
  commentId: M:InnerLibs.Web.WriteScript(System.Web.HttpResponse,System.String)
  id: WriteScript(System.Web.HttpResponse,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteScript(HttpResponse, String)
  nameWithType: Web.WriteScript(HttpResponse, String)
  fullName: InnerLibs.Web.WriteScript(System.Web.HttpResponse, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteScript
    path: Web.vb
    startLine: 709
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um script na página\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteScript(this HttpResponse Response, string ScriptOrURL)
    parameters:
    - id: Response
      type: System.Web.HttpResponse
      description: HttpResponse
    - id: ScriptOrURL
      type: System.String
      description: Texto ou URL absoluta do Script
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteScript(Response As HttpResponse, ScriptOrURL As String)
  overload: InnerLibs.Web.WriteScript*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  commentId: M:InnerLibs.Web.WriteJSON(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  id: WriteJSON(System.Web.HttpResponse,InnerLibs.HtmlParser.HtmlDocument)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: WriteJSON(HttpResponse, HtmlDocument)
  nameWithType: Web.WriteJSON(HttpResponse, HtmlDocument)
  fullName: InnerLibs.Web.WriteJSON(System.Web.HttpResponse, InnerLibs.HtmlParser.HtmlDocument)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: WriteJSON
    path: Web.vb
    startLine: 723
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEscreve um <xref href=\"InnerLibs.HtmlParser.HtmlDocument\" data-throw-if-not-resolved=\"false\"></xref> e finaliza um HttpResponse\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void WriteJSON(this HttpResponse HttpResponse, HtmlDocument Document)
    parameters:
    - id: HttpResponse
      type: System.Web.HttpResponse
      description: Response
    - id: Document
      type: InnerLibs.HtmlParser.HtmlDocument
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub WriteJSON(HttpResponse As HttpResponse, Document As HtmlDocument)
  overload: InnerLibs.Web.WriteJSON*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetFacebookUsername(System.String)
  commentId: M:InnerLibs.Web.GetFacebookUsername(System.String)
  id: GetFacebookUsername(System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetFacebookUsername(String)
  nameWithType: Web.GetFacebookUsername(String)
  fullName: InnerLibs.Web.GetFacebookUsername(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetFacebookUsername
    path: Web.vb
    startLine: 734
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura o Username ou UserID de uma URL do Facebook\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string GetFacebookUsername(this string URL)
    parameters:
    - id: URL
      type: System.String
      description: URL do Facebook
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function GetFacebookUsername(URL As String) As String
  overload: InnerLibs.Web.GetFacebookUsername*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetFacebookUsername(System.Uri)
  commentId: M:InnerLibs.Web.GetFacebookUsername(System.Uri)
  id: GetFacebookUsername(System.Uri)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetFacebookUsername(Uri)
  nameWithType: Web.GetFacebookUsername(Uri)
  fullName: InnerLibs.Web.GetFacebookUsername(System.Uri)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetFacebookUsername
    path: Web.vb
    startLine: 747
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura o Username ou UserID de uma URL do Facebook\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string GetFacebookUsername(this Uri URL)
    parameters:
    - id: URL
      type: System.Uri
      description: URL do Facebook
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function GetFacebookUsername(URL As Uri) As String
  overload: InnerLibs.Web.GetFacebookUsername*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetYoutubeThumbnail(System.String)
  commentId: M:InnerLibs.Web.GetYoutubeThumbnail(System.String)
  id: GetYoutubeThumbnail(System.String)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetYoutubeThumbnail(String)
  nameWithType: Web.GetYoutubeThumbnail(String)
  fullName: InnerLibs.Web.GetYoutubeThumbnail(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetYoutubeThumbnail
    path: Web.vb
    startLine: 756
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura a Thumbnail de um video do youtube\n"
  example: []
  syntax:
    content: public static Image GetYoutubeThumbnail(string URL)
    parameters:
    - id: URL
      type: System.String
      description: Url do Youtube
    return:
      type: System.Drawing.Image
      description: ''
    content.vb: Public Shared Function GetYoutubeThumbnail(URL As String) As Image
  overload: InnerLibs.Web.GetYoutubeThumbnail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetYoutubeThumbnail(System.Uri)
  commentId: M:InnerLibs.Web.GetYoutubeThumbnail(System.Uri)
  id: GetYoutubeThumbnail(System.Uri)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetYoutubeThumbnail(Uri)
  nameWithType: Web.GetYoutubeThumbnail(Uri)
  fullName: InnerLibs.Web.GetYoutubeThumbnail(System.Uri)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetYoutubeThumbnail
    path: Web.vb
    startLine: 765
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura a Thumbnail de um video do youtube\n"
  example: []
  syntax:
    content: public static Image GetYoutubeThumbnail(Uri URL)
    parameters:
    - id: URL
      type: System.Uri
      description: Url do Youtube
    return:
      type: System.Drawing.Image
      description: ''
    content.vb: Public Shared Function GetYoutubeThumbnail(URL As Uri) As Image
  overload: InnerLibs.Web.GetYoutubeThumbnail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetVideoId(System.String)
  commentId: M:InnerLibs.Web.GetVideoId(System.String)
  id: GetVideoId(System.String)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetVideoId(String)
  nameWithType: Web.GetVideoId(String)
  fullName: InnerLibs.Web.GetVideoId(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetVideoId
    path: Web.vb
    startLine: 775
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura o ID de um video do YOUTUBE ou VIMEO em uma URL\n"
  example: []
  syntax:
    content: public static string GetVideoId(string URL)
    parameters:
    - id: URL
      type: System.String
      description: URL do video
    return:
      type: System.String
      description: ID do video do youtube ou Vimeo
    content.vb: Public Shared Function GetVideoId(URL As String) As String
  overload: InnerLibs.Web.GetVideoId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.GetVideoId(System.Uri)
  commentId: M:InnerLibs.Web.GetVideoId(System.Uri)
  id: GetVideoId(System.Uri)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: GetVideoId(Uri)
  nameWithType: Web.GetVideoId(Uri)
  fullName: InnerLibs.Web.GetVideoId(System.Uri)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: GetVideoId
    path: Web.vb
    startLine: 795
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nCaptura o ID de um video do youtube em uma URL\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string GetVideoId(this Uri URL)
    parameters:
    - id: URL
      type: System.Uri
      description: URL do video
    return:
      type: System.String
      description: ID do video do youtube
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function GetVideoId(URL As Uri) As String
  overload: InnerLibs.Web.GetVideoId*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.IsDown(System.String)
  commentId: M:InnerLibs.Web.IsDown(System.String)
  id: IsDown(System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: IsDown(String)
  nameWithType: Web.IsDown(String)
  fullName: InnerLibs.Web.IsDown(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: IsDown
    path: Web.vb
    startLine: 806
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se um site está indisponível usando o serviço IsUp.Me\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static bool IsDown(this string Url)
    parameters:
    - id: Url
      type: System.String
      description: Url
    return:
      type: System.Boolean
      description: True para site fora do Ar
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function IsDown(Url As String) As Boolean
  overload: InnerLibs.Web.IsDown*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.IsUp(System.String)
  commentId: M:InnerLibs.Web.IsUp(System.String)
  id: IsUp(System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: IsUp(String)
  nameWithType: Web.IsUp(String)
  fullName: InnerLibs.Web.IsUp(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: IsUp
    path: Web.vb
    startLine: 822
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se um site está disponível usando o serviço IsUp.Me\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static bool IsUp(this string Url)
    parameters:
    - id: Url
      type: System.String
      description: Url
    return:
      type: System.Boolean
      description: False para site fora do Ar
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function IsUp(Url As String) As Boolean
  overload: InnerLibs.Web.IsUp*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.IsDown(System.Uri)
  commentId: M:InnerLibs.Web.IsDown(System.Uri)
  id: IsDown(System.Uri)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: IsDown(Uri)
  nameWithType: Web.IsDown(Uri)
  fullName: InnerLibs.Web.IsDown(System.Uri)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: IsDown
    path: Web.vb
    startLine: 833
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se um site está indisponível usando o serviço IsUp.Me\n"
  example: []
  syntax:
    content: public static bool IsDown(Uri Url)
    parameters:
    - id: Url
      type: System.Uri
      description: Url
    return:
      type: System.Boolean
      description: True para site fora do Ar
    content.vb: Public Shared Function IsDown(Url As Uri) As Boolean
  overload: InnerLibs.Web.IsDown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.IsUp(System.Uri)
  commentId: M:InnerLibs.Web.IsUp(System.Uri)
  id: IsUp(System.Uri)
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: IsUp(Uri)
  nameWithType: Web.IsUp(Uri)
  fullName: InnerLibs.Web.IsUp(System.Uri)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: IsUp
    path: Web.vb
    startLine: 843
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se um site está disponível usando o serviço IsUp.Me\n"
  example: []
  syntax:
    content: public static bool IsUp(Uri Url)
    parameters:
    - id: Url
      type: System.Uri
      description: Url
    return:
      type: System.Boolean
      description: False para site fora do Ar
    content.vb: Public Shared Function IsUp(Url As Uri) As Boolean
  overload: InnerLibs.Web.IsUp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.ExtractOptions(System.Web.UI.HtmlControls.HtmlSelect)
  commentId: M:InnerLibs.Web.ExtractOptions(System.Web.UI.HtmlControls.HtmlSelect)
  id: ExtractOptions(System.Web.UI.HtmlControls.HtmlSelect)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ExtractOptions(HtmlSelect)
  nameWithType: Web.ExtractOptions(HtmlSelect)
  fullName: InnerLibs.Web.ExtractOptions(System.Web.UI.HtmlControls.HtmlSelect)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ExtractOptions
    path: Web.vb
    startLine: 852
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna uma string HTML com os options de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ExtractOptions(this HtmlSelect Control)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: COntrole HTMLSelect
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ExtractOptions(Control As HtmlSelect) As String
  overload: InnerLibs.Web.ExtractOptions*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.ToHtmlString(System.Web.UI.HtmlControls.HtmlSelect)
  commentId: M:InnerLibs.Web.ToHtmlString(System.Web.UI.HtmlControls.HtmlSelect)
  id: ToHtmlString(System.Web.UI.HtmlControls.HtmlSelect)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToHtmlString(HtmlSelect)
  nameWithType: Web.ToHtmlString(HtmlSelect)
  fullName: InnerLibs.Web.ToHtmlString(System.Web.UI.HtmlControls.HtmlSelect)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToHtmlString
    path: Web.vb
    startLine: 866
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna uma string HTML de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static string ToHtmlString(this HtmlSelect Control)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: COntrole HTMLSelect
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToHtmlString(Control As HtmlSelect) As String
  overload: InnerLibs.Web.ToHtmlString*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  commentId: M:InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  id: SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SelectValues(HtmlSelect, String[])
  nameWithType: Web.SelectValues(HtmlSelect, String[])
  fullName: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SelectValues
    path: Web.vb
    startLine: 881
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nSeleciona Valores de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect SelectValues(this HtmlSelect Control, params string[] Values)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: Values
      type: System.String[]
      description: Valores que devem receber a propriedade select
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SelectValues(Control As HtmlSelect, ParamArray Values As String()) As HtmlSelect
  overload: InnerLibs.Web.SelectValues*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.SelectValues(HtmlSelect, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect, System.String())
  name.vb: SelectValues(HtmlSelect, String())
- uid: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  commentId: M:InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  id: SelectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SelectValues(HtmlSelect, Func<ListItem, Boolean>)
  nameWithType: Web.SelectValues(HtmlSelect, Func<ListItem, Boolean>)
  fullName: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect, System.Func<System.Web.UI.WebControls.ListItem, System.Boolean>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SelectValues
    path: Web.vb
    startLine: 899
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nSeleciona Valores de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect SelectValues(this HtmlSelect Control, Func<ListItem, bool> Predicate)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: Predicate
      type: System.Func{System.Web.UI.WebControls.ListItem,System.Boolean}
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SelectValues(Control As HtmlSelect, Predicate As Func(Of ListItem, Boolean)) As HtmlSelect
  overload: InnerLibs.Web.SelectValues*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.SelectValues(HtmlSelect, Func(Of ListItem, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.SelectValues(System.Web.UI.HtmlControls.HtmlSelect, System.Func(Of System.Web.UI.WebControls.ListItem, System.Boolean))
  name.vb: SelectValues(HtmlSelect, Func(Of ListItem, Boolean))
- uid: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  commentId: M:InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  id: DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.Func{System.Web.UI.WebControls.ListItem,System.Boolean})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: DisselectValues(HtmlSelect, Func<ListItem, Boolean>)
  nameWithType: Web.DisselectValues(HtmlSelect, Func<ListItem, Boolean>)
  fullName: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect, System.Func<System.Web.UI.WebControls.ListItem, System.Boolean>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: DisselectValues
    path: Web.vb
    startLine: 922
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nSeleciona Valores de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect DisselectValues(this HtmlSelect Control, Func<ListItem, bool> Predicate)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: Predicate
      type: System.Func{System.Web.UI.WebControls.ListItem,System.Boolean}
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function DisselectValues(Control As HtmlSelect, Predicate As Func(Of ListItem, Boolean)) As HtmlSelect
  overload: InnerLibs.Web.DisselectValues*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.DisselectValues(HtmlSelect, Func(Of ListItem, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect, System.Func(Of System.Web.UI.WebControls.ListItem, System.Boolean))
  name.vb: DisselectValues(HtmlSelect, Func(Of ListItem, Boolean))
- uid: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  commentId: M:InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  id: DisselectValues(System.Web.UI.HtmlControls.HtmlSelect,System.String[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: DisselectValues(HtmlSelect, String[])
  nameWithType: Web.DisselectValues(HtmlSelect, String[])
  fullName: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: DisselectValues
    path: Web.vb
    startLine: 940
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nDesseleciona Valores de um <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect DisselectValues(this HtmlSelect Control, params string[] Values)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: Values
      type: System.String[]
      description: Valores que serao desselecionados
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function DisselectValues(Control As HtmlSelect, ParamArray Values As String()) As HtmlSelect
  overload: InnerLibs.Web.DisselectValues*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.DisselectValues(HtmlSelect, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.DisselectValues(System.Web.UI.HtmlControls.HtmlSelect, System.String())
  name.vb: DisselectValues(HtmlSelect, String())
- uid: InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.String,System.String)
  commentId: M:InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.String,System.String)
  id: SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.String,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SetItem(HtmlSelect, String, String)
  nameWithType: Web.SetItem(HtmlSelect, String, String)
  fullName: InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect, System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SetItem
    path: Web.vb
    startLine: 954
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdiciona um novo <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> ao <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref> se um item identico nao existir no mesmo\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static ListItem SetItem(this HtmlSelect Control, string Text, string Value = "")
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: Text
      type: System.String
      description: Texto do Item
    - id: Value
      type: System.String
      description: Valor do Item
    return:
      type: System.Web.UI.WebControls.ListItem
      description: o objeto ListItem adicionado ou existente
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SetItem(Control As HtmlSelect, Text As String, Value As String = "") As ListItem
  overload: InnerLibs.Web.SetItem*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.Web.UI.WebControls.ListItem)
  commentId: M:InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.Web.UI.WebControls.ListItem)
  id: SetItem(System.Web.UI.HtmlControls.HtmlSelect,System.Web.UI.WebControls.ListItem)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SetItem(HtmlSelect, ListItem)
  nameWithType: Web.SetItem(HtmlSelect, ListItem)
  fullName: InnerLibs.Web.SetItem(System.Web.UI.HtmlControls.HtmlSelect, System.Web.UI.WebControls.ListItem)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SetItem
    path: Web.vb
    startLine: 970
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdiciona um novo <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> ao <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref> se um item identico nao existir no mesmo\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static ListItem SetItem(this HtmlSelect Control, ListItem li)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: li
      type: System.Web.UI.WebControls.ListItem
    return:
      type: System.Web.UI.WebControls.ListItem
      description: o objeto ListItem adicionado ou existente
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SetItem(Control As HtmlSelect, li As ListItem) As ListItem
  overload: InnerLibs.Web.SetItem*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  id: AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: AsListItem
    path: Web.vb
    startLine: 982
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna um <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> a partir de 2 propriedades de um objeto\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static ListItem AsListItem<T, TextType, ValueType>(this T Obj, Func<T, TextType> Text, Func<T, ValueType> Value = null)
          where T : class
    parameters:
    - id: Obj
      type: '{T}'
      description: Objeto
    - id: Text
      type: System.Func{{T},{TextType}}
    - id: Value
      type: System.Func{{T},{ValueType}}
      description: Valor do ListItem
    typeParameters:
    - id: T
      description: Tipo do objeto
    - id: TextType
    - id: ValueType
    return:
      type: System.Web.UI.WebControls.ListItem
      description: ''
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function AsListItem(Of T As Class, TextType, ValueType)(Obj As T, Text As Func(Of T, TextType), Value As Func(Of T, ValueType) = Nothing) As ListItem
  overload: InnerLibs.Web.AsListItem*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
- uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  id: ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  nameWithType: Web.ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, System.Func<T, System.Boolean>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToListItems
    path: Web.vb
    startLine: 994
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna uma lista de <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> a partir de uma coleçao de objetos\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static List<ListItem> ToListItems<T, TextType, ValueType>(this IEnumerable<T> List, Func<T, TextType> Text, Func<T, ValueType> Value = null, Func<T, bool> Selected = null)
          where T : class
    parameters:
    - id: List
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Lista
    - id: Text
      type: System.Func{{T},{TextType}}
    - id: Value
      type: System.Func{{T},{ValueType}}
      description: Valor do ListItem
    - id: Selected
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
      description: Tipo do objeto
    - id: TextType
    - id: ValueType
    return:
      type: System.Collections.Generic.List{System.Web.UI.WebControls.ListItem}
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToListItems(Of T As Class, TextType, ValueType)(List As IEnumerable(Of T), Text As Func(Of T, TextType), Value As Func(Of T, ValueType) = Nothing, Selected As Func(Of T, Boolean) = Nothing) As List(Of ListItem)
  overload: InnerLibs.Web.ToListItems*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), System.Func(Of T, System.Boolean))
  name.vb: ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
- uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  id: ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  nameWithType: Web.ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, ValueType[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: ToListItems
    path: Web.vb
    startLine: 1013
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRetorna uma lista de <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> a partir de uma coleçao de objetos\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static List<ListItem> ToListItems<T, TextType, ValueType>(this IEnumerable<T> List, Func<T, TextType> Text, Func<T, ValueType> Value, params ValueType[] SelectedValues)
          where T : class
    parameters:
    - id: List
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Lista
    - id: Text
      type: System.Func{{T},{TextType}}
    - id: Value
      type: System.Func{{T},{ValueType}}
      description: Valor do ListItem
    - id: SelectedValues
      type: '{ValueType}[]'
    typeParameters:
    - id: T
      description: Tipo do objeto
    - id: TextType
    - id: ValueType
    return:
      type: System.Collections.Generic.List{System.Web.UI.WebControls.ListItem}
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function ToListItems(Of T As Class, TextType, ValueType)(List As IEnumerable(Of T), Text As Func(Of T, TextType), Value As Func(Of T, ValueType), ParamArray SelectedValues As ValueType()) As List(Of ListItem)
  overload: InnerLibs.Web.ToListItems*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), ValueType())
  name.vb: ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
- uid: InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  id: SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SetItems<T, TextType, ValueType>(HtmlSelect, IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  nameWithType: Web.SetItems<T, TextType, ValueType>(HtmlSelect, IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  fullName: InnerLibs.Web.SetItems<T, TextType, ValueType>(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, System.Func<T, System.Boolean>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SetItems
    path: Web.vb
    startLine: 1028
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdiciona varios <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> ao <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref> se estes nao existirem no mesmo\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect SetItems<T, TextType, ValueType>(this HtmlSelect Control, IEnumerable<T> List, Func<T, TextType> Text, Func<T, ValueType> Value = null, Func<T, bool> Selected = null)
          where T : class
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: List
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Lista de itens que serão adicionados
    - id: Text
      type: System.Func{{T},{TextType}}
      description: Texto do Item
    - id: Value
      type: System.Func{{T},{ValueType}}
      description: Valor do Item
    - id: Selected
      type: System.Func{{T},System.Boolean}
      description: QUais valores devem ser selecionados
    typeParameters:
    - id: T
    - id: TextType
    - id: ValueType
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: o objeto ListItem adicionado ou existente
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SetItems(Of T As Class, TextType, ValueType)(Control As HtmlSelect, List As IEnumerable(Of T), Text As Func(Of T, TextType), Value As Func(Of T, ValueType) = Nothing, Selected As Func(Of T, Boolean) = Nothing) As HtmlSelect
  overload: InnerLibs.Web.SetItems*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.SetItems(Of T, TextType, ValueType)(HtmlSelect, IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.SetItems(Of T, TextType, ValueType)(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), System.Func(Of T, System.Boolean))
  name.vb: SetItems(Of T, TextType, ValueType)(HtmlSelect, IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
- uid: InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  commentId: M:InnerLibs.Web.SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  id: SetItems``3(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SetItems<T, TextType, ValueType>(HtmlSelect, IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  nameWithType: Web.SetItems<T, TextType, ValueType>(HtmlSelect, IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  fullName: InnerLibs.Web.SetItems<T, TextType, ValueType>(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, ValueType[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SetItems
    path: Web.vb
    startLine: 1051
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdiciona varios <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> ao <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref> se estes nao existirem no mesmo\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect SetItems<T, TextType, ValueType>(this HtmlSelect Control, IEnumerable<T> List, Func<T, TextType> Text, Func<T, ValueType> Value, params ValueType[] SelectedValues)
          where T : class
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: List
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Lista de itens que serão adicionados
    - id: Text
      type: System.Func{{T},{TextType}}
      description: Texto do Item
    - id: Value
      type: System.Func{{T},{ValueType}}
      description: Valor do Item
    - id: SelectedValues
      type: '{ValueType}[]'
      description: QUais valores devem ser selecionados
    typeParameters:
    - id: T
    - id: TextType
    - id: ValueType
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: o objeto ListItem adicionado ou existente
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SetItems(Of T As Class, TextType, ValueType)(Control As HtmlSelect, List As IEnumerable(Of T), Text As Func(Of T, TextType), Value As Func(Of T, ValueType), ParamArray SelectedValues As ValueType()) As HtmlSelect
  overload: InnerLibs.Web.SetItems*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.SetItems(Of T, TextType, ValueType)(HtmlSelect, IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.SetItems(Of T, TextType, ValueType)(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), ValueType())
  name.vb: SetItems(Of T, TextType, ValueType)(HtmlSelect, IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
- uid: InnerLibs.Web.SetItems(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.List{System.Web.UI.WebControls.ListItem})
  commentId: M:InnerLibs.Web.SetItems(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.List{System.Web.UI.WebControls.ListItem})
  id: SetItems(System.Web.UI.HtmlControls.HtmlSelect,System.Collections.Generic.List{System.Web.UI.WebControls.ListItem})
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: SetItems(HtmlSelect, List<ListItem>)
  nameWithType: Web.SetItems(HtmlSelect, List<ListItem>)
  fullName: InnerLibs.Web.SetItems(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.List<System.Web.UI.WebControls.ListItem>)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: SetItems
    path: Web.vb
    startLine: 1065
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nAdiciona varios <xref href=\"System.Web.UI.WebControls.ListItem\" data-throw-if-not-resolved=\"false\"></xref> ao <xref href=\"System.Web.UI.HtmlControls.HtmlSelect\" data-throw-if-not-resolved=\"false\"></xref> se estes nao existirem no mesmo\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static HtmlSelect SetItems(this HtmlSelect Control, List<ListItem> List)
    parameters:
    - id: Control
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: Controle <xref href="System.Web.UI.HtmlControls.HtmlSelect" data-throw-if-not-resolved="false"></xref>
    - id: List
      type: System.Collections.Generic.List{System.Web.UI.WebControls.ListItem}
      description: Lista de itens que serão adicionados
    return:
      type: System.Web.UI.HtmlControls.HtmlSelect
      description: o objeto ListItem adicionado ou existente
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Function SetItems(Control As HtmlSelect, List As List(Of ListItem)) As HtmlSelect
  overload: InnerLibs.Web.SetItems*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.SetItems(HtmlSelect, List(Of ListItem))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.SetItems(System.Web.UI.HtmlControls.HtmlSelect, System.Collections.Generic.List(Of System.Web.UI.WebControls.ListItem))
  name.vb: SetItems(HtmlSelect, List(Of ListItem))
- uid: InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,InnerLibs.FileType)
  commentId: M:InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,InnerLibs.FileType)
  id: RangeDownload(System.Web.HttpContext@,System.Byte[]@,InnerLibs.FileType)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: RangeDownload(ref HttpContext, ref Byte[], FileType)
  nameWithType: Web.RangeDownload(ref HttpContext, ref Byte[], FileType)
  fullName: InnerLibs.Web.RangeDownload(ref System.Web.HttpContext, ref System.Byte[], InnerLibs.FileType)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: RangeDownload
    path: Web.vb
    startLine: 1080
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRealiza um download parcial de um <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void RangeDownload(this ref HttpContext Context, ref byte[] Bytes, FileType FileType)
    parameters:
    - id: Context
      type: System.Web.HttpContext
      description: Context HTTP
    - id: Bytes
      type: System.Byte[]
      description: Byte array
    - id: FileType
      type: InnerLibs.FileType
      description: Tipo do Arquivo
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub RangeDownload(ByRef Context As HttpContext, ByRef Bytes As Byte(), FileType As FileType)
  overload: InnerLibs.Web.RangeDownload*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.RangeDownload(ByRef HttpContext, ByRef Byte(), FileType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.RangeDownload(ByRef System.Web.HttpContext, ByRef System.Byte(), InnerLibs.FileType)
  name.vb: RangeDownload(ByRef HttpContext, ByRef Byte(), FileType)
- uid: InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,System.String)
  commentId: M:InnerLibs.Web.RangeDownload(System.Web.HttpContext@,System.Byte[]@,System.String)
  id: RangeDownload(System.Web.HttpContext@,System.Byte[]@,System.String)
  isExtensionMethod: true
  parent: InnerLibs.Web
  langs:
  - csharp
  - vb
  name: RangeDownload(ref HttpContext, ref Byte[], String)
  nameWithType: Web.RangeDownload(ref HttpContext, ref Byte[], String)
  fullName: InnerLibs.Web.RangeDownload(ref System.Web.HttpContext, ref System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/Web.vb
    id: RangeDownload
    path: Web.vb
    startLine: 1090
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nRealiza um download parcial de um <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Extension]

      public static void RangeDownload(this ref HttpContext Context, ref byte[] Bytes, string ContentType)
    parameters:
    - id: Context
      type: System.Web.HttpContext
      description: Context HTTP
    - id: Bytes
      type: System.Byte[]
      description: Byte array
    - id: ContentType
      type: System.String
      description: MIME Type do Download
    content.vb: >-
      <Extension>

      <ExtensionAttribute>

      Public Shared Sub RangeDownload(ByRef Context As HttpContext, ByRef Bytes As Byte(), ContentType As String)
  overload: InnerLibs.Web.RangeDownload*
  attributes:
  - type: System.Runtime.CompilerServices.ExtensionAttribute
    ctor: System.Runtime.CompilerServices.ExtensionAttribute.#ctor
    arguments: []
  nameWithType.vb: Web.RangeDownload(ByRef HttpContext, ByRef Byte(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: InnerLibs.Web.RangeDownload(ByRef System.Web.HttpContext, ByRef System.Byte(), System.String)
  name.vb: RangeDownload(ByRef HttpContext, ByRef Byte(), String)
references:
- uid: InnerLibs
  commentId: N:InnerLibs
  name: InnerLibs
  nameWithType: InnerLibs
  fullName: InnerLibs
- uid: InnerLibs.Web.InnerLibs.ClassTools.CreateDictionary
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary()
  nameWithType: ClassTools.CreateDictionary()
  fullName: InnerLibs.ClassTools.CreateDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  nameWithType: ClassTools.GetProperties(BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object)
  name: GetProperties()
  nameWithType: ClassTools.GetProperties()
  fullName: InnerLibs.ClassTools.GetProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  name: GetPropertyValue(String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  name: GetPropertyValue<Type>(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  name: GetPropertyValue(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  name: HasProperty(String)
  nameWithType: ClassTools.HasProperty(String)
  fullName: InnerLibs.ClassTools.HasProperty(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsArrayOf``1
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  name: IsArrayOf<T>()
  nameWithType: ClassTools.IsArrayOf<T>()
  fullName: InnerLibs.ClassTools.IsArrayOf<T>()
  nameWithType.vb: ClassTools.IsArrayOf(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)()
  name.vb: IsArrayOf(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsDictionary
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsDictionary(System.Object)
  name: IsDictionary()
  nameWithType: ClassTools.IsDictionary()
  fullName: InnerLibs.ClassTools.IsDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsIn(IEnumerable<Web>, IEqualityComparer<Web>)
  nameWithType: ClassTools.IsIn(IEnumerable<Web>, IEqualityComparer<Web>)
  fullName: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable<InnerLibs.Web>, System.Collections.Generic.IEqualityComparer<InnerLibs.Web>)
  nameWithType.vb: ClassTools.IsIn(IEnumerable(Of Web), IEqualityComparer(Of Web))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable(Of InnerLibs.Web), System.Collections.Generic.IEqualityComparer(Of InnerLibs.Web))
  name.vb: IsIn(IEnumerable(Of Web), IEqualityComparer(Of Web))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.Web}[],System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  name: IsInAny(IEnumerable<Web>[], IEqualityComparer<Web>)
  nameWithType: ClassTools.IsInAny(IEnumerable<Web>[], IEqualityComparer<Web>)
  fullName: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable<InnerLibs.Web>[], System.Collections.Generic.IEqualityComparer<InnerLibs.Web>)
  nameWithType.vb: ClassTools.IsInAny(IEnumerable(Of Web)(), IEqualityComparer(Of Web))
  fullName.vb: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable(Of InnerLibs.Web)(), System.Collections.Generic.IEqualityComparer(Of InnerLibs.Web))
  name.vb: IsInAny(IEnumerable(Of Web)(), IEqualityComparer(Of Web))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.Web}[],System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.Web}[],System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsList
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsList(System.Object)
  name: IsList()
  nameWithType: ClassTools.IsList()
  fullName: InnerLibs.ClassTools.IsList()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsNotIn(IEnumerable<Web>, IEqualityComparer<Web>)
  nameWithType: ClassTools.IsNotIn(IEnumerable<Web>, IEqualityComparer<Web>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable<InnerLibs.Web>, System.Collections.Generic.IEqualityComparer<InnerLibs.Web>)
  nameWithType.vb: ClassTools.IsNotIn(IEnumerable(Of Web), IEqualityComparer(Of Web))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable(Of InnerLibs.Web), System.Collections.Generic.IEqualityComparer(Of InnerLibs.Web))
  name.vb: IsNotIn(IEnumerable(Of Web), IEqualityComparer(Of Web))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.Web},System.Collections.Generic.IEqualityComparer{InnerLibs.Web})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsNotIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsType``1
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsType``1(System.Object)
  name: IsType<T>()
  nameWithType: ClassTools.IsType<T>()
  fullName: InnerLibs.ClassTools.IsType<T>()
  nameWithType.vb: ClassTools.IsType(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)()
  name.vb: IsType(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce(Web[])
  nameWithType: ClassTools.NullCoalesce(Web[])
  fullName: InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web[])
  nameWithType.vb: ClassTools.NullCoalesce(Web())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web())
  name.vb: NullCoalesce(Web())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.Web[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.ClassTools.NullifyProperties
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties()
  nameWithType: ClassTools.NullifyProperties()
  fullName: InnerLibs.ClassTools.NullifyProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  name: SetPropertyValue<Type>(String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.String, Type)
  name.vb: SetPropertyValue(Of Type)(String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  name: SetPropertyValueFromCollection<Type>(String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  name: ToFlatString(String)
  nameWithType: ClassTools.ToFlatString(String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.DataManipulation.GetDbType
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  parent: InnerLibs.DataManipulation
  definition: InnerLibs.DataManipulation.GetDbType(System.Object)
  name: GetDbType()
  nameWithType: DataManipulation.GetDbType()
  fullName: InnerLibs.DataManipulation.GetDbType()
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Converter.DefineEmptyList
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList()
  nameWithType: Converter.DefineEmptyList()
  fullName: InnerLibs.Converter.DefineEmptyList()
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Converter.ChangeType``1
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType>()
  nameWithType: Converter.ChangeType<ToType>()
  fullName: InnerLibs.Converter.ChangeType<ToType>()
  nameWithType.vb: Converter.ChangeType(Of ToType)()
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType)()
  name.vb: ChangeType(Of ToType)()
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType<ToType>
    nameWithType: Converter.ChangeType<ToType>
    fullName: InnerLibs.Converter.ChangeType<ToType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType(Of ToType)
    nameWithType: Converter.ChangeType(Of ToType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.JsonViewer.CreateNode
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  parent: InnerLibs.JsonViewer
  definition: InnerLibs.JsonViewer.CreateNode(System.Object)
  name: CreateNode()
  nameWithType: JsonViewer.CreateNode()
  fullName: InnerLibs.JsonViewer.CreateNode()
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  name: IsBetween(Object, Object)
  nameWithType: Mathematic.IsBetween(Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Text.SerializeJSON(System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  name: SerializeJSON(String)
  nameWithType: Text.SerializeJSON(String)
  fullName: InnerLibs.Text.SerializeJSON(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNumber
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNumber(System.Object)
  name: IsNumber()
  nameWithType: Verify.IsNumber()
  fullName: InnerLibs.Verify.IsNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNotNumber
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNotNumber(System.Object)
  name: IsNotNumber()
  nameWithType: Verify.IsNotNumber()
  fullName: InnerLibs.Verify.IsNotNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IfBlank``1({T})
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  name: IfBlank<T>(T)
  nameWithType: Verify.IfBlank<T>(T)
  fullName: InnerLibs.Verify.IfBlank<T>(T)
  nameWithType.vb: Verify.IfBlank(Of T)(T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(T)
  name.vb: IfBlank(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Verify.NullIf(System.Func{InnerLibs.Web,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  name: NullIf(Func<Web, Boolean>)
  nameWithType: Verify.NullIf(Func<Web, Boolean>)
  fullName: InnerLibs.Verify.NullIf(System.Func<InnerLibs.Web, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Func(Of Web, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(System.Func(Of InnerLibs.Web, System.Boolean))
  name.vb: NullIf(Func(Of Web, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.Web,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.Web,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Verify.NullIf(InnerLibs.Web)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf(Web)
  nameWithType: Verify.NullIf(Web)
  fullName: InnerLibs.Verify.NullIf(InnerLibs.Web)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.Web)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.Web)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  parent: InnerLibs.Web
  definition: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  name: CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax(System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.Web,{TextType}},System.Func{InnerLibs.Web,{ValueType}})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  name: AsListItem<TextType, ValueType>(Func<Web, TextType>, Func<Web, ValueType>)
  nameWithType: Web.AsListItem<TextType, ValueType>(Func<Web, TextType>, Func<Web, ValueType>)
  fullName: InnerLibs.Web.AsListItem<TextType, ValueType>(System.Func<InnerLibs.Web, TextType>, System.Func<InnerLibs.Web, ValueType>)
  nameWithType.vb: Web.AsListItem(Of TextType, ValueType)(Func(Of Web, TextType), Func(Of Web, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of TextType, ValueType)(System.Func(Of InnerLibs.Web, TextType), System.Func(Of InnerLibs.Web, ValueType))
  name.vb: AsListItem(Of TextType, ValueType)(Func(Of Web, TextType), Func(Of Web, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.Web,``0},System.Func{InnerLibs.Web,``1})
    name: AsListItem<TextType, ValueType>
    nameWithType: Web.AsListItem<TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.Web,``0},System.Func{InnerLibs.Web,``1})
    name: AsListItem(Of TextType, ValueType)
    nameWithType: Web.AsListItem(Of TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.GetCastedValue
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.GetCastedValue(System.Object)
  name: GetCastedValue()
  nameWithType: WinForms.GetCastedValue()
  fullName: InnerLibs.WinForms.GetCastedValue()
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  name: CastValueForControl(Object)
  nameWithType: WinForms.CastValueForControl(Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  name: ApplyToControls(HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls(HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web,System.Func{InnerLibs.Web,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  name: HasSamePropertyValues(Web, Func<Web, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues(Web, Func<Web, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web, System.Func<InnerLibs.Web, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Web, Func(Of Web, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web, System.Func(Of InnerLibs.Web, System.Object)())
  name.vb: HasSamePropertyValues(Web, Func(Of Web, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web,System.Func{InnerLibs.Web,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.Web,System.Func{InnerLibs.Web,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.Web
    name: Web
    nameWithType: Web
    fullName: InnerLibs.Web
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary<Type>(Type)
  nameWithType: ClassTools.CreateDictionary<Type>(Type)
  fullName: InnerLibs.ClassTools.CreateDictionary<Type>(Type)
  nameWithType.vb: ClassTools.CreateDictionary(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.CreateDictionary(Of Type)(Type)
  name.vb: CreateDictionary(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary<Type>
    nameWithType: ClassTools.CreateDictionary<Type>
    fullName: InnerLibs.ClassTools.CreateDictionary<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary(Of Type)
    nameWithType: ClassTools.CreateDictionary(Of Type)
    fullName: InnerLibs.ClassTools.CreateDictionary(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools
  commentId: T:InnerLibs.ClassTools
  parent: InnerLibs
  name: ClassTools
  nameWithType: ClassTools
  fullName: InnerLibs.ClassTools
- uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Object, BindingFlags)
  nameWithType: ClassTools.GetProperties(Object, BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  isExternal: true
  name: GetProperties(Object)
  nameWithType: ClassTools.GetProperties(Object)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue<Type>(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.Object, System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(Object, String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.Object, System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(Object, String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  isExternal: true
  name: HasProperty(Object, String)
  nameWithType: ClassTools.HasProperty(Object, String)
  fullName: InnerLibs.ClassTools.HasProperty(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  isExternal: true
  name: IsArrayOf<T>(Object)
  nameWithType: ClassTools.IsArrayOf<T>(Object)
  fullName: InnerLibs.ClassTools.IsArrayOf<T>(System.Object)
  nameWithType.vb: ClassTools.IsArrayOf(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)(System.Object)
  name.vb: IsArrayOf(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsDictionary(System.Object)
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  isExternal: true
  name: IsDictionary(Object)
  nameWithType: ClassTools.IsDictionary(Object)
  fullName: InnerLibs.ClassTools.IsDictionary(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  nameWithType: ClassTools.IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsInAny<Type>(Type, System.Collections.Generic.IEnumerable<Type>[], System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsInAny(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type)(), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny<Type>
    nameWithType: ClassTools.IsInAny<Type>
    fullName: InnerLibs.ClassTools.IsInAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny(Of Type)
    nameWithType: ClassTools.IsInAny(Of Type)
    fullName: InnerLibs.ClassTools.IsInAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsList(System.Object)
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  isExternal: true
  name: IsList(Object)
  nameWithType: ClassTools.IsList(Object)
  fullName: InnerLibs.ClassTools.IsList(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsType``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  isExternal: true
  name: IsType<T>(Object)
  nameWithType: ClassTools.IsType<T>(Object)
  fullName: InnerLibs.ClassTools.IsType<T>(System.Object)
  nameWithType.vb: ClassTools.IsType(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)(System.Object)
  name.vb: IsType(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce<T>(T, T[])
  nameWithType: ClassTools.NullCoalesce<T>(T, T[])
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(T, T[])
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(T, T())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(T, T())
  name.vb: NullCoalesce(Of T)(T, T())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties<Type>(Type)
  nameWithType: ClassTools.NullifyProperties<Type>(Type)
  fullName: InnerLibs.ClassTools.NullifyProperties<Type>(Type)
  nameWithType.vb: ClassTools.NullifyProperties(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.NullifyProperties(Of Type)(Type)
  name.vb: NullifyProperties(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties<Type>
    nameWithType: ClassTools.NullifyProperties<Type>
    fullName: InnerLibs.ClassTools.NullifyProperties<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties(Of Type)
    nameWithType: ClassTools.NullifyProperties(Of Type)
    fullName: InnerLibs.ClassTools.NullifyProperties(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  isExternal: true
  name: SetPropertyValue<Type>(Object, String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(Object, String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.Object, System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(Object, String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.Object, System.String, Type)
  name.vb: SetPropertyValue(Of Type)(Object, String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  isExternal: true
  name: SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.Object, System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.Object, System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  isExternal: true
  name: ToFlatString(Object, String)
  nameWithType: ClassTools.ToFlatString(Object, String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation.GetDbType(System.Object)
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  isExternal: true
  name: GetDbType(Object)
  nameWithType: DataManipulation.GetDbType(Object)
  fullName: InnerLibs.DataManipulation.GetDbType(System.Object)
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation
  commentId: T:InnerLibs.DataManipulation
  parent: InnerLibs
  name: DataManipulation
  nameWithType: DataManipulation
  fullName: InnerLibs.DataManipulation
- uid: InnerLibs.Converter.DefineEmptyList``1(``0)
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList<T>(T)
  nameWithType: Converter.DefineEmptyList<T>(T)
  fullName: InnerLibs.Converter.DefineEmptyList<T>(T)
  nameWithType.vb: Converter.DefineEmptyList(Of T)(T)
  fullName.vb: InnerLibs.Converter.DefineEmptyList(Of T)(T)
  name.vb: DefineEmptyList(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList<T>
    nameWithType: Converter.DefineEmptyList<T>
    fullName: InnerLibs.Converter.DefineEmptyList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList(Of T)
    nameWithType: Converter.DefineEmptyList(Of T)
    fullName: InnerLibs.Converter.DefineEmptyList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Converter
  commentId: T:InnerLibs.Converter
  parent: InnerLibs
  name: Converter
  nameWithType: Converter
  fullName: InnerLibs.Converter
- uid: InnerLibs.Converter.ChangeType``2(``1)
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType, FromType>(FromType)
  nameWithType: Converter.ChangeType<ToType, FromType>(FromType)
  fullName: InnerLibs.Converter.ChangeType<ToType, FromType>(FromType)
  nameWithType.vb: Converter.ChangeType(Of ToType, FromType)(FromType)
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType, FromType)(FromType)
  name.vb: ChangeType(Of ToType, FromType)(FromType)
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType<ToType, FromType>
    nameWithType: Converter.ChangeType<ToType, FromType>
    fullName: InnerLibs.Converter.ChangeType<ToType, FromType>
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType(Of ToType, FromType)
    nameWithType: Converter.ChangeType(Of ToType, FromType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType, FromType)
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer.CreateNode(System.Object)
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  isExternal: true
  name: CreateNode(Object)
  nameWithType: JsonViewer.CreateNode(Object)
  fullName: InnerLibs.JsonViewer.CreateNode(System.Object)
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer
  commentId: T:InnerLibs.JsonViewer
  parent: InnerLibs
  name: JsonViewer
  nameWithType: JsonViewer
  fullName: InnerLibs.JsonViewer
- uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  isExternal: true
  name: IsBetween<Type>(Type, Object, Object)
  nameWithType: Mathematic.IsBetween<Type>(Type, Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween<Type>(Type, System.Object, System.Object)
  nameWithType.vb: Mathematic.IsBetween(Of Type)(Type, Object, Object)
  fullName.vb: InnerLibs.Mathematic.IsBetween(Of Type)(Type, System.Object, System.Object)
  name.vb: IsBetween(Of Type)(Type, Object, Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween<Type>
    nameWithType: Mathematic.IsBetween<Type>
    fullName: InnerLibs.Mathematic.IsBetween<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween(Of Type)
    nameWithType: Mathematic.IsBetween(Of Type)
    fullName: InnerLibs.Mathematic.IsBetween(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic
  commentId: T:InnerLibs.Mathematic
  parent: InnerLibs
  name: Mathematic
  nameWithType: Mathematic
  fullName: InnerLibs.Mathematic
- uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  isExternal: true
  name: SerializeJSON(Object, String)
  nameWithType: Text.SerializeJSON(Object, String)
  fullName: InnerLibs.Text.SerializeJSON(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text
  commentId: T:InnerLibs.Text
  parent: InnerLibs
  name: Text
  nameWithType: Text
  fullName: InnerLibs.Text
- uid: InnerLibs.Verify.IsNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  isExternal: true
  name: IsNumber(Object)
  nameWithType: Verify.IsNumber(Object)
  fullName: InnerLibs.Verify.IsNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify
  commentId: T:InnerLibs.Verify
  parent: InnerLibs
  name: Verify
  nameWithType: Verify
  fullName: InnerLibs.Verify
- uid: InnerLibs.Verify.IsNotNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  isExternal: true
  name: IsNotNumber(Object)
  nameWithType: Verify.IsNotNumber(Object)
  fullName: InnerLibs.Verify.IsNotNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  isExternal: true
  name: IfBlank<T>(Object, T)
  nameWithType: Verify.IfBlank<T>(Object, T)
  fullName: InnerLibs.Verify.IfBlank<T>(System.Object, T)
  nameWithType.vb: Verify.IfBlank(Of T)(Object, T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(System.Object, T)
  name.vb: IfBlank(Of T)(Object, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  isExternal: true
  name: NullIf<T>(T, Func<T, Boolean>)
  nameWithType: Verify.NullIf<T>(T, Func<T, Boolean>)
  fullName: InnerLibs.Verify.NullIf<T>(T, System.Func<T, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Of T)(T, Func(Of T, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, System.Func(Of T, System.Boolean))
  name.vb: NullIf(Of T)(T, Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,``0)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf<T>(T, T)
  nameWithType: Verify.NullIf<T>(T, T)
  fullName: InnerLibs.Verify.NullIf<T>(T, T)
  nameWithType.vb: Verify.NullIf(Of T)(T, T)
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, T)
  name.vb: NullIf(Of T)(T, T)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExternal: true
  name: CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  nameWithType.vb: Web.CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax<Type>
    nameWithType: Web.CreateFromAjax<Type>
    fullName: InnerLibs.Web.CreateFromAjax<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax(Of Type)
    nameWithType: Web.CreateFromAjax(Of Type)
    fullName: InnerLibs.Web.CreateFromAjax(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  parent: InnerLibs
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem<T, TextType, ValueType>
    nameWithType: Web.AsListItem<T, TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem(Of T, TextType, ValueType)
    nameWithType: Web.AsListItem(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms.GetCastedValue(System.Object)
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  isExternal: true
  name: GetCastedValue(Object)
  nameWithType: WinForms.GetCastedValue(Object)
  fullName: InnerLibs.WinForms.GetCastedValue(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms
  commentId: T:InnerLibs.WinForms
  parent: InnerLibs
  name: WinForms
  nameWithType: WinForms
  fullName: InnerLibs.WinForms
- uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  isExternal: true
  name: CastValueForControl(Object, Object)
  nameWithType: WinForms.CastValueForControl(Object, Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  isExternal: true
  name: ApplyToControls<T>(T, HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls<T>(T, HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>(T, System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(Of T)(T, HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)(T, System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(Of T)(T, HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls<T>
    nameWithType: LINQExtensions.ApplyToControls<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls(Of T)
    nameWithType: LINQExtensions.ApplyToControls(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions
  commentId: T:InnerLibs.LINQ.LINQExtensions
  parent: InnerLibs.LINQ
  name: LINQExtensions
  nameWithType: LINQExtensions
  fullName: InnerLibs.LINQ.LINQExtensions
- uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  isExternal: true
  name: HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>(T, T, System.Func<T, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)(T, T, System.Func(Of T, System.Object)())
  name.vb: HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues<T>
    nameWithType: LINQExtensions.HasSamePropertyValues<T>
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues(Of T)
    nameWithType: LINQExtensions.HasSamePropertyValues(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ
  commentId: N:InnerLibs.LINQ
  name: InnerLibs.LINQ
  nameWithType: InnerLibs.LINQ
  fullName: InnerLibs.LINQ
- uid: System.Web.HttpFileCollection
  commentId: T:System.Web.HttpFileCollection
  parent: System.Web
  isExternal: true
  name: HttpFileCollection
  nameWithType: HttpFileCollection
  fullName: System.Web.HttpFileCollection
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.AsEnumerable*
  commentId: Overload:InnerLibs.Web.AsEnumerable
  name: AsEnumerable
  nameWithType: Web.AsEnumerable
  fullName: InnerLibs.Web.AsEnumerable
- uid: System.Collections.Generic.IEnumerable{System.Web.HttpPostedFile}
  commentId: T:System.Collections.Generic.IEnumerable{System.Web.HttpPostedFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HttpPostedFile>
  nameWithType: IEnumerable<HttpPostedFile>
  fullName: System.Collections.Generic.IEnumerable<System.Web.HttpPostedFile>
  nameWithType.vb: IEnumerable(Of HttpPostedFile)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Web.HttpPostedFile)
  name.vb: IEnumerable(Of HttpPostedFile)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpPostedFile
    name: HttpPostedFile
    nameWithType: HttpPostedFile
    fullName: System.Web.HttpPostedFile
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Web.HttpPostedFile
    name: HttpPostedFile
    nameWithType: HttpPostedFile
    fullName: System.Web.HttpPostedFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web
  commentId: N:System.Web
  isExternal: true
  name: System.Web
  nameWithType: System.Web
  fullName: System.Web
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Web.HttpRequest
  commentId: T:System.Web.HttpRequest
  parent: System.Web
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: InnerLibs.Web.GetAllFiles*
  commentId: Overload:InnerLibs.Web.GetAllFiles
  name: GetAllFiles
  nameWithType: Web.GetAllFiles
  fullName: InnerLibs.Web.GetAllFiles
- uid: InnerLibs.Web.MinifyCSS*
  commentId: Overload:InnerLibs.Web.MinifyCSS
  name: MinifyCSS
  nameWithType: Web.MinifyCSS
  fullName: InnerLibs.Web.MinifyCSS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InnerLibs.Web.IsConnected*
  commentId: Overload:InnerLibs.Web.IsConnected
  name: IsConnected
  nameWithType: Web.IsConnected
  fullName: InnerLibs.Web.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: InnerLibs.Web.CreateFromAjax*
  commentId: Overload:InnerLibs.Web.CreateFromAjax
  name: CreateFromAjax
  nameWithType: Web.CreateFromAjax
  fullName: InnerLibs.Web.CreateFromAjax
- uid: '{Type}'
  commentId: '!:``0'
  definition: '``0'
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: '``0'
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: InnerLibs.Web.DestroySessionAndCookies*
  commentId: Overload:InnerLibs.Web.DestroySessionAndCookies
  name: DestroySessionAndCookies
  nameWithType: Web.DestroySessionAndCookies
  fullName: InnerLibs.Web.DestroySessionAndCookies
- uid: System.Web.HttpApplication
  commentId: T:System.Web.HttpApplication
  parent: System.Web
  isExternal: true
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: InnerLibs.Web.ToCookie*
  commentId: Overload:InnerLibs.Web.ToCookie
  name: ToCookie
  nameWithType: Web.ToCookie
  fullName: InnerLibs.Web.ToCookie
- uid: System.Web.SessionState.HttpSessionState
  commentId: T:System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: true
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.String[]
  commentId: T:System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Web.HttpCookie
  commentId: T:System.Web.HttpCookie
  parent: System.Web
  isExternal: true
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.SessionState
  commentId: N:System.Web.SessionState
  isExternal: true
  name: System.Web.SessionState
  nameWithType: System.Web.SessionState
  fullName: System.Web.SessionState
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: InnerLibs.Web.AddParameter*
  commentId: Overload:InnerLibs.Web.AddParameter
  name: AddParameter
  nameWithType: Web.AddParameter
  fullName: InnerLibs.Web.AddParameter
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: InnerLibs.Web.RemoveParameter*
  commentId: Overload:InnerLibs.Web.RemoveParameter
  name: RemoveParameter
  nameWithType: Web.RemoveParameter
  fullName: InnerLibs.Web.RemoveParameter
- uid: InnerLibs.Web.RewriteUrl*
  commentId: Overload:InnerLibs.Web.RewriteUrl
  name: RewriteUrl
  nameWithType: Web.RewriteUrl
  fullName: InnerLibs.Web.RewriteUrl
- uid: InnerLibs.Web.ToProcedure*
  commentId: Overload:InnerLibs.Web.ToProcedure
  name: ToProcedure
  nameWithType: Web.ToProcedure
  fullName: InnerLibs.Web.ToProcedure
- uid: InnerLibs.Web.ToINSERTorUPDATE*
  commentId: Overload:InnerLibs.Web.ToINSERTorUPDATE
  name: ToINSERTorUPDATE
  nameWithType: Web.ToINSERTorUPDATE
  fullName: InnerLibs.Web.ToINSERTorUPDATE
- uid: InnerLibs.Web.ToUPDATE*
  commentId: Overload:InnerLibs.Web.ToUPDATE
  name: ToUPDATE
  nameWithType: Web.ToUPDATE
  fullName: InnerLibs.Web.ToUPDATE
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: InnerLibs.Web.ToINSERT*
  commentId: Overload:InnerLibs.Web.ToINSERT
  name: ToINSERT
  nameWithType: Web.ToINSERT
  fullName: InnerLibs.Web.ToINSERT
- uid: InnerLibs.Web.WriteEnd*
  commentId: Overload:InnerLibs.Web.WriteEnd
  name: WriteEnd
  nameWithType: Web.WriteEnd
  fullName: InnerLibs.Web.WriteEnd
- uid: System.Web.HttpResponse
  commentId: T:System.Web.HttpResponse
  parent: System.Web
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: InnerLibs.HtmlParser.HtmlDocument
  commentId: T:InnerLibs.HtmlParser.HtmlDocument
  parent: InnerLibs.HtmlParser
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: InnerLibs.HtmlParser.HtmlDocument
- uid: InnerLibs.HtmlParser
  commentId: N:InnerLibs.HtmlParser
  name: InnerLibs.HtmlParser
  nameWithType: InnerLibs.HtmlParser
  fullName: InnerLibs.HtmlParser
- uid: InnerLibs.Web.WriteRedirect*
  commentId: Overload:InnerLibs.Web.WriteRedirect
  name: WriteRedirect
  nameWithType: Web.WriteRedirect
  fullName: InnerLibs.Web.WriteRedirect
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InnerLibs.Web.WriteCSV*
  commentId: Overload:InnerLibs.Web.WriteCSV
  name: WriteCSV
  nameWithType: Web.WriteCSV
  fullName: InnerLibs.Web.WriteCSV
- uid: InnerLibs.Web.WriteJSON*
  commentId: Overload:InnerLibs.Web.WriteJSON
  name: WriteJSON
  nameWithType: Web.WriteJSON
  fullName: InnerLibs.Web.WriteJSON
- uid: InnerLibs.Web.WriteImage*
  commentId: Overload:InnerLibs.Web.WriteImage
  name: WriteImage
  nameWithType: Web.WriteImage
  fullName: InnerLibs.Web.WriteImage
- uid: System.Byte[]
  commentId: T:System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InnerLibs.FileType
  commentId: T:InnerLibs.FileType
  parent: InnerLibs
  name: FileType
  nameWithType: FileType
  fullName: InnerLibs.FileType
- uid: System.Drawing.Image
  commentId: T:System.Drawing.Image
  parent: System.Drawing
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Imaging.ImageFormat
  commentId: T:System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: true
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
- uid: System.Drawing.Imaging
  commentId: N:System.Drawing.Imaging
  isExternal: true
  name: System.Drawing.Imaging
  nameWithType: System.Drawing.Imaging
  fullName: System.Drawing.Imaging
- uid: InnerLibs.AJAX.Response
  commentId: T:InnerLibs.AJAX.Response
  parent: InnerLibs
  name: AJAX.Response
  nameWithType: AJAX.Response
  fullName: InnerLibs.AJAX.Response
- uid: System.Func{{Type}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<Type>
  nameWithType: Func<Type>
  fullName: System.Func<Type>
  nameWithType.vb: Func(Of Type)
  fullName.vb: System.Func(Of Type)
  name.vb: Func(Of Type)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.WriteXML*
  commentId: Overload:InnerLibs.Web.WriteXML
  name: WriteXML
  nameWithType: Web.WriteXML
  fullName: InnerLibs.Web.WriteXML
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: InnerLibs.Web.WriteScript*
  commentId: Overload:InnerLibs.Web.WriteScript
  name: WriteScript
  nameWithType: Web.WriteScript
  fullName: InnerLibs.Web.WriteScript
- uid: InnerLibs.Web.GetFacebookUsername*
  commentId: Overload:InnerLibs.Web.GetFacebookUsername
  name: GetFacebookUsername
  nameWithType: Web.GetFacebookUsername
  fullName: InnerLibs.Web.GetFacebookUsername
- uid: InnerLibs.Web.GetYoutubeThumbnail*
  commentId: Overload:InnerLibs.Web.GetYoutubeThumbnail
  name: GetYoutubeThumbnail
  nameWithType: Web.GetYoutubeThumbnail
  fullName: InnerLibs.Web.GetYoutubeThumbnail
- uid: InnerLibs.Web.GetVideoId*
  commentId: Overload:InnerLibs.Web.GetVideoId
  name: GetVideoId
  nameWithType: Web.GetVideoId
  fullName: InnerLibs.Web.GetVideoId
- uid: InnerLibs.Web.IsDown*
  commentId: Overload:InnerLibs.Web.IsDown
  name: IsDown
  nameWithType: Web.IsDown
  fullName: InnerLibs.Web.IsDown
- uid: InnerLibs.Web.IsUp*
  commentId: Overload:InnerLibs.Web.IsUp
  name: IsUp
  nameWithType: Web.IsUp
  fullName: InnerLibs.Web.IsUp
- uid: System.Web.UI.HtmlControls.HtmlSelect
  commentId: T:System.Web.UI.HtmlControls.HtmlSelect
  parent: System.Web.UI.HtmlControls
  isExternal: true
  name: HtmlSelect
  nameWithType: HtmlSelect
  fullName: System.Web.UI.HtmlControls.HtmlSelect
- uid: InnerLibs.Web.ExtractOptions*
  commentId: Overload:InnerLibs.Web.ExtractOptions
  name: ExtractOptions
  nameWithType: Web.ExtractOptions
  fullName: InnerLibs.Web.ExtractOptions
- uid: System.Web.UI.HtmlControls
  commentId: N:System.Web.UI.HtmlControls
  isExternal: true
  name: System.Web.UI.HtmlControls
  nameWithType: System.Web.UI.HtmlControls
  fullName: System.Web.UI.HtmlControls
- uid: InnerLibs.Web.ToHtmlString*
  commentId: Overload:InnerLibs.Web.ToHtmlString
  name: ToHtmlString
  nameWithType: Web.ToHtmlString
  fullName: InnerLibs.Web.ToHtmlString
- uid: InnerLibs.Web.SelectValues*
  commentId: Overload:InnerLibs.Web.SelectValues
  name: SelectValues
  nameWithType: Web.SelectValues
  fullName: InnerLibs.Web.SelectValues
- uid: System.Func{System.Web.UI.WebControls.ListItem,System.Boolean}
  commentId: T:System.Func{System.Web.UI.WebControls.ListItem,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<ListItem, Boolean>
  nameWithType: Func<ListItem, Boolean>
  fullName: System.Func<System.Web.UI.WebControls.ListItem, System.Boolean>
  nameWithType.vb: Func(Of ListItem, Boolean)
  fullName.vb: System.Func(Of System.Web.UI.WebControls.ListItem, System.Boolean)
  name.vb: Func(Of ListItem, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.ListItem
    name: ListItem
    nameWithType: ListItem
    fullName: System.Web.UI.WebControls.ListItem
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Web.UI.WebControls.ListItem
    name: ListItem
    nameWithType: ListItem
    fullName: System.Web.UI.WebControls.ListItem
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.DisselectValues*
  commentId: Overload:InnerLibs.Web.DisselectValues
  name: DisselectValues
  nameWithType: Web.DisselectValues
  fullName: InnerLibs.Web.DisselectValues
- uid: System.Web.UI.WebControls.ListItem
  commentId: T:System.Web.UI.WebControls.ListItem
  parent: System.Web.UI.WebControls
  isExternal: true
  name: ListItem
  nameWithType: ListItem
  fullName: System.Web.UI.WebControls.ListItem
- uid: InnerLibs.Web.SetItem*
  commentId: Overload:InnerLibs.Web.SetItem
  name: SetItem
  nameWithType: Web.SetItem
  fullName: InnerLibs.Web.SetItem
- uid: System.Web.UI.WebControls
  commentId: N:System.Web.UI.WebControls
  isExternal: true
  name: System.Web.UI.WebControls
  nameWithType: System.Web.UI.WebControls
  fullName: System.Web.UI.WebControls
- uid: InnerLibs.Web.AsListItem*
  commentId: Overload:InnerLibs.Web.AsListItem
  name: AsListItem
  nameWithType: Web.AsListItem
  fullName: InnerLibs.Web.AsListItem
- uid: '{T}'
  commentId: '!:``0'
  definition: '``0'
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{{T},{TextType}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  name: Func<T, TextType>
  nameWithType: Func<T, TextType>
  fullName: System.Func<T, TextType>
  nameWithType.vb: Func(Of T, TextType)
  fullName.vb: System.Func(Of T, TextType)
  name.vb: Func(Of T, TextType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},{ValueType}}
  commentId: T:System.Func{``0,``2}
  parent: System
  definition: System.Func`2
  name: Func<T, ValueType>
  nameWithType: Func<T, ValueType>
  fullName: System.Func<T, ValueType>
  nameWithType.vb: Func(Of T, ValueType)
  fullName.vb: System.Func(Of T, ValueType)
  name.vb: Func(Of T, ValueType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.ToListItems*
  commentId: Overload:InnerLibs.Web.ToListItems
  name: ToListItems
  nameWithType: Web.ToListItems
  fullName: InnerLibs.Web.ToListItems
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<T, Boolean>
  nameWithType: Func<T, Boolean>
  fullName: System.Func<T, System.Boolean>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, System.Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Web.UI.WebControls.ListItem}
  commentId: T:System.Collections.Generic.List{System.Web.UI.WebControls.ListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ListItem>
  nameWithType: List<ListItem>
  fullName: System.Collections.Generic.List<System.Web.UI.WebControls.ListItem>
  nameWithType.vb: List(Of ListItem)
  fullName.vb: System.Collections.Generic.List(Of System.Web.UI.WebControls.ListItem)
  name.vb: List(Of ListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.ListItem
    name: ListItem
    nameWithType: ListItem
    fullName: System.Web.UI.WebControls.ListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Web.UI.WebControls.ListItem
    name: ListItem
    nameWithType: ListItem
    fullName: System.Web.UI.WebControls.ListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{ValueType}[]'
  commentId: T:``2[]
  definition: '``2[]'
  name: ValueType[]
  nameWithType: ValueType[]
  fullName: ValueType[]
  nameWithType.vb: ValueType()
  fullName.vb: ValueType()
  name.vb: ValueType()
  spec.csharp:
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '``2[]'
  commentId: T:``2[]
  name: ValueType[]
  nameWithType: ValueType[]
  fullName: ValueType[]
  nameWithType.vb: ValueType()
  fullName.vb: ValueType()
  name.vb: ValueType()
  spec.csharp:
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InnerLibs.Web.SetItems*
  commentId: Overload:InnerLibs.Web.SetItems
  name: SetItems
  nameWithType: Web.SetItems
  fullName: InnerLibs.Web.SetItems
- uid: System.Byte
  commentId: T:System.Byte
  isExternal: true
- uid: InnerLibs.Web.RangeDownload*
  commentId: Overload:InnerLibs.Web.RangeDownload
  name: RangeDownload
  nameWithType: Web.RangeDownload
  fullName: InnerLibs.Web.RangeDownload
- uid: System.Web.HttpContext
  commentId: T:System.Web.HttpContext
  parent: System.Web
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
