### YamlMime:ManagedReference
items:
- uid: InnerLibs.MenuBuilder
  commentId: T:InnerLibs.MenuBuilder
  id: MenuBuilder
  parent: InnerLibs
  children:
  - InnerLibs.MenuBuilder.HasItems
  - InnerLibs.MenuBuilder.ToJSON(System.String)
  langs:
  - csharp
  - vb
  name: MenuBuilder
  nameWithType: MenuBuilder
  fullName: InnerLibs.MenuBuilder
  type: Class
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/InnerMenu.vb
    id: MenuBuilder
    path: InnerMenu.vb
    startLine: 3
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nEstrutura para criação de menus com submenus\n"
  example: []
  syntax:
    content: 'public class MenuBuilder : List<MenuBuilderItem>, IList<MenuBuilderItem>, ICollection<MenuBuilderItem>, IList, ICollection, IReadOnlyList<MenuBuilderItem>, IReadOnlyCollection<MenuBuilderItem>, IEnumerable<MenuBuilderItem>, IEnumerable'
    content.vb: >-
      Public Class MenuBuilder
          Inherits List(Of MenuBuilderItem)
          Implements IList(Of MenuBuilderItem), ICollection(Of MenuBuilderItem), IList, ICollection, IReadOnlyList(Of MenuBuilderItem), IReadOnlyCollection(Of MenuBuilderItem), IEnumerable(Of MenuBuilderItem), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  implements:
  - System.Collections.Generic.IList{InnerLibs.MenuBuilderItem}
  - System.Collections.Generic.ICollection{InnerLibs.MenuBuilderItem}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{InnerLibs.MenuBuilderItem}
  - System.Collections.Generic.IReadOnlyCollection{InnerLibs.MenuBuilderItem}
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Add(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AddRange(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AsReadOnly
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(System.Int32,System.Int32,InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Clear
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Contains(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ConvertAll``1(System.Converter{InnerLibs.MenuBuilderItem,{TOutput}})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[])
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(System.Int32,InnerLibs.MenuBuilderItem[],System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[],System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Exists(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Find(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindAll(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLast(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ForEach(System.Action{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetEnumerator
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Insert(System.Int32,InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Remove(InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAll(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Comparison{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ToArray
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrimExcess
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrueForAll(System.Predicate{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Capacity
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Count
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsFixedSize
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.Generic.ICollection<T>.IsReadOnly
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsReadOnly
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.IsSynchronized
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.SyncRoot
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.Finalize
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.CreateDictionary
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.DistinctCount
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.FirstOr(InnerLibs.MenuBuilderItem)
  - System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  - System.Object.InnerLibs.ClassTools.GetProperties
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  - System.Object.InnerLibs.ClassTools.IsArrayOf``1
  - System.Object.InnerLibs.ClassTools.IsDictionary
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder}[],System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  - System.Object.InnerLibs.ClassTools.IsList
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - System.Object.InnerLibs.ClassTools.IsType``1
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.LastOr(InnerLibs.MenuBuilderItem)
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder[])
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.NullCoalesce
  - InnerLibs.MenuBuilder.InnerLibs.ClassTools.NullifyProperties
  - System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  - System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  - System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  - System.Object.InnerLibs.DataManipulation.GetDbType
  - InnerLibs.MenuBuilder.InnerLibs.Converter.DefineEmptyList
  - InnerLibs.MenuBuilder.InnerLibs.Converter.ChangeType``1
  - System.Object.InnerLibs.JsonViewer.CreateNode
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Mathematic.CalculatePercent``2(System.Func{InnerLibs.MenuBuilderItem,{TKey}},System.Func{InnerLibs.MenuBuilderItem,{TValue}})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Mathematic.CalculatePercent``1(System.Func{InnerLibs.MenuBuilderItem,{Tvalue}})
  - InnerLibs.MenuBuilder.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.GetRandomItem
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Join(System.String)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Join(System.String)
  - System.Object.InnerLibs.Text.SerializeJSON(System.String)
  - System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Shuffle
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Text.ToHtmlList(System.Boolean)
  - System.Object.InnerLibs.Verify.IsNumber
  - System.Object.InnerLibs.Verify.IsNotNumber
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IfNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IfBlankOrNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
  - System.Object.InnerLibs.Verify.IfBlank``1({T})
  - InnerLibs.MenuBuilder.InnerLibs.Verify.NullIf(System.Func{InnerLibs.MenuBuilder,System.Boolean})
  - InnerLibs.MenuBuilder.InnerLibs.Verify.NullIf(InnerLibs.MenuBuilder)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IsEmpty
  - InnerLibs.MenuBuilder.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.MenuBuilder.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.MenuBuilder,{TextType}},System.Func{InnerLibs.MenuBuilder,{ValueType}})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,{TextType}},System.Func{InnerLibs.MenuBuilderItem,{ValueType}},System.Func{InnerLibs.MenuBuilderItem,System.Boolean})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,{TextType}},System.Func{InnerLibs.MenuBuilderItem,{ValueType}},{ValueType}[])
  - System.Object.InnerLibs.WinForms.GetCastedValue
  - System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  - InnerLibs.MenuBuilder.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Func{InnerLibs.MenuBuilderItem,{TKey}},System.Func{InnerLibs.MenuBuilderItem,{TOrder}},System.Boolean)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.DistinctBy``1(System.Func{InnerLibs.MenuBuilderItem,{TKey}})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.ForEach(System.Action{InnerLibs.MenuBuilderItem})
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.GroupByPage(System.Int32)
  - InnerLibs.MenuBuilder.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder,System.Func{InnerLibs.MenuBuilder,System.Object}[])
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func{InnerLibs.MenuBuilderItem,System.String},System.Boolean,System.String[])
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.OrderByRandom
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.Page(System.Int32,System.Int32)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func{InnerLibs.MenuBuilderItem,System.String},System.String)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func{InnerLibs.MenuBuilderItem,System.Collections.Generic.IEnumerable{System.String}},System.String)
  - System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.TakeAndOrder``1(System.Func{InnerLibs.MenuBuilderItem,System.Boolean},System.Func{InnerLibs.MenuBuilderItem,{DefaultOrderType}})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InnerLibs.MenuBuilder.HasItems
  commentId: P:InnerLibs.MenuBuilder.HasItems
  id: HasItems
  parent: InnerLibs.MenuBuilder
  langs:
  - csharp
  - vb
  name: HasItems
  nameWithType: MenuBuilder.HasItems
  fullName: InnerLibs.MenuBuilder.HasItems
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/InnerMenu.vb
    id: HasItems
    path: InnerMenu.vb
    startLine: 9
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nVerifica se este menu possui itens\n"
  example: []
  syntax:
    content: public object HasItems { get; }
    parameters: []
    return:
      type: System.Object
      description: ''
    content.vb: Public ReadOnly Property HasItems As Object
  overload: InnerLibs.MenuBuilder.HasItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.MenuBuilder.ToJSON(System.String)
  commentId: M:InnerLibs.MenuBuilder.ToJSON(System.String)
  id: ToJSON(System.String)
  parent: InnerLibs.MenuBuilder
  langs:
  - csharp
  - vb
  name: ToJSON(String)
  nameWithType: MenuBuilder.ToJSON(String)
  fullName: InnerLibs.MenuBuilder.ToJSON(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/InnerMenu.vb
    id: ToJSON
    path: InnerMenu.vb
    startLine: 19
  assemblies:
  - InnerLibs
  namespace: InnerLibs
  summary: "\nTransforma a classe em um json\n"
  example: []
  syntax:
    content: public string ToJSON(string DateFormat = "yyyy-MM-dd HH:mm:ss")
    parameters:
    - id: DateFormat
      type: System.String
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToJSON(DateFormat As String = "yyyy-MM-dd HH:mm:ss") As String
  overload: InnerLibs.MenuBuilder.ToJSON*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InnerLibs
  commentId: N:InnerLibs
  name: InnerLibs
  nameWithType: InnerLibs
  fullName: InnerLibs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MenuBuilderItem>
  nameWithType: List<MenuBuilderItem>
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>
  nameWithType.vb: List(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem)
  name.vb: List(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.IList{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MenuBuilderItem>
  nameWithType: IList<MenuBuilderItem>
  fullName: System.Collections.Generic.IList<InnerLibs.MenuBuilderItem>
  nameWithType.vb: IList(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.IList(Of InnerLibs.MenuBuilderItem)
  name.vb: IList(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.ICollection{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MenuBuilderItem>
  nameWithType: ICollection<MenuBuilderItem>
  fullName: System.Collections.Generic.ICollection<InnerLibs.MenuBuilderItem>
  nameWithType.vb: ICollection(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.ICollection(Of InnerLibs.MenuBuilderItem)
  name.vb: ICollection(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.IReadOnlyList{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<MenuBuilderItem>
  nameWithType: IReadOnlyList<MenuBuilderItem>
  fullName: System.Collections.Generic.IReadOnlyList<InnerLibs.MenuBuilderItem>
  nameWithType.vb: IReadOnlyList(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of InnerLibs.MenuBuilderItem)
  name.vb: IReadOnlyList(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<MenuBuilderItem>
  nameWithType: IReadOnlyCollection<MenuBuilderItem>
  fullName: System.Collections.Generic.IReadOnlyCollection<InnerLibs.MenuBuilderItem>
  nameWithType.vb: IReadOnlyCollection(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of InnerLibs.MenuBuilderItem)
  name.vb: IReadOnlyCollection(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}
  commentId: T:System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MenuBuilderItem>
  nameWithType: IEnumerable<MenuBuilderItem>
  fullName: System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>
  nameWithType.vb: IEnumerable(Of MenuBuilderItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilderItem)
  name.vb: IEnumerable(Of MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Add(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Add(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.Add(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Add(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).Add(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Add(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<MenuBuilderItem>.Add
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of MenuBuilderItem).Add
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<MenuBuilderItem>.IList.Add(Object)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<MenuBuilderItem>.IList.Add
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of MenuBuilderItem).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AddRange(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AddRange(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.AddRange(IEnumerable<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.AddRange(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).AddRange(IEnumerable(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).AddRange(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilderItem))
  name.vb: AddRange(IEnumerable(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<MenuBuilderItem>.AddRange
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of MenuBuilderItem).AddRange
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AsReadOnly
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.AsReadOnly
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<MenuBuilderItem>.AsReadOnly()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.AsReadOnly()
  nameWithType.vb: List(Of MenuBuilderItem).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<MenuBuilderItem>.AsReadOnly
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of MenuBuilderItem).AsReadOnly
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(System.Int32,System.Int32,InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(System.Int32,System.Int32,InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, MenuBuilderItem, IComparer<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.BinarySearch(Int32, Int32, MenuBuilderItem, IComparer<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch(System.Int32, System.Int32, InnerLibs.MenuBuilderItem, System.Collections.Generic.IComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).BinarySearch(Int32, Int32, MenuBuilderItem, IComparer(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch(System.Int32, System.Int32, InnerLibs.MenuBuilderItem, System.Collections.Generic.IComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: BinarySearch(Int32, Int32, MenuBuilderItem, IComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<MenuBuilderItem>.BinarySearch
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of MenuBuilderItem).BinarySearch
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.BinarySearch(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).BinarySearch(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<MenuBuilderItem>.BinarySearch
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of MenuBuilderItem).BinarySearch
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.BinarySearch(InnerLibs.MenuBuilderItem,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(MenuBuilderItem, IComparer<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.BinarySearch(MenuBuilderItem, IComparer<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch(InnerLibs.MenuBuilderItem, System.Collections.Generic.IComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).BinarySearch(MenuBuilderItem, IComparer(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch(InnerLibs.MenuBuilderItem, System.Collections.Generic.IComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: BinarySearch(MenuBuilderItem, IComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<MenuBuilderItem>.BinarySearch
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of MenuBuilderItem).BinarySearch
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Clear
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Clear
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<MenuBuilderItem>.Clear()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Clear()
  nameWithType.vb: List(Of MenuBuilderItem).Clear()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<MenuBuilderItem>.Clear
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of MenuBuilderItem).Clear
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Contains(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Contains(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.Contains(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Contains(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).Contains(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Contains(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<MenuBuilderItem>.Contains
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of MenuBuilderItem).Contains
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<MenuBuilderItem>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<MenuBuilderItem>.IList.Contains
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of MenuBuilderItem).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ConvertAll``1(System.Converter{InnerLibs.MenuBuilderItem,{TOutput}})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ConvertAll``1(System.Converter{InnerLibs.MenuBuilderItem,``0})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<MenuBuilderItem, TOutput>)
  nameWithType: List<MenuBuilderItem>.ConvertAll<TOutput>(Converter<MenuBuilderItem, TOutput>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ConvertAll<TOutput>(System.Converter<InnerLibs.MenuBuilderItem, TOutput>)
  nameWithType.vb: List(Of MenuBuilderItem).ConvertAll(Of TOutput)(Converter(Of MenuBuilderItem, TOutput))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ConvertAll(Of TOutput)(System.Converter(Of InnerLibs.MenuBuilderItem, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of MenuBuilderItem, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<MenuBuilderItem>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of MenuBuilderItem).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[])
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[])
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(MenuBuilderItem[])
  nameWithType: List<MenuBuilderItem>.CopyTo(MenuBuilderItem[])
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo(InnerLibs.MenuBuilderItem[])
  nameWithType.vb: List(Of MenuBuilderItem).CopyTo(MenuBuilderItem())
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo(InnerLibs.MenuBuilderItem())
  name.vb: CopyTo(MenuBuilderItem())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<MenuBuilderItem>.CopyTo
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of MenuBuilderItem).CopyTo
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<MenuBuilderItem>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<MenuBuilderItem>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of MenuBuilderItem).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(System.Int32,InnerLibs.MenuBuilderItem[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(System.Int32,InnerLibs.MenuBuilderItem[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, MenuBuilderItem[], Int32, Int32)
  nameWithType: List<MenuBuilderItem>.CopyTo(Int32, MenuBuilderItem[], Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo(System.Int32, InnerLibs.MenuBuilderItem[], System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).CopyTo(Int32, MenuBuilderItem(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo(System.Int32, InnerLibs.MenuBuilderItem(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, MenuBuilderItem(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<MenuBuilderItem>.CopyTo
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of MenuBuilderItem).CopyTo
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[],System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.CopyTo(InnerLibs.MenuBuilderItem[],System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(MenuBuilderItem[], Int32)
  nameWithType: List<MenuBuilderItem>.CopyTo(MenuBuilderItem[], Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo(InnerLibs.MenuBuilderItem[], System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).CopyTo(MenuBuilderItem(), Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo(InnerLibs.MenuBuilderItem(), System.Int32)
  name.vb: CopyTo(MenuBuilderItem(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<MenuBuilderItem>.CopyTo
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of MenuBuilderItem).CopyTo
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Exists(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Exists(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.Exists(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Exists(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).Exists(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Exists(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: Exists(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<MenuBuilderItem>.Exists
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of MenuBuilderItem).Exists
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Find(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Find(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.Find(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Find(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).Find(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Find(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: Find(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<MenuBuilderItem>.Find
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of MenuBuilderItem).Find
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindAll(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindAll(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindAll(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindAll(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindAll(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindAll(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindAll(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<MenuBuilderItem>.FindAll
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of MenuBuilderItem).FindAll
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindIndex(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindIndex(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindIndex(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<MenuBuilderItem>.FindIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of MenuBuilderItem).FindIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindIndex(Int32, Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex(System.Int32, System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindIndex(Int32, Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex(System.Int32, System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindIndex(Int32, Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<MenuBuilderItem>.FindIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of MenuBuilderItem).FindIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindIndex(Int32, Int32, Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex(System.Int32, System.Int32, System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindIndex(Int32, Int32, Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex(System.Int32, System.Int32, System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindIndex(Int32, Int32, Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<MenuBuilderItem>.FindIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of MenuBuilderItem).FindIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLast(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLast(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindLast(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLast(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindLast(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLast(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindLast(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<MenuBuilderItem>.FindLast
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of MenuBuilderItem).FindLast
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindLastIndex(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindLastIndex(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindLastIndex(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<MenuBuilderItem>.FindLastIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of MenuBuilderItem).FindLastIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindLastIndex(Int32, Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex(System.Int32, System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindLastIndex(Int32, Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex(System.Int32, System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindLastIndex(Int32, Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<MenuBuilderItem>.FindLastIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of MenuBuilderItem).FindLastIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.FindLastIndex(System.Int32,System.Int32,System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.FindLastIndex(Int32, Int32, Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex(System.Int32, System.Int32, System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).FindLastIndex(Int32, Int32, Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<MenuBuilderItem>.FindLastIndex
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of MenuBuilderItem).FindLastIndex
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ForEach(System.Action{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ForEach(System.Action{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.ForEach(Action<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ForEach(System.Action<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).ForEach(Action(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ForEach(System.Action(Of InnerLibs.MenuBuilderItem))
  name.vb: ForEach(Action(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<MenuBuilderItem>.ForEach
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of MenuBuilderItem).ForEach
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetEnumerator
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetEnumerator
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<MenuBuilderItem>.GetEnumerator()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.GetEnumerator()
  nameWithType.vb: List(Of MenuBuilderItem).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<MenuBuilderItem>.GetEnumerator
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of MenuBuilderItem).GetEnumerator
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  name: IEnumerable<MenuBuilderItem>.GetEnumerator()
  nameWithType: List<MenuBuilderItem>.IEnumerable<MenuBuilderItem>.GetEnumerator()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>.GetEnumerator()
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
    name: IEnumerable<MenuBuilderItem>.GetEnumerator
    nameWithType: List<MenuBuilderItem>.IEnumerable<MenuBuilderItem>.GetEnumerator
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of MenuBuilderItem).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<MenuBuilderItem>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<MenuBuilderItem>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of MenuBuilderItem).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<MenuBuilderItem>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<MenuBuilderItem>.GetRange
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of MenuBuilderItem).GetRange
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.IndexOf(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).IndexOf(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<MenuBuilderItem>.IndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of MenuBuilderItem).IndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<MenuBuilderItem>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<MenuBuilderItem>.IList.IndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of MenuBuilderItem).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(MenuBuilderItem, Int32)
  nameWithType: List<MenuBuilderItem>.IndexOf(MenuBuilderItem, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf(InnerLibs.MenuBuilderItem, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).IndexOf(MenuBuilderItem, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf(InnerLibs.MenuBuilderItem, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<MenuBuilderItem>.IndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of MenuBuilderItem).IndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.IndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(MenuBuilderItem, Int32, Int32)
  nameWithType: List<MenuBuilderItem>.IndexOf(MenuBuilderItem, Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf(InnerLibs.MenuBuilderItem, System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).IndexOf(MenuBuilderItem, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf(InnerLibs.MenuBuilderItem, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<MenuBuilderItem>.IndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of MenuBuilderItem).IndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Insert(System.Int32,InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Insert(System.Int32,InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.Insert(Int32, MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Insert(System.Int32, InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).Insert(Int32, MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Insert(System.Int32, InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<MenuBuilderItem>.Insert
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of MenuBuilderItem).Insert
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<MenuBuilderItem>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<MenuBuilderItem>.IList.Insert
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of MenuBuilderItem).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.InsertRange(Int32, IEnumerable<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).InsertRange(Int32, IEnumerable(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilderItem))
  name.vb: InsertRange(Int32, IEnumerable(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<MenuBuilderItem>.InsertRange
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of MenuBuilderItem).InsertRange
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.LastIndexOf(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).LastIndexOf(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<MenuBuilderItem>.LastIndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of MenuBuilderItem).LastIndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(MenuBuilderItem, Int32)
  nameWithType: List<MenuBuilderItem>.LastIndexOf(MenuBuilderItem, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf(InnerLibs.MenuBuilderItem, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).LastIndexOf(MenuBuilderItem, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf(InnerLibs.MenuBuilderItem, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<MenuBuilderItem>.LastIndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of MenuBuilderItem).LastIndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.LastIndexOf(InnerLibs.MenuBuilderItem,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(MenuBuilderItem, Int32, Int32)
  nameWithType: List<MenuBuilderItem>.LastIndexOf(MenuBuilderItem, Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf(InnerLibs.MenuBuilderItem, System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).LastIndexOf(MenuBuilderItem, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf(InnerLibs.MenuBuilderItem, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<MenuBuilderItem>.LastIndexOf
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of MenuBuilderItem).LastIndexOf
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Remove(InnerLibs.MenuBuilderItem)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Remove(InnerLibs.MenuBuilderItem)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(MenuBuilderItem)
  nameWithType: List<MenuBuilderItem>.Remove(MenuBuilderItem)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Remove(InnerLibs.MenuBuilderItem)
  nameWithType.vb: List(Of MenuBuilderItem).Remove(MenuBuilderItem)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Remove(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<MenuBuilderItem>.Remove
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of MenuBuilderItem).Remove
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<MenuBuilderItem>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<MenuBuilderItem>.IList.Remove
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of MenuBuilderItem).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAll(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAll(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.RemoveAll(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveAll(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).RemoveAll(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveAll(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: RemoveAll(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<MenuBuilderItem>.RemoveAll
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of MenuBuilderItem).RemoveAll
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<MenuBuilderItem>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<MenuBuilderItem>.RemoveAt
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of MenuBuilderItem).RemoveAt
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<MenuBuilderItem>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<MenuBuilderItem>.RemoveRange
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of MenuBuilderItem).RemoveRange
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<MenuBuilderItem>.Reverse()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Reverse()
  nameWithType.vb: List(Of MenuBuilderItem).Reverse()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<MenuBuilderItem>.Reverse
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of MenuBuilderItem).Reverse
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<MenuBuilderItem>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of MenuBuilderItem).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<MenuBuilderItem>.Reverse
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of MenuBuilderItem).Reverse
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<MenuBuilderItem>.Sort()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort()
  nameWithType.vb: List(Of MenuBuilderItem).Sort()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<MenuBuilderItem>.Sort
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of MenuBuilderItem).Sort
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.Sort(IComparer<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort(System.Collections.Generic.IComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).Sort(IComparer(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort(System.Collections.Generic.IComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: Sort(IComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<MenuBuilderItem>.Sort
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of MenuBuilderItem).Sort
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.Sort(Int32, Int32, IComparer<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).Sort(Int32, Int32, IComparer(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: Sort(Int32, Int32, IComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<MenuBuilderItem>.Sort
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of MenuBuilderItem).Sort
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Comparison{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Sort(System.Comparison{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.Sort(Comparison<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort(System.Comparison<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).Sort(Comparison(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort(System.Comparison(Of InnerLibs.MenuBuilderItem))
  name.vb: Sort(Comparison(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<MenuBuilderItem>.Sort
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of MenuBuilderItem).Sort
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ToArray
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.ToArray
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<MenuBuilderItem>.ToArray()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ToArray()
  nameWithType.vb: List(Of MenuBuilderItem).ToArray()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<MenuBuilderItem>.ToArray
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of MenuBuilderItem).ToArray
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrimExcess
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrimExcess
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<MenuBuilderItem>.TrimExcess()
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.TrimExcess()
  nameWithType.vb: List(Of MenuBuilderItem).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<MenuBuilderItem>.TrimExcess
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of MenuBuilderItem).TrimExcess
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrueForAll(System.Predicate{InnerLibs.MenuBuilderItem})
  commentId: M:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.TrueForAll(System.Predicate{InnerLibs.MenuBuilderItem})
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<MenuBuilderItem>)
  nameWithType: List<MenuBuilderItem>.TrueForAll(Predicate<MenuBuilderItem>)
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.TrueForAll(System.Predicate<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: List(Of MenuBuilderItem).TrueForAll(Predicate(Of MenuBuilderItem))
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).TrueForAll(System.Predicate(Of InnerLibs.MenuBuilderItem))
  name.vb: TrueForAll(Predicate(Of MenuBuilderItem))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<MenuBuilderItem>.TrueForAll
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of MenuBuilderItem).TrueForAll
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Capacity
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Capacity
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<MenuBuilderItem>.Capacity
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Capacity
  nameWithType.vb: List(Of MenuBuilderItem).Capacity
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Capacity
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Count
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Count
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<MenuBuilderItem>.Count
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Count
  nameWithType.vb: List(Of MenuBuilderItem).Count
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Count
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsFixedSize
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System.Collections.IList.IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<MenuBuilderItem>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.Generic.ICollection<T>.IsReadOnly
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.Generic.ICollection<T>.IsReadOnly
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System.Collections.Generic.ICollection<T>.IsReadOnly
  name: ICollection<MenuBuilderItem>.IsReadOnly
  nameWithType: List<MenuBuilderItem>.ICollection<MenuBuilderItem>.IsReadOnly
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.Generic.ICollection<InnerLibs.MenuBuilderItem>.IsReadOnly
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.IList.IsReadOnly
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System.Collections.IList.IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<MenuBuilderItem>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.IsSynchronized
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System.Collections.ICollection.IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<MenuBuilderItem>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.System.Collections.ICollection.SyncRoot
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.System.Collections.ICollection.SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<MenuBuilderItem>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of MenuBuilderItem).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.Item(System.Int32)
  parent: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<MenuBuilderItem>.Item[Int32]
  fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Item[System.Int32]
  nameWithType.vb: List(Of MenuBuilderItem).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<MenuBuilderItem>.Item
    fullName: System.Collections.Generic.List<InnerLibs.MenuBuilderItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of MenuBuilderItem).Item
    fullName: System.Collections.Generic.List(Of InnerLibs.MenuBuilderItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
  commentId: M:InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: ContainsAll(IEnumerable<MenuBuilderItem>, IEqualityComparer<MenuBuilderItem>)
  nameWithType: ClassTools.ContainsAll(IEnumerable<MenuBuilderItem>, IEqualityComparer<MenuBuilderItem>)
  fullName: InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>, System.Collections.Generic.IEqualityComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: ClassTools.ContainsAll(IEnumerable(Of MenuBuilderItem), IEqualityComparer(Of MenuBuilderItem))
  fullName.vb: InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilderItem), System.Collections.Generic.IEqualityComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: ContainsAll(IEnumerable(Of MenuBuilderItem), IEqualityComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
    name: ContainsAll
    nameWithType: ClassTools.ContainsAll
    fullName: InnerLibs.ClassTools.ContainsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ContainsAll(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
    name: ContainsAll
    nameWithType: ClassTools.ContainsAll
    fullName: InnerLibs.ClassTools.ContainsAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
  commentId: M:InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: ContainsAny(IEnumerable<MenuBuilderItem>, IEqualityComparer<MenuBuilderItem>)
  nameWithType: ClassTools.ContainsAny(IEnumerable<MenuBuilderItem>, IEqualityComparer<MenuBuilderItem>)
  fullName: InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilderItem>, System.Collections.Generic.IEqualityComparer<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: ClassTools.ContainsAny(IEnumerable(Of MenuBuilderItem), IEqualityComparer(Of MenuBuilderItem))
  fullName.vb: InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilderItem), System.Collections.Generic.IEqualityComparer(Of InnerLibs.MenuBuilderItem))
  name.vb: ContainsAny(IEnumerable(Of MenuBuilderItem), IEqualityComparer(Of MenuBuilderItem))
  spec.csharp:
  - uid: InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
    name: ContainsAny
    nameWithType: ClassTools.ContainsAny
    fullName: InnerLibs.ClassTools.ContainsAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ContainsAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilderItem})
    name: ContainsAny
    nameWithType: ClassTools.ContainsAny
    fullName: InnerLibs.ClassTools.ContainsAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.CreateDictionary
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary()
  nameWithType: ClassTools.CreateDictionary()
  fullName: InnerLibs.ClassTools.CreateDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.DistinctCount
  commentId: M:InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
  name: DistinctCount()
  nameWithType: ClassTools.DistinctCount()
  fullName: InnerLibs.ClassTools.DistinctCount()
  spec.csharp:
  - uid: InnerLibs.ClassTools.DistinctCount
    name: DistinctCount
    nameWithType: ClassTools.DistinctCount
    fullName: InnerLibs.ClassTools.DistinctCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.DistinctCount
    name: DistinctCount
    nameWithType: ClassTools.DistinctCount
    fullName: InnerLibs.ClassTools.DistinctCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.FirstOr(InnerLibs.MenuBuilderItem)
  commentId: M:InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: FirstOr(MenuBuilderItem)
  nameWithType: ClassTools.FirstOr(MenuBuilderItem)
  fullName: InnerLibs.ClassTools.FirstOr(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: InnerLibs.ClassTools.FirstOr(InnerLibs.MenuBuilderItem)
    name: FirstOr
    nameWithType: ClassTools.FirstOr
    fullName: InnerLibs.ClassTools.FirstOr
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.FirstOr(InnerLibs.MenuBuilderItem)
    name: FirstOr
    nameWithType: ClassTools.FirstOr
    fullName: InnerLibs.ClassTools.FirstOr
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  nameWithType: ClassTools.GetProperties(BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object)
  name: GetProperties()
  nameWithType: ClassTools.GetProperties()
  fullName: InnerLibs.ClassTools.GetProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  name: GetPropertyValue(String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  name: GetPropertyValue<Type>(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  name: GetPropertyValue(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  name: HasProperty(String)
  nameWithType: ClassTools.HasProperty(String)
  fullName: InnerLibs.ClassTools.HasProperty(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsArrayOf``1
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  name: IsArrayOf<T>()
  nameWithType: ClassTools.IsArrayOf<T>()
  fullName: InnerLibs.ClassTools.IsArrayOf<T>()
  nameWithType.vb: ClassTools.IsArrayOf(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)()
  name.vb: IsArrayOf(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsDictionary
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsDictionary(System.Object)
  name: IsDictionary()
  nameWithType: ClassTools.IsDictionary()
  fullName: InnerLibs.ClassTools.IsDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsIn(IEnumerable<MenuBuilder>, IEqualityComparer<MenuBuilder>)
  nameWithType: ClassTools.IsIn(IEnumerable<MenuBuilder>, IEqualityComparer<MenuBuilder>)
  fullName: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilder>, System.Collections.Generic.IEqualityComparer<InnerLibs.MenuBuilder>)
  nameWithType.vb: ClassTools.IsIn(IEnumerable(Of MenuBuilder), IEqualityComparer(Of MenuBuilder))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilder), System.Collections.Generic.IEqualityComparer(Of InnerLibs.MenuBuilder))
  name.vb: IsIn(IEnumerable(Of MenuBuilder), IEqualityComparer(Of MenuBuilder))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder}[],System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  name: IsInAny(IEnumerable<MenuBuilder>[], IEqualityComparer<MenuBuilder>)
  nameWithType: ClassTools.IsInAny(IEnumerable<MenuBuilder>[], IEqualityComparer<MenuBuilder>)
  fullName: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilder>[], System.Collections.Generic.IEqualityComparer<InnerLibs.MenuBuilder>)
  nameWithType.vb: ClassTools.IsInAny(IEnumerable(Of MenuBuilder)(), IEqualityComparer(Of MenuBuilder))
  fullName.vb: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilder)(), System.Collections.Generic.IEqualityComparer(Of InnerLibs.MenuBuilder))
  name.vb: IsInAny(IEnumerable(Of MenuBuilder)(), IEqualityComparer(Of MenuBuilder))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder}[],System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder}[],System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsList
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsList(System.Object)
  name: IsList()
  nameWithType: ClassTools.IsList()
  fullName: InnerLibs.ClassTools.IsList()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsNotIn(IEnumerable<MenuBuilder>, IEqualityComparer<MenuBuilder>)
  nameWithType: ClassTools.IsNotIn(IEnumerable<MenuBuilder>, IEqualityComparer<MenuBuilder>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable<InnerLibs.MenuBuilder>, System.Collections.Generic.IEqualityComparer<InnerLibs.MenuBuilder>)
  nameWithType.vb: ClassTools.IsNotIn(IEnumerable(Of MenuBuilder), IEqualityComparer(Of MenuBuilder))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable(Of InnerLibs.MenuBuilder), System.Collections.Generic.IEqualityComparer(Of InnerLibs.MenuBuilder))
  name.vb: IsNotIn(IEnumerable(Of MenuBuilder), IEqualityComparer(Of MenuBuilder))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilder},System.Collections.Generic.IEqualityComparer{InnerLibs.MenuBuilder})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsNotIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsType``1
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsType``1(System.Object)
  name: IsType<T>()
  nameWithType: ClassTools.IsType<T>()
  fullName: InnerLibs.ClassTools.IsType<T>()
  nameWithType.vb: ClassTools.IsType(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)()
  name.vb: IsType(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.LastOr(InnerLibs.MenuBuilderItem)
  commentId: M:InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: LastOr(MenuBuilderItem)
  nameWithType: ClassTools.LastOr(MenuBuilderItem)
  fullName: InnerLibs.ClassTools.LastOr(InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: InnerLibs.ClassTools.LastOr(InnerLibs.MenuBuilderItem)
    name: LastOr
    nameWithType: ClassTools.LastOr
    fullName: InnerLibs.ClassTools.LastOr
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.LastOr(InnerLibs.MenuBuilderItem)
    name: LastOr
    nameWithType: ClassTools.LastOr
    fullName: InnerLibs.ClassTools.LastOr
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce(MenuBuilder[])
  nameWithType: ClassTools.NullCoalesce(MenuBuilder[])
  fullName: InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder[])
  nameWithType.vb: ClassTools.NullCoalesce(MenuBuilder())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder())
  name.vb: NullCoalesce(MenuBuilder())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.MenuBuilder[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.ClassTools.NullCoalesce
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
  name: NullCoalesce()
  nameWithType: ClassTools.NullCoalesce()
  fullName: InnerLibs.ClassTools.NullCoalesce()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.ClassTools.NullifyProperties
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties()
  nameWithType: ClassTools.NullifyProperties()
  fullName: InnerLibs.ClassTools.NullifyProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  name: SetPropertyValue<Type>(String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.String, Type)
  name.vb: SetPropertyValue(Of Type)(String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  name: SetPropertyValueFromCollection<Type>(String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  name: ToFlatString(String)
  nameWithType: ClassTools.ToFlatString(String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.DataManipulation.GetDbType
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  parent: InnerLibs.DataManipulation
  definition: InnerLibs.DataManipulation.GetDbType(System.Object)
  name: GetDbType()
  nameWithType: DataManipulation.GetDbType()
  fullName: InnerLibs.DataManipulation.GetDbType()
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Converter.DefineEmptyList
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList()
  nameWithType: Converter.DefineEmptyList()
  fullName: InnerLibs.Converter.DefineEmptyList()
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Converter.ChangeType``1
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType>()
  nameWithType: Converter.ChangeType<ToType>()
  fullName: InnerLibs.Converter.ChangeType<ToType>()
  nameWithType.vb: Converter.ChangeType(Of ToType)()
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType)()
  name.vb: ChangeType(Of ToType)()
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType<ToType>
    nameWithType: Converter.ChangeType<ToType>
    fullName: InnerLibs.Converter.ChangeType<ToType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType(Of ToType)
    nameWithType: Converter.ChangeType(Of ToType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.JsonViewer.CreateNode
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  parent: InnerLibs.JsonViewer
  definition: InnerLibs.JsonViewer.CreateNode(System.Object)
  name: CreateNode()
  nameWithType: JsonViewer.CreateNode()
  fullName: InnerLibs.JsonViewer.CreateNode()
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Mathematic.CalculatePercent``2(System.Func{InnerLibs.MenuBuilderItem,{TKey}},System.Func{InnerLibs.MenuBuilderItem,{TValue}})
  commentId: M:InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: CalculatePercent<TKey, TValue>(Func<MenuBuilderItem, TKey>, Func<MenuBuilderItem, TValue>)
  nameWithType: Mathematic.CalculatePercent<TKey, TValue>(Func<MenuBuilderItem, TKey>, Func<MenuBuilderItem, TValue>)
  fullName: InnerLibs.Mathematic.CalculatePercent<TKey, TValue>(System.Func<InnerLibs.MenuBuilderItem, TKey>, System.Func<InnerLibs.MenuBuilderItem, TValue>)
  nameWithType.vb: Mathematic.CalculatePercent(Of TKey, TValue)(Func(Of MenuBuilderItem, TKey), Func(Of MenuBuilderItem, TValue))
  fullName.vb: InnerLibs.Mathematic.CalculatePercent(Of TKey, TValue)(System.Func(Of InnerLibs.MenuBuilderItem, TKey), System.Func(Of InnerLibs.MenuBuilderItem, TValue))
  name.vb: CalculatePercent(Of TKey, TValue)(Func(Of MenuBuilderItem, TKey), Func(Of MenuBuilderItem, TValue))
  spec.csharp:
  - uid: InnerLibs.Mathematic.CalculatePercent``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1})
    name: CalculatePercent<TKey, TValue>
    nameWithType: Mathematic.CalculatePercent<TKey, TValue>
    fullName: InnerLibs.Mathematic.CalculatePercent<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.CalculatePercent``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1})
    name: CalculatePercent(Of TKey, TValue)
    nameWithType: Mathematic.CalculatePercent(Of TKey, TValue)
    fullName: InnerLibs.Mathematic.CalculatePercent(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Mathematic.CalculatePercent``1(System.Func{InnerLibs.MenuBuilderItem,{Tvalue}})
  commentId: M:InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: CalculatePercent<Tvalue>(Func<MenuBuilderItem, Tvalue>)
  nameWithType: Mathematic.CalculatePercent<Tvalue>(Func<MenuBuilderItem, Tvalue>)
  fullName: InnerLibs.Mathematic.CalculatePercent<Tvalue>(System.Func<InnerLibs.MenuBuilderItem, Tvalue>)
  nameWithType.vb: Mathematic.CalculatePercent(Of Tvalue)(Func(Of MenuBuilderItem, Tvalue))
  fullName.vb: InnerLibs.Mathematic.CalculatePercent(Of Tvalue)(System.Func(Of InnerLibs.MenuBuilderItem, Tvalue))
  name.vb: CalculatePercent(Of Tvalue)(Func(Of MenuBuilderItem, Tvalue))
  spec.csharp:
  - uid: InnerLibs.Mathematic.CalculatePercent``1(System.Func{InnerLibs.MenuBuilderItem,``0})
    name: CalculatePercent<Tvalue>
    nameWithType: Mathematic.CalculatePercent<Tvalue>
    fullName: InnerLibs.Mathematic.CalculatePercent<Tvalue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Tvalue
    nameWithType: Tvalue
    fullName: Tvalue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.CalculatePercent``1(System.Func{InnerLibs.MenuBuilderItem,``0})
    name: CalculatePercent(Of Tvalue)
    nameWithType: Mathematic.CalculatePercent(Of Tvalue)
    fullName: InnerLibs.Mathematic.CalculatePercent(Of Tvalue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Tvalue
    nameWithType: Tvalue
    fullName: Tvalue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  name: IsBetween(Object, Object)
  nameWithType: Mathematic.IsBetween(Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.GetRandomItem
  commentId: M:InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
  parent: InnerLibs.Text
  definition: InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
  name: GetRandomItem()
  nameWithType: Text.GetRandomItem()
  fullName: InnerLibs.Text.GetRandomItem()
  spec.csharp:
  - uid: InnerLibs.Text.GetRandomItem
    name: GetRandomItem
    nameWithType: Text.GetRandomItem
    fullName: InnerLibs.Text.GetRandomItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.GetRandomItem
    name: GetRandomItem
    nameWithType: Text.GetRandomItem
    fullName: InnerLibs.Text.GetRandomItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Join(System.String)
  commentId: M:InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: Join(String)
  nameWithType: Text.Join(String)
  fullName: InnerLibs.Text.Join(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.Join(System.String)
    name: Join
    nameWithType: Text.Join
    fullName: InnerLibs.Text.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Join(System.String)
    name: Join
    nameWithType: Text.Join
    fullName: InnerLibs.Text.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Join(System.String)
  commentId: M:InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
  name: Join(String)
  nameWithType: Text.Join(String)
  fullName: InnerLibs.Text.Join(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.Join(System.String)
    name: Join
    nameWithType: Text.Join
    fullName: InnerLibs.Text.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Join(System.String)
    name: Join
    nameWithType: Text.Join
    fullName: InnerLibs.Text.Join
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Text.SerializeJSON(System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  name: SerializeJSON(String)
  nameWithType: Text.SerializeJSON(String)
  fullName: InnerLibs.Text.SerializeJSON(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{InnerLibs.MenuBuilderItem}.InnerLibs.Text.Shuffle
  commentId: M:InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
  name: Shuffle()
  nameWithType: Text.Shuffle()
  fullName: InnerLibs.Text.Shuffle()
  spec.csharp:
  - uid: InnerLibs.Text.Shuffle
    name: Shuffle
    nameWithType: Text.Shuffle
    fullName: InnerLibs.Text.Shuffle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Shuffle
    name: Shuffle
    nameWithType: Text.Shuffle
    fullName: InnerLibs.Text.Shuffle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Text.ToHtmlList(System.Boolean)
  commentId: M:InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  name: ToHtmlList(Boolean)
  nameWithType: Text.ToHtmlList(Boolean)
  fullName: InnerLibs.Text.ToHtmlList(System.Boolean)
  spec.csharp:
  - uid: InnerLibs.Text.ToHtmlList(System.Boolean)
    name: ToHtmlList
    nameWithType: Text.ToHtmlList
    fullName: InnerLibs.Text.ToHtmlList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.ToHtmlList(System.Boolean)
    name: ToHtmlList
    nameWithType: Text.ToHtmlList
    fullName: InnerLibs.Text.ToHtmlList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNumber
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNumber(System.Object)
  name: IsNumber()
  nameWithType: Verify.IsNumber()
  fullName: InnerLibs.Verify.IsNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNotNumber
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNotNumber(System.Object)
  name: IsNotNumber()
  nameWithType: Verify.IsNotNumber()
  fullName: InnerLibs.Verify.IsNotNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IfNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
  commentId: M:InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  name: IfNoIndex(Int32, MenuBuilderItem)
  nameWithType: Verify.IfNoIndex(Int32, MenuBuilderItem)
  fullName: InnerLibs.Verify.IfNoIndex(System.Int32, InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: InnerLibs.Verify.IfNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
    name: IfNoIndex
    nameWithType: Verify.IfNoIndex
    fullName: InnerLibs.Verify.IfNoIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
    name: IfNoIndex
    nameWithType: Verify.IfNoIndex
    fullName: InnerLibs.Verify.IfNoIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IfBlankOrNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
  commentId: M:InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  name: IfBlankOrNoIndex(Int32, MenuBuilderItem)
  nameWithType: Verify.IfBlankOrNoIndex(Int32, MenuBuilderItem)
  fullName: InnerLibs.Verify.IfBlankOrNoIndex(System.Int32, InnerLibs.MenuBuilderItem)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlankOrNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
    name: IfBlankOrNoIndex
    nameWithType: Verify.IfBlankOrNoIndex
    fullName: InnerLibs.Verify.IfBlankOrNoIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlankOrNoIndex(System.Int32,InnerLibs.MenuBuilderItem)
    name: IfBlankOrNoIndex
    nameWithType: Verify.IfBlankOrNoIndex
    fullName: InnerLibs.Verify.IfBlankOrNoIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IfBlank``1({T})
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  name: IfBlank<T>(T)
  nameWithType: Verify.IfBlank<T>(T)
  fullName: InnerLibs.Verify.IfBlank<T>(T)
  nameWithType.vb: Verify.IfBlank(Of T)(T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(T)
  name.vb: IfBlank(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Verify.NullIf(System.Func{InnerLibs.MenuBuilder,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  name: NullIf(Func<MenuBuilder, Boolean>)
  nameWithType: Verify.NullIf(Func<MenuBuilder, Boolean>)
  fullName: InnerLibs.Verify.NullIf(System.Func<InnerLibs.MenuBuilder, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Func(Of MenuBuilder, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(System.Func(Of InnerLibs.MenuBuilder, System.Boolean))
  name.vb: NullIf(Func(Of MenuBuilder, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.MenuBuilder,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.MenuBuilder,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Verify.NullIf(InnerLibs.MenuBuilder)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf(MenuBuilder)
  nameWithType: Verify.NullIf(MenuBuilder)
  fullName: InnerLibs.Verify.NullIf(InnerLibs.MenuBuilder)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.MenuBuilder)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.MenuBuilder)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Verify.IsEmpty
  commentId: M:InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IsEmpty()
  nameWithType: Verify.IsEmpty()
  fullName: InnerLibs.Verify.IsEmpty()
  spec.csharp:
  - uid: InnerLibs.Verify.IsEmpty
    name: IsEmpty
    nameWithType: Verify.IsEmpty
    fullName: InnerLibs.Verify.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsEmpty
    name: IsEmpty
    nameWithType: Verify.IsEmpty
    fullName: InnerLibs.Verify.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  parent: InnerLibs.Web
  definition: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  name: CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax(System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.MenuBuilder,{TextType}},System.Func{InnerLibs.MenuBuilder,{ValueType}})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  name: AsListItem<TextType, ValueType>(Func<MenuBuilder, TextType>, Func<MenuBuilder, ValueType>)
  nameWithType: Web.AsListItem<TextType, ValueType>(Func<MenuBuilder, TextType>, Func<MenuBuilder, ValueType>)
  fullName: InnerLibs.Web.AsListItem<TextType, ValueType>(System.Func<InnerLibs.MenuBuilder, TextType>, System.Func<InnerLibs.MenuBuilder, ValueType>)
  nameWithType.vb: Web.AsListItem(Of TextType, ValueType)(Func(Of MenuBuilder, TextType), Func(Of MenuBuilder, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of TextType, ValueType)(System.Func(Of InnerLibs.MenuBuilder, TextType), System.Func(Of InnerLibs.MenuBuilder, ValueType))
  name.vb: AsListItem(Of TextType, ValueType)(Func(Of MenuBuilder, TextType), Func(Of MenuBuilder, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.MenuBuilder,``0},System.Func{InnerLibs.MenuBuilder,``1})
    name: AsListItem<TextType, ValueType>
    nameWithType: Web.AsListItem<TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.MenuBuilder,``0},System.Func{InnerLibs.MenuBuilder,``1})
    name: AsListItem(Of TextType, ValueType)
    nameWithType: Web.AsListItem(Of TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,{TextType}},System.Func{InnerLibs.MenuBuilderItem,{ValueType}},System.Func{InnerLibs.MenuBuilderItem,System.Boolean})
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  name: ToListItems<TextType, ValueType>(Func<MenuBuilderItem, TextType>, Func<MenuBuilderItem, ValueType>, Func<MenuBuilderItem, Boolean>)
  nameWithType: Web.ToListItems<TextType, ValueType>(Func<MenuBuilderItem, TextType>, Func<MenuBuilderItem, ValueType>, Func<MenuBuilderItem, Boolean>)
  fullName: InnerLibs.Web.ToListItems<TextType, ValueType>(System.Func<InnerLibs.MenuBuilderItem, TextType>, System.Func<InnerLibs.MenuBuilderItem, ValueType>, System.Func<InnerLibs.MenuBuilderItem, System.Boolean>)
  nameWithType.vb: Web.ToListItems(Of TextType, ValueType)(Func(Of MenuBuilderItem, TextType), Func(Of MenuBuilderItem, ValueType), Func(Of MenuBuilderItem, Boolean))
  fullName.vb: InnerLibs.Web.ToListItems(Of TextType, ValueType)(System.Func(Of InnerLibs.MenuBuilderItem, TextType), System.Func(Of InnerLibs.MenuBuilderItem, ValueType), System.Func(Of InnerLibs.MenuBuilderItem, System.Boolean))
  name.vb: ToListItems(Of TextType, ValueType)(Func(Of MenuBuilderItem, TextType), Func(Of MenuBuilderItem, ValueType), Func(Of MenuBuilderItem, Boolean))
  spec.csharp:
  - uid: InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},System.Func{InnerLibs.MenuBuilderItem,System.Boolean})
    name: ToListItems<TextType, ValueType>
    nameWithType: Web.ToListItems<TextType, ValueType>
    fullName: InnerLibs.Web.ToListItems<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},System.Func{InnerLibs.MenuBuilderItem,System.Boolean})
    name: ToListItems(Of TextType, ValueType)
    nameWithType: Web.ToListItems(Of TextType, ValueType)
    fullName: InnerLibs.Web.ToListItems(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,{TextType}},System.Func{InnerLibs.MenuBuilderItem,{ValueType}},{ValueType}[])
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  parent: InnerLibs.Web
  definition: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  name: ToListItems<TextType, ValueType>(Func<MenuBuilderItem, TextType>, Func<MenuBuilderItem, ValueType>, ValueType[])
  nameWithType: Web.ToListItems<TextType, ValueType>(Func<MenuBuilderItem, TextType>, Func<MenuBuilderItem, ValueType>, ValueType[])
  fullName: InnerLibs.Web.ToListItems<TextType, ValueType>(System.Func<InnerLibs.MenuBuilderItem, TextType>, System.Func<InnerLibs.MenuBuilderItem, ValueType>, ValueType[])
  nameWithType.vb: Web.ToListItems(Of TextType, ValueType)(Func(Of MenuBuilderItem, TextType), Func(Of MenuBuilderItem, ValueType), ValueType())
  fullName.vb: InnerLibs.Web.ToListItems(Of TextType, ValueType)(System.Func(Of InnerLibs.MenuBuilderItem, TextType), System.Func(Of InnerLibs.MenuBuilderItem, ValueType), ValueType())
  name.vb: ToListItems(Of TextType, ValueType)(Func(Of MenuBuilderItem, TextType), Func(Of MenuBuilderItem, ValueType), ValueType())
  spec.csharp:
  - uid: InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},``1[])
    name: ToListItems<TextType, ValueType>
    nameWithType: Web.ToListItems<TextType, ValueType>
    fullName: InnerLibs.Web.ToListItems<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.ToListItems``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},``1[])
    name: ToListItems(Of TextType, ValueType)
    nameWithType: Web.ToListItems(Of TextType, ValueType)
    fullName: InnerLibs.Web.ToListItems(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.GetCastedValue
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.GetCastedValue(System.Object)
  name: GetCastedValue()
  nameWithType: WinForms.GetCastedValue()
  fullName: InnerLibs.WinForms.GetCastedValue()
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  name: CastValueForControl(Object)
  nameWithType: WinForms.CastValueForControl(Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  name: ApplyToControls(HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls(HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Func{InnerLibs.MenuBuilderItem,{TKey}},System.Func{InnerLibs.MenuBuilderItem,{TOrder}},System.Boolean)
  commentId: M:InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
  name: DistinctBy<TKey, TOrder>(Func<MenuBuilderItem, TKey>, Func<MenuBuilderItem, TOrder>, Boolean)
  nameWithType: LINQExtensions.DistinctBy<TKey, TOrder>(Func<MenuBuilderItem, TKey>, Func<MenuBuilderItem, TOrder>, Boolean)
  fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<TKey, TOrder>(System.Func<InnerLibs.MenuBuilderItem, TKey>, System.Func<InnerLibs.MenuBuilderItem, TOrder>, System.Boolean)
  nameWithType.vb: LINQExtensions.DistinctBy(Of TKey, TOrder)(Func(Of MenuBuilderItem, TKey), Func(Of MenuBuilderItem, TOrder), Boolean)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of TKey, TOrder)(System.Func(Of InnerLibs.MenuBuilderItem, TKey), System.Func(Of InnerLibs.MenuBuilderItem, TOrder), System.Boolean)
  name.vb: DistinctBy(Of TKey, TOrder)(Func(Of MenuBuilderItem, TKey), Func(Of MenuBuilderItem, TOrder), Boolean)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},System.Boolean)
    name: DistinctBy<TKey, TOrder>
    nameWithType: LINQExtensions.DistinctBy<TKey, TOrder>
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<TKey, TOrder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOrder
    nameWithType: TOrder
    fullName: TOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Func{InnerLibs.MenuBuilderItem,``0},System.Func{InnerLibs.MenuBuilderItem,``1},System.Boolean)
    name: DistinctBy(Of TKey, TOrder)
    nameWithType: LINQExtensions.DistinctBy(Of TKey, TOrder)
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of TKey, TOrder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOrder
    nameWithType: TOrder
    fullName: TOrder
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.DistinctBy``1(System.Func{InnerLibs.MenuBuilderItem,{TKey}})
  commentId: M:InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: DistinctBy<TKey>(Func<MenuBuilderItem, TKey>)
  nameWithType: LINQExtensions.DistinctBy<TKey>(Func<MenuBuilderItem, TKey>)
  fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<TKey>(System.Func<InnerLibs.MenuBuilderItem, TKey>)
  nameWithType.vb: LINQExtensions.DistinctBy(Of TKey)(Func(Of MenuBuilderItem, TKey))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of TKey)(System.Func(Of InnerLibs.MenuBuilderItem, TKey))
  name.vb: DistinctBy(Of TKey)(Func(Of MenuBuilderItem, TKey))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``1(System.Func{InnerLibs.MenuBuilderItem,``0})
    name: DistinctBy<TKey>
    nameWithType: LINQExtensions.DistinctBy<TKey>
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``1(System.Func{InnerLibs.MenuBuilderItem,``0})
    name: DistinctBy(Of TKey)
    nameWithType: LINQExtensions.DistinctBy(Of TKey)
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.ForEach(System.Action{InnerLibs.MenuBuilderItem})
  commentId: M:InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach(Action<MenuBuilderItem>)
  nameWithType: LINQExtensions.ForEach(Action<MenuBuilderItem>)
  fullName: InnerLibs.LINQ.LINQExtensions.ForEach(System.Action<InnerLibs.MenuBuilderItem>)
  nameWithType.vb: LINQExtensions.ForEach(Action(Of MenuBuilderItem))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ForEach(System.Action(Of InnerLibs.MenuBuilderItem))
  name.vb: ForEach(Action(Of MenuBuilderItem))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ForEach(System.Action{InnerLibs.MenuBuilderItem})
    name: ForEach
    nameWithType: LINQExtensions.ForEach
    fullName: InnerLibs.LINQ.LINQExtensions.ForEach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ForEach(System.Action{InnerLibs.MenuBuilderItem})
    name: ForEach
    nameWithType: LINQExtensions.ForEach
    fullName: InnerLibs.LINQ.LINQExtensions.ForEach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.GroupByPage(System.Int32)
  commentId: M:InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: GroupByPage(Int32)
  nameWithType: LINQExtensions.GroupByPage(Int32)
  fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage(System.Int32)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.GroupByPage(System.Int32)
    name: GroupByPage
    nameWithType: LINQExtensions.GroupByPage
    fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.GroupByPage(System.Int32)
    name: GroupByPage
    nameWithType: LINQExtensions.GroupByPage
    fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.MenuBuilder.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder,System.Func{InnerLibs.MenuBuilder,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  name: HasSamePropertyValues(MenuBuilder, Func<MenuBuilder, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues(MenuBuilder, Func<MenuBuilder, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder, System.Func<InnerLibs.MenuBuilder, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(MenuBuilder, Func(Of MenuBuilder, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder, System.Func(Of InnerLibs.MenuBuilder, System.Object)())
  name.vb: HasSamePropertyValues(MenuBuilder, Func(Of MenuBuilder, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder,System.Func{InnerLibs.MenuBuilder,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.MenuBuilder,System.Func{InnerLibs.MenuBuilder,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilder
    name: MenuBuilder
    nameWithType: MenuBuilder
    fullName: InnerLibs.MenuBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func{InnerLibs.MenuBuilderItem,System.String},System.Boolean,System.String[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
  name: OrderByLike(Func<MenuBuilderItem, String>, Boolean, String[])
  nameWithType: LINQExtensions.OrderByLike(Func<MenuBuilderItem, String>, Boolean, String[])
  fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func<InnerLibs.MenuBuilderItem, System.String>, System.Boolean, System.String[])
  nameWithType.vb: LINQExtensions.OrderByLike(Func(Of MenuBuilderItem, String), Boolean, String())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func(Of InnerLibs.MenuBuilderItem, System.String), System.Boolean, System.String())
  name.vb: OrderByLike(Func(Of MenuBuilderItem, String), Boolean, String())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func{InnerLibs.MenuBuilderItem,System.String},System.Boolean,System.String[])
    name: OrderByLike
    nameWithType: LINQExtensions.OrderByLike
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByLike(System.Func{InnerLibs.MenuBuilderItem,System.String},System.Boolean,System.String[])
    name: OrderByLike
    nameWithType: LINQExtensions.OrderByLike
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.OrderByRandom
  commentId: M:InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  name: OrderByRandom()
  nameWithType: LINQExtensions.OrderByRandom()
  fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom()
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByRandom
    name: OrderByRandom
    nameWithType: LINQExtensions.OrderByRandom
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByRandom
    name: OrderByRandom
    nameWithType: LINQExtensions.OrderByRandom
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.Page(System.Int32,System.Int32)
  commentId: M:InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
  name: Page(Int32, Int32)
  nameWithType: LINQExtensions.Page(Int32, Int32)
  fullName: InnerLibs.LINQ.LINQExtensions.Page(System.Int32, System.Int32)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.Page(System.Int32,System.Int32)
    name: Page
    nameWithType: LINQExtensions.Page
    fullName: InnerLibs.LINQ.LINQExtensions.Page
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.Page(System.Int32,System.Int32)
    name: Page
    nameWithType: LINQExtensions.Page
    fullName: InnerLibs.LINQ.LINQExtensions.Page
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func{InnerLibs.MenuBuilderItem,System.String},System.String)
  commentId: M:InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  name: SelectJoin(Func<MenuBuilderItem, String>, String)
  nameWithType: LINQExtensions.SelectJoin(Func<MenuBuilderItem, String>, String)
  fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func<InnerLibs.MenuBuilderItem, System.String>, System.String)
  nameWithType.vb: LINQExtensions.SelectJoin(Func(Of MenuBuilderItem, String), String)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func(Of InnerLibs.MenuBuilderItem, System.String), System.String)
  name.vb: SelectJoin(Func(Of MenuBuilderItem, String), String)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func{InnerLibs.MenuBuilderItem,System.String},System.String)
    name: SelectJoin
    nameWithType: LINQExtensions.SelectJoin
    fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectJoin(System.Func{InnerLibs.MenuBuilderItem,System.String},System.String)
    name: SelectJoin
    nameWithType: LINQExtensions.SelectJoin
    fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func{InnerLibs.MenuBuilderItem,System.Collections.Generic.IEnumerable{System.String}},System.String)
  commentId: M:InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
  name: SelectManyJoin(Func<MenuBuilderItem, IEnumerable<String>>, String)
  nameWithType: LINQExtensions.SelectManyJoin(Func<MenuBuilderItem, IEnumerable<String>>, String)
  fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func<InnerLibs.MenuBuilderItem, System.Collections.Generic.IEnumerable<System.String>>, System.String)
  nameWithType.vb: LINQExtensions.SelectManyJoin(Func(Of MenuBuilderItem, IEnumerable(Of String)), String)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func(Of InnerLibs.MenuBuilderItem, System.Collections.Generic.IEnumerable(Of System.String)), System.String)
  name.vb: SelectManyJoin(Func(Of MenuBuilderItem, IEnumerable(Of String)), String)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func{InnerLibs.MenuBuilderItem,System.Collections.Generic.IEnumerable{System.String}},System.String)
    name: SelectManyJoin
    nameWithType: LINQExtensions.SelectManyJoin
    fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(System.Func{InnerLibs.MenuBuilderItem,System.Collections.Generic.IEnumerable{System.String}},System.String)
    name: SelectManyJoin
    nameWithType: LINQExtensions.SelectManyJoin
    fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{InnerLibs.MenuBuilderItem}.InnerLibs.LINQ.LINQExtensions.TakeAndOrder``1(System.Func{InnerLibs.MenuBuilderItem,System.Boolean},System.Func{InnerLibs.MenuBuilderItem,{DefaultOrderType}})
  commentId: M:InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
  name: TakeAndOrder<DefaultOrderType>(Func<MenuBuilderItem, Boolean>, Func<MenuBuilderItem, DefaultOrderType>)
  nameWithType: LINQExtensions.TakeAndOrder<DefaultOrderType>(Func<MenuBuilderItem, Boolean>, Func<MenuBuilderItem, DefaultOrderType>)
  fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder<DefaultOrderType>(System.Func<InnerLibs.MenuBuilderItem, System.Boolean>, System.Func<InnerLibs.MenuBuilderItem, DefaultOrderType>)
  nameWithType.vb: LINQExtensions.TakeAndOrder(Of DefaultOrderType)(Func(Of MenuBuilderItem, Boolean), Func(Of MenuBuilderItem, DefaultOrderType))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.TakeAndOrder(Of DefaultOrderType)(System.Func(Of InnerLibs.MenuBuilderItem, System.Boolean), System.Func(Of InnerLibs.MenuBuilderItem, DefaultOrderType))
  name.vb: TakeAndOrder(Of DefaultOrderType)(Func(Of MenuBuilderItem, Boolean), Func(Of MenuBuilderItem, DefaultOrderType))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``1(System.Func{InnerLibs.MenuBuilderItem,System.Boolean},System.Func{InnerLibs.MenuBuilderItem,``0})
    name: TakeAndOrder<DefaultOrderType>
    nameWithType: LINQExtensions.TakeAndOrder<DefaultOrderType>
    fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder<DefaultOrderType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: DefaultOrderType
    nameWithType: DefaultOrderType
    fullName: DefaultOrderType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``1(System.Func{InnerLibs.MenuBuilderItem,System.Boolean},System.Func{InnerLibs.MenuBuilderItem,``0})
    name: TakeAndOrder(Of DefaultOrderType)
    nameWithType: LINQExtensions.TakeAndOrder(Of DefaultOrderType)
    fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder(Of DefaultOrderType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.MenuBuilderItem
    name: MenuBuilderItem
    nameWithType: MenuBuilderItem
    fullName: InnerLibs.MenuBuilderItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: DefaultOrderType
    nameWithType: DefaultOrderType
    fullName: DefaultOrderType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System.Collections.IList.IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System.Collections.Generic.ICollection<T>.IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System.Collections.Generic.ICollection<T>.IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System.Collections.IList.IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System.Collections.ICollection.IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.Generic.List`1.System.Collections.ICollection.SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: ContainsAll<Type>(IEnumerable<Type>, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.ContainsAll<Type>(IEnumerable<Type>, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.ContainsAll<Type>(System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.ContainsAll(Of Type)(IEnumerable(Of Type), IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.ContainsAll(Of Type)(System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: ContainsAll(Of Type)(IEnumerable(Of Type), IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ContainsAll<Type>
    nameWithType: ClassTools.ContainsAll<Type>
    fullName: InnerLibs.ClassTools.ContainsAll<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ContainsAll(Of Type)
    nameWithType: ClassTools.ContainsAll(Of Type)
    fullName: InnerLibs.ClassTools.ContainsAll(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools
  commentId: T:InnerLibs.ClassTools
  parent: InnerLibs
  name: ClassTools
  nameWithType: ClassTools
  fullName: InnerLibs.ClassTools
- uid: InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: ContainsAny<Type>(IEnumerable<Type>, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.ContainsAny<Type>(IEnumerable<Type>, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.ContainsAny<Type>(System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.ContainsAny(Of Type)(IEnumerable(Of Type), IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.ContainsAny(Of Type)(System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: ContainsAny(Of Type)(IEnumerable(Of Type), IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ContainsAny<Type>
    nameWithType: ClassTools.ContainsAny<Type>
    fullName: InnerLibs.ClassTools.ContainsAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: ContainsAny(Of Type)
    nameWithType: ClassTools.ContainsAny(Of Type)
    fullName: InnerLibs.ClassTools.ContainsAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary<Type>(Type)
  nameWithType: ClassTools.CreateDictionary<Type>(Type)
  fullName: InnerLibs.ClassTools.CreateDictionary<Type>(Type)
  nameWithType.vb: ClassTools.CreateDictionary(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.CreateDictionary(Of Type)(Type)
  name.vb: CreateDictionary(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary<Type>
    nameWithType: ClassTools.CreateDictionary<Type>
    fullName: InnerLibs.ClassTools.CreateDictionary<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary(Of Type)
    nameWithType: ClassTools.CreateDictionary(Of Type)
    fullName: InnerLibs.ClassTools.CreateDictionary(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: DistinctCount<Type>(IEnumerable<Type>)
  nameWithType: ClassTools.DistinctCount<Type>(IEnumerable<Type>)
  fullName: InnerLibs.ClassTools.DistinctCount<Type>(System.Collections.Generic.IEnumerable<Type>)
  nameWithType.vb: ClassTools.DistinctCount(Of Type)(IEnumerable(Of Type))
  fullName.vb: InnerLibs.ClassTools.DistinctCount(Of Type)(System.Collections.Generic.IEnumerable(Of Type))
  name.vb: DistinctCount(Of Type)(IEnumerable(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
    name: DistinctCount<Type>
    nameWithType: ClassTools.DistinctCount<Type>
    fullName: InnerLibs.ClassTools.DistinctCount<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.DistinctCount``1(System.Collections.Generic.IEnumerable{``0})
    name: DistinctCount(Of Type)
    nameWithType: ClassTools.DistinctCount(Of Type)
    fullName: InnerLibs.ClassTools.DistinctCount(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  commentId: M:InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: FirstOr<T>(IEnumerable<T>, T)
  nameWithType: ClassTools.FirstOr<T>(IEnumerable<T>, T)
  fullName: InnerLibs.ClassTools.FirstOr<T>(System.Collections.Generic.IEnumerable<T>, T)
  nameWithType.vb: ClassTools.FirstOr(Of T)(IEnumerable(Of T), T)
  fullName.vb: InnerLibs.ClassTools.FirstOr(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: FirstOr(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: FirstOr<T>
    nameWithType: ClassTools.FirstOr<T>
    fullName: InnerLibs.ClassTools.FirstOr<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.FirstOr``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: FirstOr(Of T)
    nameWithType: ClassTools.FirstOr(Of T)
    fullName: InnerLibs.ClassTools.FirstOr(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Object, BindingFlags)
  nameWithType: ClassTools.GetProperties(Object, BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  isExternal: true
  name: GetProperties(Object)
  nameWithType: ClassTools.GetProperties(Object)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue<Type>(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.Object, System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(Object, String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.Object, System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(Object, String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  isExternal: true
  name: HasProperty(Object, String)
  nameWithType: ClassTools.HasProperty(Object, String)
  fullName: InnerLibs.ClassTools.HasProperty(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  isExternal: true
  name: IsArrayOf<T>(Object)
  nameWithType: ClassTools.IsArrayOf<T>(Object)
  fullName: InnerLibs.ClassTools.IsArrayOf<T>(System.Object)
  nameWithType.vb: ClassTools.IsArrayOf(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)(System.Object)
  name.vb: IsArrayOf(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsDictionary(System.Object)
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  isExternal: true
  name: IsDictionary(Object)
  nameWithType: ClassTools.IsDictionary(Object)
  fullName: InnerLibs.ClassTools.IsDictionary(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  nameWithType: ClassTools.IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsInAny<Type>(Type, System.Collections.Generic.IEnumerable<Type>[], System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsInAny(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type)(), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny<Type>
    nameWithType: ClassTools.IsInAny<Type>
    fullName: InnerLibs.ClassTools.IsInAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny(Of Type)
    nameWithType: ClassTools.IsInAny(Of Type)
    fullName: InnerLibs.ClassTools.IsInAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsList(System.Object)
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  isExternal: true
  name: IsList(Object)
  nameWithType: ClassTools.IsList(Object)
  fullName: InnerLibs.ClassTools.IsList(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsType``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  isExternal: true
  name: IsType<T>(Object)
  nameWithType: ClassTools.IsType<T>(Object)
  fullName: InnerLibs.ClassTools.IsType<T>(System.Object)
  nameWithType.vb: ClassTools.IsType(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)(System.Object)
  name.vb: IsType(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  commentId: M:InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: LastOr<T>(IEnumerable<T>, T)
  nameWithType: ClassTools.LastOr<T>(IEnumerable<T>, T)
  fullName: InnerLibs.ClassTools.LastOr<T>(System.Collections.Generic.IEnumerable<T>, T)
  nameWithType.vb: ClassTools.LastOr(Of T)(IEnumerable(Of T), T)
  fullName.vb: InnerLibs.ClassTools.LastOr(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: LastOr(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: LastOr<T>
    nameWithType: ClassTools.LastOr<T>
    fullName: InnerLibs.ClassTools.LastOr<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.LastOr``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: LastOr(Of T)
    nameWithType: ClassTools.LastOr(Of T)
    fullName: InnerLibs.ClassTools.LastOr(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce<T>(T, T[])
  nameWithType: ClassTools.NullCoalesce<T>(T, T[])
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(T, T[])
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(T, T())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(T, T())
  name.vb: NullCoalesce(Of T)(T, T())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: NullCoalesce<T>(IEnumerable<T>)
  nameWithType: ClassTools.NullCoalesce<T>(IEnumerable<T>)
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(IEnumerable(Of T))
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: NullCoalesce(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(System.Collections.Generic.IEnumerable{``0})
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties<Type>(Type)
  nameWithType: ClassTools.NullifyProperties<Type>(Type)
  fullName: InnerLibs.ClassTools.NullifyProperties<Type>(Type)
  nameWithType.vb: ClassTools.NullifyProperties(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.NullifyProperties(Of Type)(Type)
  name.vb: NullifyProperties(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties<Type>
    nameWithType: ClassTools.NullifyProperties<Type>
    fullName: InnerLibs.ClassTools.NullifyProperties<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties(Of Type)
    nameWithType: ClassTools.NullifyProperties(Of Type)
    fullName: InnerLibs.ClassTools.NullifyProperties(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  isExternal: true
  name: SetPropertyValue<Type>(Object, String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(Object, String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.Object, System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(Object, String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.Object, System.String, Type)
  name.vb: SetPropertyValue(Of Type)(Object, String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  isExternal: true
  name: SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.Object, System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.Object, System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  isExternal: true
  name: ToFlatString(Object, String)
  nameWithType: ClassTools.ToFlatString(Object, String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation.GetDbType(System.Object)
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  isExternal: true
  name: GetDbType(Object)
  nameWithType: DataManipulation.GetDbType(Object)
  fullName: InnerLibs.DataManipulation.GetDbType(System.Object)
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation
  commentId: T:InnerLibs.DataManipulation
  parent: InnerLibs
  name: DataManipulation
  nameWithType: DataManipulation
  fullName: InnerLibs.DataManipulation
- uid: InnerLibs.Converter.DefineEmptyList``1(``0)
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList<T>(T)
  nameWithType: Converter.DefineEmptyList<T>(T)
  fullName: InnerLibs.Converter.DefineEmptyList<T>(T)
  nameWithType.vb: Converter.DefineEmptyList(Of T)(T)
  fullName.vb: InnerLibs.Converter.DefineEmptyList(Of T)(T)
  name.vb: DefineEmptyList(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList<T>
    nameWithType: Converter.DefineEmptyList<T>
    fullName: InnerLibs.Converter.DefineEmptyList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList(Of T)
    nameWithType: Converter.DefineEmptyList(Of T)
    fullName: InnerLibs.Converter.DefineEmptyList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Converter
  commentId: T:InnerLibs.Converter
  parent: InnerLibs
  name: Converter
  nameWithType: Converter
  fullName: InnerLibs.Converter
- uid: InnerLibs.Converter.ChangeType``2(``1)
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType, FromType>(FromType)
  nameWithType: Converter.ChangeType<ToType, FromType>(FromType)
  fullName: InnerLibs.Converter.ChangeType<ToType, FromType>(FromType)
  nameWithType.vb: Converter.ChangeType(Of ToType, FromType)(FromType)
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType, FromType)(FromType)
  name.vb: ChangeType(Of ToType, FromType)(FromType)
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType<ToType, FromType>
    nameWithType: Converter.ChangeType<ToType, FromType>
    fullName: InnerLibs.Converter.ChangeType<ToType, FromType>
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType(Of ToType, FromType)
    nameWithType: Converter.ChangeType(Of ToType, FromType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType, FromType)
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer.CreateNode(System.Object)
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  isExternal: true
  name: CreateNode(Object)
  nameWithType: JsonViewer.CreateNode(Object)
  fullName: InnerLibs.JsonViewer.CreateNode(System.Object)
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer
  commentId: T:InnerLibs.JsonViewer
  parent: InnerLibs
  name: JsonViewer
  nameWithType: JsonViewer
  fullName: InnerLibs.JsonViewer
- uid: InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: CalculatePercent<TObject, TKey, TValue>(IEnumerable<TObject>, Func<TObject, TKey>, Func<TObject, TValue>)
  nameWithType: Mathematic.CalculatePercent<TObject, TKey, TValue>(IEnumerable<TObject>, Func<TObject, TKey>, Func<TObject, TValue>)
  fullName: InnerLibs.Mathematic.CalculatePercent<TObject, TKey, TValue>(System.Collections.Generic.IEnumerable<TObject>, System.Func<TObject, TKey>, System.Func<TObject, TValue>)
  nameWithType.vb: Mathematic.CalculatePercent(Of TObject, TKey, TValue)(IEnumerable(Of TObject), Func(Of TObject, TKey), Func(Of TObject, TValue))
  fullName.vb: InnerLibs.Mathematic.CalculatePercent(Of TObject, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TObject), System.Func(Of TObject, TKey), System.Func(Of TObject, TValue))
  name.vb: CalculatePercent(Of TObject, TKey, TValue)(IEnumerable(Of TObject), Func(Of TObject, TKey), Func(Of TObject, TValue))
  spec.csharp:
  - uid: InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: CalculatePercent<TObject, TKey, TValue>
    nameWithType: Mathematic.CalculatePercent<TObject, TKey, TValue>
    fullName: InnerLibs.Mathematic.CalculatePercent<TObject, TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.CalculatePercent``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: CalculatePercent(Of TObject, TKey, TValue)
    nameWithType: Mathematic.CalculatePercent(Of TObject, TKey, TValue)
    fullName: InnerLibs.Mathematic.CalculatePercent(Of TObject, TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TObject
    nameWithType: TObject
    fullName: TObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic
  commentId: T:InnerLibs.Mathematic
  parent: InnerLibs
  name: Mathematic
  nameWithType: Mathematic
  fullName: InnerLibs.Mathematic
- uid: InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: CalculatePercent<Tobject, Tvalue>(IEnumerable<Tobject>, Func<Tobject, Tvalue>)
  nameWithType: Mathematic.CalculatePercent<Tobject, Tvalue>(IEnumerable<Tobject>, Func<Tobject, Tvalue>)
  fullName: InnerLibs.Mathematic.CalculatePercent<Tobject, Tvalue>(System.Collections.Generic.IEnumerable<Tobject>, System.Func<Tobject, Tvalue>)
  nameWithType.vb: Mathematic.CalculatePercent(Of Tobject, Tvalue)(IEnumerable(Of Tobject), Func(Of Tobject, Tvalue))
  fullName.vb: InnerLibs.Mathematic.CalculatePercent(Of Tobject, Tvalue)(System.Collections.Generic.IEnumerable(Of Tobject), System.Func(Of Tobject, Tvalue))
  name.vb: CalculatePercent(Of Tobject, Tvalue)(IEnumerable(Of Tobject), Func(Of Tobject, Tvalue))
  spec.csharp:
  - uid: InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: CalculatePercent<Tobject, Tvalue>
    nameWithType: Mathematic.CalculatePercent<Tobject, Tvalue>
    fullName: InnerLibs.Mathematic.CalculatePercent<Tobject, Tvalue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Tobject
    nameWithType: Tobject
    fullName: Tobject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Tobject
    nameWithType: Tobject
    fullName: Tobject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Tvalue
    nameWithType: Tvalue
    fullName: Tvalue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.CalculatePercent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: CalculatePercent(Of Tobject, Tvalue)
    nameWithType: Mathematic.CalculatePercent(Of Tobject, Tvalue)
    fullName: InnerLibs.Mathematic.CalculatePercent(Of Tobject, Tvalue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Tobject
    nameWithType: Tobject
    fullName: Tobject
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Tobject
    nameWithType: Tobject
    fullName: Tobject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Tvalue
    nameWithType: Tvalue
    fullName: Tvalue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  isExternal: true
  name: IsBetween<Type>(Type, Object, Object)
  nameWithType: Mathematic.IsBetween<Type>(Type, Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween<Type>(Type, System.Object, System.Object)
  nameWithType.vb: Mathematic.IsBetween(Of Type)(Type, Object, Object)
  fullName.vb: InnerLibs.Mathematic.IsBetween(Of Type)(Type, System.Object, System.Object)
  name.vb: IsBetween(Of Type)(Type, Object, Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween<Type>
    nameWithType: Mathematic.IsBetween<Type>
    fullName: InnerLibs.Mathematic.IsBetween<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween(Of Type)
    nameWithType: Mathematic.IsBetween(Of Type)
    fullName: InnerLibs.Mathematic.IsBetween(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
  commentId: M:InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: GetRandomItem<Type>(List<Type>)
  nameWithType: Text.GetRandomItem<Type>(List<Type>)
  fullName: InnerLibs.Text.GetRandomItem<Type>(System.Collections.Generic.List<Type>)
  nameWithType.vb: Text.GetRandomItem(Of Type)(List(Of Type))
  fullName.vb: InnerLibs.Text.GetRandomItem(Of Type)(System.Collections.Generic.List(Of Type))
  name.vb: GetRandomItem(Of Type)(List(Of Type))
  spec.csharp:
  - uid: InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
    name: GetRandomItem<Type>
    nameWithType: Text.GetRandomItem<Type>
    fullName: InnerLibs.Text.GetRandomItem<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.GetRandomItem``1(System.Collections.Generic.List{``0})
    name: GetRandomItem(Of Type)
    nameWithType: Text.GetRandomItem(Of Type)
    fullName: InnerLibs.Text.GetRandomItem(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text
  commentId: T:InnerLibs.Text
  parent: InnerLibs
  name: Text
  nameWithType: Text
  fullName: InnerLibs.Text
- uid: InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: Join<Type>(IEnumerable<Type>, String)
  nameWithType: Text.Join<Type>(IEnumerable<Type>, String)
  fullName: InnerLibs.Text.Join<Type>(System.Collections.Generic.IEnumerable<Type>, System.String)
  nameWithType.vb: Text.Join(Of Type)(IEnumerable(Of Type), String)
  fullName.vb: InnerLibs.Text.Join(Of Type)(System.Collections.Generic.IEnumerable(Of Type), System.String)
  name.vb: Join(Of Type)(IEnumerable(Of Type), String)
  spec.csharp:
  - uid: InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: Join<Type>
    nameWithType: Text.Join<Type>
    fullName: InnerLibs.Text.Join<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: Join(Of Type)
    nameWithType: Text.Join(Of Type)
    fullName: InnerLibs.Text.Join(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
  commentId: M:InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
  isExternal: true
  name: Join<Type>(List<Type>, String)
  nameWithType: Text.Join<Type>(List<Type>, String)
  fullName: InnerLibs.Text.Join<Type>(System.Collections.Generic.List<Type>, System.String)
  nameWithType.vb: Text.Join(Of Type)(List(Of Type), String)
  fullName.vb: InnerLibs.Text.Join(Of Type)(System.Collections.Generic.List(Of Type), System.String)
  name.vb: Join(Of Type)(List(Of Type), String)
  spec.csharp:
  - uid: InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
    name: Join<Type>
    nameWithType: Text.Join<Type>
    fullName: InnerLibs.Text.Join<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Join``1(System.Collections.Generic.List{``0},System.String)
    name: Join(Of Type)
    nameWithType: Text.Join(Of Type)
    fullName: InnerLibs.Text.Join(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  isExternal: true
  name: SerializeJSON(Object, String)
  nameWithType: Text.SerializeJSON(Object, String)
  fullName: InnerLibs.Text.SerializeJSON(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
  commentId: M:InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
  isExternal: true
  name: Shuffle<Type>(List<Type>)
  nameWithType: Text.Shuffle<Type>(List<Type>)
  fullName: InnerLibs.Text.Shuffle<Type>(System.Collections.Generic.List<Type>)
  nameWithType.vb: Text.Shuffle(Of Type)(List(Of Type))
  fullName.vb: InnerLibs.Text.Shuffle(Of Type)(System.Collections.Generic.List(Of Type))
  name.vb: Shuffle(Of Type)(List(Of Type))
  spec.csharp:
  - uid: InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
    name: Shuffle<Type>
    nameWithType: Text.Shuffle<Type>
    fullName: InnerLibs.Text.Shuffle<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.Shuffle``1(System.Collections.Generic.List{``0}@)
    name: Shuffle(Of Type)
    nameWithType: Text.Shuffle(Of Type)
    fullName: InnerLibs.Text.Shuffle(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExternal: true
  name: ToHtmlList<T>(IEnumerable<T>, Boolean)
  nameWithType: Text.ToHtmlList<T>(IEnumerable<T>, Boolean)
  fullName: InnerLibs.Text.ToHtmlList<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean)
  nameWithType.vb: Text.ToHtmlList(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: InnerLibs.Text.ToHtmlList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean)
  name.vb: ToHtmlList(Of T)(IEnumerable(Of T), Boolean)
  spec.csharp:
  - uid: InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: ToHtmlList<T>
    nameWithType: Text.ToHtmlList<T>
    fullName: InnerLibs.Text.ToHtmlList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.ToHtmlList``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: ToHtmlList(Of T)
    nameWithType: Text.ToHtmlList(Of T)
    fullName: InnerLibs.Text.ToHtmlList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IsNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  isExternal: true
  name: IsNumber(Object)
  nameWithType: Verify.IsNumber(Object)
  fullName: InnerLibs.Verify.IsNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify
  commentId: T:InnerLibs.Verify
  parent: InnerLibs
  name: Verify
  nameWithType: Verify
  fullName: InnerLibs.Verify
- uid: InnerLibs.Verify.IsNotNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  isExternal: true
  name: IsNotNumber(Object)
  nameWithType: Verify.IsNotNumber(Object)
  fullName: InnerLibs.Verify.IsNotNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  commentId: M:InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  isExternal: true
  name: IfNoIndex<T>(IEnumerable<T>, Int32, T)
  nameWithType: Verify.IfNoIndex<T>(IEnumerable<T>, Int32, T)
  fullName: InnerLibs.Verify.IfNoIndex<T>(System.Collections.Generic.IEnumerable<T>, System.Int32, T)
  nameWithType.vb: Verify.IfNoIndex(Of T)(IEnumerable(Of T), Int32, T)
  fullName.vb: InnerLibs.Verify.IfNoIndex(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32, T)
  name.vb: IfNoIndex(Of T)(IEnumerable(Of T), Int32, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
    name: IfNoIndex<T>
    nameWithType: Verify.IfNoIndex<T>
    fullName: InnerLibs.Verify.IfNoIndex<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
    name: IfNoIndex(Of T)
    nameWithType: Verify.IfNoIndex(Of T)
    fullName: InnerLibs.Verify.IfNoIndex(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  commentId: M:InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
  isExternal: true
  name: IfBlankOrNoIndex<T>(IEnumerable<T>, Int32, T)
  nameWithType: Verify.IfBlankOrNoIndex<T>(IEnumerable<T>, Int32, T)
  fullName: InnerLibs.Verify.IfBlankOrNoIndex<T>(System.Collections.Generic.IEnumerable<T>, System.Int32, T)
  nameWithType.vb: Verify.IfBlankOrNoIndex(Of T)(IEnumerable(Of T), Int32, T)
  fullName.vb: InnerLibs.Verify.IfBlankOrNoIndex(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32, T)
  name.vb: IfBlankOrNoIndex(Of T)(IEnumerable(Of T), Int32, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
    name: IfBlankOrNoIndex<T>
    nameWithType: Verify.IfBlankOrNoIndex<T>
    fullName: InnerLibs.Verify.IfBlankOrNoIndex<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlankOrNoIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32,``0)
    name: IfBlankOrNoIndex(Of T)
    nameWithType: Verify.IfBlankOrNoIndex(Of T)
    fullName: InnerLibs.Verify.IfBlankOrNoIndex(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  isExternal: true
  name: IfBlank<T>(Object, T)
  nameWithType: Verify.IfBlank<T>(Object, T)
  fullName: InnerLibs.Verify.IfBlank<T>(System.Object, T)
  nameWithType.vb: Verify.IfBlank(Of T)(Object, T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(System.Object, T)
  name.vb: IfBlank(Of T)(Object, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  isExternal: true
  name: NullIf<T>(T, Func<T, Boolean>)
  nameWithType: Verify.NullIf<T>(T, Func<T, Boolean>)
  fullName: InnerLibs.Verify.NullIf<T>(T, System.Func<T, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Of T)(T, Func(Of T, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, System.Func(Of T, System.Boolean))
  name.vb: NullIf(Of T)(T, Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,``0)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf<T>(T, T)
  nameWithType: Verify.NullIf<T>(T, T)
  fullName: InnerLibs.Verify.NullIf<T>(T, T)
  nameWithType.vb: Verify.NullIf(Of T)(T, T)
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, T)
  name.vb: NullIf(Of T)(T, T)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsEmpty<T>(IEnumerable<T>)
  nameWithType: Verify.IsEmpty<T>(IEnumerable<T>)
  fullName: InnerLibs.Verify.IsEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Verify.IsEmpty(Of T)(IEnumerable(Of T))
  fullName.vb: InnerLibs.Verify.IsEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsEmpty(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty<T>
    nameWithType: Verify.IsEmpty<T>
    fullName: InnerLibs.Verify.IsEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty(Of T)
    nameWithType: Verify.IsEmpty(Of T)
    fullName: InnerLibs.Verify.IsEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExternal: true
  name: CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  nameWithType.vb: Web.CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax<Type>
    nameWithType: Web.CreateFromAjax<Type>
    fullName: InnerLibs.Web.CreateFromAjax<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax(Of Type)
    nameWithType: Web.CreateFromAjax(Of Type)
    fullName: InnerLibs.Web.CreateFromAjax(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  parent: InnerLibs
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem<T, TextType, ValueType>
    nameWithType: Web.AsListItem<T, TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem(Of T, TextType, ValueType)
    nameWithType: Web.AsListItem(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
  isExternal: true
  name: ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  nameWithType: Web.ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, Func<T, Boolean>)
  fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, System.Func<T, System.Boolean>)
  nameWithType.vb: Web.ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
  fullName.vb: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), System.Func(Of T, System.Boolean))
  name.vb: ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
    name: ToListItems<T, TextType, ValueType>
    nameWithType: Web.ToListItems<T, TextType, ValueType>
    fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,System.Boolean})
    name: ToListItems(Of T, TextType, ValueType)
    nameWithType: Web.ToListItems(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  commentId: M:InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
  isExternal: true
  name: ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  nameWithType: Web.ToListItems<T, TextType, ValueType>(IEnumerable<T>, Func<T, TextType>, Func<T, ValueType>, ValueType[])
  fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TextType>, System.Func<T, ValueType>, ValueType[])
  nameWithType.vb: Web.ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
  fullName.vb: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TextType), System.Func(Of T, ValueType), ValueType())
  name.vb: ToListItems(Of T, TextType, ValueType)(IEnumerable(Of T), Func(Of T, TextType), Func(Of T, ValueType), ValueType())
  spec.csharp:
  - uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
    name: ToListItems<T, TextType, ValueType>
    nameWithType: Web.ToListItems<T, TextType, ValueType>
    fullName: InnerLibs.Web.ToListItems<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.ToListItems``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},``2[])
    name: ToListItems(Of T, TextType, ValueType)
    nameWithType: Web.ToListItems(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.ToListItems(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms.GetCastedValue(System.Object)
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  isExternal: true
  name: GetCastedValue(Object)
  nameWithType: WinForms.GetCastedValue(Object)
  fullName: InnerLibs.WinForms.GetCastedValue(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms
  commentId: T:InnerLibs.WinForms
  parent: InnerLibs
  name: WinForms
  nameWithType: WinForms
  fullName: InnerLibs.WinForms
- uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  isExternal: true
  name: CastValueForControl(Object, Object)
  nameWithType: WinForms.CastValueForControl(Object, Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  isExternal: true
  name: ApplyToControls<T>(T, HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls<T>(T, HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>(T, System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(Of T)(T, HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)(T, System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(Of T)(T, HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls<T>
    nameWithType: LINQExtensions.ApplyToControls<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls(Of T)
    nameWithType: LINQExtensions.ApplyToControls(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions
  commentId: T:InnerLibs.LINQ.LINQExtensions
  parent: InnerLibs.LINQ
  name: LINQExtensions
  nameWithType: LINQExtensions
  fullName: InnerLibs.LINQ.LINQExtensions
- uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
  commentId: M:InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
  isExternal: true
  name: DistinctBy<T, TKey, TOrder>(IEnumerable<T>, Func<T, TKey>, Func<T, TOrder>, Boolean)
  nameWithType: LINQExtensions.DistinctBy<T, TKey, TOrder>(IEnumerable<T>, Func<T, TKey>, Func<T, TOrder>, Boolean)
  fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<T, TKey, TOrder>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>, System.Func<T, TOrder>, System.Boolean)
  nameWithType.vb: LINQExtensions.DistinctBy(Of T, TKey, TOrder)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TOrder), Boolean)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of T, TKey, TOrder)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey), System.Func(Of T, TOrder), System.Boolean)
  name.vb: DistinctBy(Of T, TKey, TOrder)(IEnumerable(Of T), Func(Of T, TKey), Func(Of T, TOrder), Boolean)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
    name: DistinctBy<T, TKey, TOrder>
    nameWithType: LINQExtensions.DistinctBy<T, TKey, TOrder>
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<T, TKey, TOrder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOrder
    nameWithType: TOrder
    fullName: TOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Boolean)
    name: DistinctBy(Of T, TKey, TOrder)
    nameWithType: LINQExtensions.DistinctBy(Of T, TKey, TOrder)
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of T, TKey, TOrder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOrder
    nameWithType: TOrder
    fullName: TOrder
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: LINQExtensions.DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: LINQExtensions.DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy<T, TKey>
    nameWithType: LINQExtensions.DistinctBy<T, TKey>
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy(Of T, TKey)
    nameWithType: LINQExtensions.DistinctBy(Of T, TKey)
    fullName: InnerLibs.LINQ.LINQExtensions.DistinctBy(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: LINQExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: InnerLibs.LINQ.LINQExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: LINQExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach<T>
    nameWithType: LINQExtensions.ForEach<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ForEach<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach(Of T)
    nameWithType: LINQExtensions.ForEach(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ForEach(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: GroupByPage<Tsource>(IEnumerable<Tsource>, Int32)
  nameWithType: LINQExtensions.GroupByPage<Tsource>(IEnumerable<Tsource>, Int32)
  fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage<Tsource>(System.Collections.Generic.IEnumerable<Tsource>, System.Int32)
  nameWithType.vb: LINQExtensions.GroupByPage(Of Tsource)(IEnumerable(Of Tsource), Int32)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.GroupByPage(Of Tsource)(System.Collections.Generic.IEnumerable(Of Tsource), System.Int32)
  name.vb: GroupByPage(Of Tsource)(IEnumerable(Of Tsource), Int32)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GroupByPage<Tsource>
    nameWithType: LINQExtensions.GroupByPage<Tsource>
    fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage<Tsource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Tsource
    nameWithType: Tsource
    fullName: Tsource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.GroupByPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GroupByPage(Of Tsource)
    nameWithType: LINQExtensions.GroupByPage(Of Tsource)
    fullName: InnerLibs.LINQ.LINQExtensions.GroupByPage(Of Tsource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Tsource
    nameWithType: Tsource
    fullName: Tsource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  isExternal: true
  name: HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>(T, T, System.Func<T, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)(T, T, System.Func(Of T, System.Object)())
  name.vb: HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues<T>
    nameWithType: LINQExtensions.HasSamePropertyValues<T>
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues(Of T)
    nameWithType: LINQExtensions.HasSamePropertyValues(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
  isExternal: true
  name: OrderByLike<T>(IEnumerable<T>, Func<T, String>, Boolean, String[])
  nameWithType: LINQExtensions.OrderByLike<T>(IEnumerable<T>, Func<T, String>, Boolean, String[])
  fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.String>, System.Boolean, System.String[])
  nameWithType.vb: LINQExtensions.OrderByLike(Of T)(IEnumerable(Of T), Func(Of T, String), Boolean, String())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.OrderByLike(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.String), System.Boolean, System.String())
  name.vb: OrderByLike(Of T)(IEnumerable(Of T), Func(Of T, String), Boolean, String())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
    name: OrderByLike<T>
    nameWithType: LINQExtensions.OrderByLike<T>
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByLike``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String[])
    name: OrderByLike(Of T)
    nameWithType: LINQExtensions.OrderByLike(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByLike(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: OrderByRandom<T>(IEnumerable<T>)
  nameWithType: LINQExtensions.OrderByRandom<T>(IEnumerable<T>)
  fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: LINQExtensions.OrderByRandom(Of T)(IEnumerable(Of T))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.OrderByRandom(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: OrderByRandom(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
    name: OrderByRandom<T>
    nameWithType: LINQExtensions.OrderByRandom<T>
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0})
    name: OrderByRandom(Of T)
    nameWithType: LINQExtensions.OrderByRandom(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.OrderByRandom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
  commentId: M:InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
  isExternal: true
  name: Page<TSource>(IEnumerable<TSource>, Int32, Int32)
  nameWithType: LINQExtensions.Page<TSource>(IEnumerable<TSource>, Int32, Int32)
  fullName: InnerLibs.LINQ.LINQExtensions.Page<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32, System.Int32)
  nameWithType.vb: LINQExtensions.Page(Of TSource)(IEnumerable(Of TSource), Int32, Int32)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.Page(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32, System.Int32)
  name.vb: Page(Of TSource)(IEnumerable(Of TSource), Int32, Int32)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
    name: Page<TSource>
    nameWithType: LINQExtensions.Page<TSource>
    fullName: InnerLibs.LINQ.LINQExtensions.Page<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)
    name: Page(Of TSource)
    nameWithType: LINQExtensions.Page(Of TSource)
    fullName: InnerLibs.LINQ.LINQExtensions.Page(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  commentId: M:InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  isExternal: true
  name: SelectJoin<TSource>(IEnumerable<TSource>, Func<TSource, String>, String)
  nameWithType: LINQExtensions.SelectJoin<TSource>(IEnumerable<TSource>, Func<TSource, String>, String)
  fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.String>, System.String)
  nameWithType.vb: LINQExtensions.SelectJoin(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, String), String)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.SelectJoin(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.String), System.String)
  name.vb: SelectJoin(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, String), String)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: SelectJoin<TSource>
    nameWithType: LINQExtensions.SelectJoin<TSource>
    fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: SelectJoin(Of TSource)
    nameWithType: LINQExtensions.SelectJoin(Of TSource)
    fullName: InnerLibs.LINQ.LINQExtensions.SelectJoin(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
  commentId: M:InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
  isExternal: true
  name: SelectManyJoin<TSource>(IEnumerable<TSource>, Func<TSource, IEnumerable<String>>, String)
  nameWithType: LINQExtensions.SelectManyJoin<TSource>(IEnumerable<TSource>, Func<TSource, IEnumerable<String>>, String)
  fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<System.String>>, System.String)
  nameWithType.vb: LINQExtensions.SelectManyJoin(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of String)), String)
  fullName.vb: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of System.String)), System.String)
  name.vb: SelectManyJoin(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of String)), String)
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
    name: SelectManyJoin<TSource>
    nameWithType: LINQExtensions.SelectManyJoin<TSource>
    fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.SelectManyJoin``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.String}},System.String)
    name: SelectManyJoin(Of TSource)
    nameWithType: LINQExtensions.SelectManyJoin(Of TSource)
    fullName: InnerLibs.LINQ.LINQExtensions.SelectManyJoin(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
  commentId: M:InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
  isExternal: true
  name: TakeAndOrder<T, DefaultOrderType>(IEnumerable<T>, Func<T, Boolean>, Func<T, DefaultOrderType>)
  nameWithType: LINQExtensions.TakeAndOrder<T, DefaultOrderType>(IEnumerable<T>, Func<T, Boolean>, Func<T, DefaultOrderType>)
  fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder<T, DefaultOrderType>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Func<T, DefaultOrderType>)
  nameWithType.vb: LINQExtensions.TakeAndOrder(Of T, DefaultOrderType)(IEnumerable(Of T), Func(Of T, Boolean), Func(Of T, DefaultOrderType))
  fullName.vb: InnerLibs.LINQ.LINQExtensions.TakeAndOrder(Of T, DefaultOrderType)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Func(Of T, DefaultOrderType))
  name.vb: TakeAndOrder(Of T, DefaultOrderType)(IEnumerable(Of T), Func(Of T, Boolean), Func(Of T, DefaultOrderType))
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
    name: TakeAndOrder<T, DefaultOrderType>
    nameWithType: LINQExtensions.TakeAndOrder<T, DefaultOrderType>
    fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder<T, DefaultOrderType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: DefaultOrderType
    nameWithType: DefaultOrderType
    fullName: DefaultOrderType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.TakeAndOrder``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,``1})
    name: TakeAndOrder(Of T, DefaultOrderType)
    nameWithType: LINQExtensions.TakeAndOrder(Of T, DefaultOrderType)
    fullName: InnerLibs.LINQ.LINQExtensions.TakeAndOrder(Of T, DefaultOrderType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: DefaultOrderType
    nameWithType: DefaultOrderType
    fullName: DefaultOrderType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ
  commentId: N:InnerLibs.LINQ
  name: InnerLibs.LINQ
  nameWithType: InnerLibs.LINQ
  fullName: InnerLibs.LINQ
- uid: InnerLibs.MenuBuilder.HasItems*
  commentId: Overload:InnerLibs.MenuBuilder.HasItems
  name: HasItems
  nameWithType: MenuBuilder.HasItems
  fullName: InnerLibs.MenuBuilder.HasItems
- uid: InnerLibs.MenuBuilder.ToJSON*
  commentId: Overload:InnerLibs.MenuBuilder.ToJSON
  name: ToJSON
  nameWithType: MenuBuilder.ToJSON
  fullName: InnerLibs.MenuBuilder.ToJSON
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
