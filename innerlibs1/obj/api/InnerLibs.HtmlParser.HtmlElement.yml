### YamlMime:ManagedReference
items:
- uid: InnerLibs.HtmlParser.HtmlElement
  commentId: T:InnerLibs.HtmlParser.HtmlElement
  id: HtmlElement
  parent: InnerLibs.HtmlParser
  children:
  - InnerLibs.HtmlParser.HtmlElement.#ctor(InnerLibs.HtmlParser.HtmlElement)
  - InnerLibs.HtmlParser.HtmlElement.#ctor(System.String,System.String)
  - InnerLibs.HtmlParser.HtmlElement.#ctor(System.Web.UI.HtmlControls.HtmlGenericControl)
  - InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  - InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  - InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  - InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  - InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Attributes
  - InnerLibs.HtmlParser.HtmlElement.AttributesNames
  - InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  - InnerLibs.HtmlParser.HtmlElement.ChildElements
  - InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Class
  - InnerLibs.HtmlParser.HtmlElement.Clone
  - InnerLibs.HtmlParser.HtmlElement.ContentText
  - InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  - InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Destroy
  - InnerLibs.HtmlParser.HtmlElement.Disabled
  - InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  - InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.FixText
  - InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  - InnerLibs.HtmlParser.HtmlElement.HTML
  - InnerLibs.HtmlParser.HtmlElement.ID
  - InnerLibs.HtmlParser.HtmlElement.InnerHTML
  - InnerLibs.HtmlParser.HtmlElement.InnerText
  - InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  - InnerLibs.HtmlParser.HtmlElement.IsTerminated
  - InnerLibs.HtmlParser.HtmlElement.IsVisible
  - InnerLibs.HtmlParser.HtmlElement.mAttributes
  - InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  - InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  - InnerLibs.HtmlParser.HtmlElement.mName
  - InnerLibs.HtmlParser.HtmlElement.mNodes
  - InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  - InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  - InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Name
  - InnerLibs.HtmlParser.HtmlElement.Nodes
  - InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  - InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  - InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  - InnerLibs.HtmlParser.HtmlElement.Style
  - InnerLibs.HtmlParser.HtmlElement.Title
  - InnerLibs.HtmlParser.HtmlElement.ToString
  - InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  - InnerLibs.HtmlParser.HtmlElement.XHTML
  langs:
  - csharp
  - vb
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: InnerLibs.HtmlParser.HtmlElement
  type: Class
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: HtmlElement
    path: htmlparser/HtmlElement.vb
    startLine: 82
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThe HtmlElement object represents any HTML element. An element has a name and zero or more attributes.\n"
  example: []
  syntax:
    content: 'public class HtmlElement : HtmlNode'
    content.vb: >-
      Public Class HtmlElement
          Inherits HtmlNode
  inheritance:
  - System.Object
  - InnerLibs.HtmlParser.HtmlNode
  derivedClasses:
  - InnerLibs.HtmlParser.HtmlAnchorElement
  - InnerLibs.HtmlParser.HtmlBreakLine
  - InnerLibs.HtmlParser.HtmlHorizontalRule
  - InnerLibs.HtmlParser.HtmlImageElement
  - InnerLibs.HtmlParser.HtmlInputElement
  - InnerLibs.HtmlParser.HtmlListElement
  - InnerLibs.HtmlParser.HtmlOptionElement
  - InnerLibs.HtmlParser.HtmlSelectElement
  - InnerLibs.HtmlParser.HtmlTimeElement
  inheritedMembers:
  - InnerLibs.HtmlParser.HtmlNode.mParent
  - InnerLibs.HtmlParser.HtmlNode.ToJSON
  - InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  - InnerLibs.HtmlParser.HtmlNode.Next
  - InnerLibs.HtmlParser.HtmlNode.FirstChild
  - InnerLibs.HtmlParser.HtmlNode.AsElement
  - InnerLibs.HtmlParser.HtmlNode.AsElement``1
  - InnerLibs.HtmlParser.HtmlNode.AsText
  - InnerLibs.HtmlParser.HtmlNode.Index
  - InnerLibs.HtmlParser.HtmlNode.IsChild
  - InnerLibs.HtmlParser.HtmlNode.IsParent
  - InnerLibs.HtmlParser.HtmlNode.IsRoot
  - InnerLibs.HtmlParser.HtmlNode.LastChild
  - InnerLibs.HtmlParser.HtmlNode.Parent
  - InnerLibs.HtmlParser.HtmlNode.Previous
  - InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  - InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  - InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsElement
  - InnerLibs.HtmlParser.HtmlNode.IsElement``1
  - InnerLibs.HtmlParser.HtmlNode.IsText
  - InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  - InnerLibs.HtmlParser.HtmlNode.Remove
  - InnerLibs.HtmlParser.HtmlNode.TopParent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.Finalize
  - System.Object.MemberwiseClone
  extensionMethods:
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.CreateDictionary
  - System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  - System.Object.InnerLibs.ClassTools.GetProperties
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  - System.Object.InnerLibs.ClassTools.IsArrayOf``1
  - System.Object.InnerLibs.ClassTools.IsDictionary
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  - System.Object.InnerLibs.ClassTools.IsList
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - System.Object.InnerLibs.ClassTools.IsType``1
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement[])
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.NullifyProperties
  - System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  - System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  - System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  - System.Object.InnerLibs.DataManipulation.GetDbType
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Converter.DefineEmptyList
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Converter.ChangeType``1
  - System.Object.InnerLibs.JsonViewer.CreateNode
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  - System.Object.InnerLibs.Text.SerializeJSON(System.String)
  - System.Object.InnerLibs.Verify.IsNumber
  - System.Object.InnerLibs.Verify.IsNotNumber
  - System.Object.InnerLibs.Verify.IfBlank``1({T})
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlElement,System.Boolean})
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlElement)
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlElement,{TextType}},System.Func{InnerLibs.HtmlParser.HtmlElement,{ValueType}})
  - System.Object.InnerLibs.WinForms.GetCastedValue
  - System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  - InnerLibs.HtmlParser.HtmlElement.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement,System.Func{InnerLibs.HtmlParser.HtmlElement,System.Object}[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InnerLibs.HtmlParser.HtmlElement.mAttributes
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mAttributes
  id: mAttributes
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: mAttributes
  nameWithType: HtmlElement.mAttributes
  fullName: InnerLibs.HtmlParser.HtmlElement.mAttributes
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: mAttributes
    path: htmlparser/HtmlElement.vb
    startLine: 84
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: protected HtmlAttributeCollection mAttributes
    return:
      type: InnerLibs.HtmlParser.HtmlAttributeCollection
    content.vb: Protected mAttributes As HtmlAttributeCollection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  id: mIsExplicitlyTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: mIsExplicitlyTerminated
  nameWithType: HtmlElement.mIsExplicitlyTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: mIsExplicitlyTerminated
    path: htmlparser/HtmlElement.vb
    startLine: 85
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: protected bool mIsExplicitlyTerminated
    return:
      type: System.Boolean
    content.vb: Protected mIsExplicitlyTerminated As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  id: mIsTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: mIsTerminated
  nameWithType: HtmlElement.mIsTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: mIsTerminated
    path: htmlparser/HtmlElement.vb
    startLine: 86
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: protected bool mIsTerminated
    return:
      type: System.Boolean
    content.vb: Protected mIsTerminated As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.HtmlParser.HtmlElement.mName
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mName
  id: mName
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: mName
  nameWithType: HtmlElement.mName
  fullName: InnerLibs.HtmlParser.HtmlElement.mName
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: mName
    path: htmlparser/HtmlElement.vb
    startLine: 87
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: protected string mName
    return:
      type: System.String
    content.vb: Protected mName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.HtmlParser.HtmlElement.mNodes
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mNodes
  id: mNodes
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: mNodes
  nameWithType: HtmlElement.mNodes
  fullName: InnerLibs.HtmlParser.HtmlElement.mNodes
  type: Field
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: mNodes
    path: htmlparser/HtmlElement.vb
    startLine: 88
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: protected HtmlNodeCollection mNodes
    return:
      type: InnerLibs.HtmlParser.HtmlNodeCollection
    content.vb: Protected mNodes As HtmlNodeCollection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: InnerLibs.HtmlParser.HtmlElement.#ctor(System.String,System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HtmlElement(String, String)
  nameWithType: HtmlElement.HtmlElement(String, String)
  fullName: InnerLibs.HtmlParser.HtmlElement.HtmlElement(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: .ctor
    path: htmlparser/HtmlElement.vb
    startLine: 96
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis constructs a new HTML element with the specified tag name.\n"
  example: []
  syntax:
    content: public HtmlElement(string name, string InnerHtml = "")
    parameters:
    - id: name
      type: System.String
      description: The name of this element
    - id: InnerHtml
      type: System.String
    content.vb: Public Sub New(name As String, InnerHtml As String = "")
  overload: InnerLibs.HtmlParser.HtmlElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.#ctor(InnerLibs.HtmlParser.HtmlElement)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.#ctor(InnerLibs.HtmlParser.HtmlElement)
  id: '#ctor(InnerLibs.HtmlParser.HtmlElement)'
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HtmlElement(HtmlElement)
  nameWithType: HtmlElement.HtmlElement(HtmlElement)
  fullName: InnerLibs.HtmlParser.HtmlElement.HtmlElement(InnerLibs.HtmlParser.HtmlElement)
  type: Constructor
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: .ctor
    path: htmlparser/HtmlElement.vb
    startLine: 112
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis constructs a new HTML element using a <xref href=\"InnerLibs.HtmlParser.HtmlElement\" data-throw-if-not-resolved=\"false\"></xref> as source.\n"
  example: []
  syntax:
    content: public HtmlElement(HtmlElement Element)
    parameters:
    - id: Element
      type: InnerLibs.HtmlParser.HtmlElement
      description: The htmlelement
    content.vb: Public Sub New(Element As HtmlElement)
  overload: InnerLibs.HtmlParser.HtmlElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.#ctor(System.Web.UI.HtmlControls.HtmlGenericControl)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.#ctor(System.Web.UI.HtmlControls.HtmlGenericControl)
  id: '#ctor(System.Web.UI.HtmlControls.HtmlGenericControl)'
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HtmlElement(HtmlGenericControl)
  nameWithType: HtmlElement.HtmlElement(HtmlGenericControl)
  fullName: InnerLibs.HtmlParser.HtmlElement.HtmlElement(System.Web.UI.HtmlControls.HtmlGenericControl)
  type: Constructor
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: .ctor
    path: htmlparser/HtmlElement.vb
    startLine: 123
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis constructs a new HTML element using a <xref href=\"System.Web.UI.HtmlControls.HtmlGenericControl\" data-throw-if-not-resolved=\"false\"></xref> as source.\n"
  example: []
  syntax:
    content: public HtmlElement(HtmlGenericControl HtmlControl)
    parameters:
    - id: HtmlControl
      type: System.Web.UI.HtmlControls.HtmlGenericControl
      description: The server control
    content.vb: Public Sub New(HtmlControl As HtmlGenericControl)
  overload: InnerLibs.HtmlParser.HtmlElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  id: Children(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Children(String)
  nameWithType: HtmlElement.Children(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Children
    path: htmlparser/HtmlElement.vb
    startLine: 135
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the first child element thats match de CssSelector\n"
  example: []
  syntax:
    content: public HtmlElement Children(string CssSelector = "")
    parameters:
    - id: CssSelector
      type: System.String
      description: ''
    return:
      type: InnerLibs.HtmlParser.HtmlElement
      description: ''
    content.vb: Public Function Children(CssSelector As String = "") As HtmlElement
  overload: InnerLibs.HtmlParser.HtmlElement.Children*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  id: Children``1(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Children<ElementType>(String)
  nameWithType: HtmlElement.Children<ElementType>(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Children<ElementType>(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Children
    path: htmlparser/HtmlElement.vb
    startLine: 147
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the first child element thats match de CssSelector or first child element of specific type if CssSelector is blank\n"
  example: []
  syntax:
    content: >-
      public ElementType Children<ElementType>(string CssSelector = "")
          where ElementType : HtmlElement
    parameters:
    - id: CssSelector
      type: System.String
      description: ''
    typeParameters:
    - id: ElementType
    return:
      type: '{ElementType}'
      description: ''
    content.vb: Public Function Children(Of ElementType As HtmlElement)(CssSelector As String = "") As ElementType
  overload: InnerLibs.HtmlParser.HtmlElement.Children*
  nameWithType.vb: HtmlElement.Children(Of ElementType)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Children(Of ElementType)(System.String)
  name.vb: Children(Of ElementType)(String)
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  id: AddNode(InnerLibs.HtmlParser.HtmlNode[])
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: AddNode(HtmlNode[])
  nameWithType: HtmlElement.AddNode(HtmlNode[])
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: AddNode
    path: htmlparser/HtmlElement.vb
    startLine: 164
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nAdd a node (or nodes) to collection\n"
  example: []
  syntax:
    content: public void AddNode(params HtmlNode[] Node)
    parameters:
    - id: Node
      type: InnerLibs.HtmlParser.HtmlNode[]
      description: ''
    content.vb: Public Sub AddNode(ParamArray Node As HtmlNode())
  overload: InnerLibs.HtmlParser.HtmlElement.AddNode*
  nameWithType.vb: HtmlElement.AddNode(HtmlNode())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode())
  name.vb: AddNode(HtmlNode())
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  id: AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: AddNode(HtmlGenericControl)
  nameWithType: HtmlElement.AddNode(HtmlGenericControl)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: AddNode
    path: htmlparser/HtmlElement.vb
    startLine: 173
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nAdd a node to collection using an <xref href=\"System.Web.UI.HtmlControls.HtmlGenericControl\" data-throw-if-not-resolved=\"false\"></xref> as base\n"
  example: []
  syntax:
    content: public void AddNode(HtmlGenericControl Node)
    parameters:
    - id: Node
      type: System.Web.UI.HtmlControls.HtmlGenericControl
      description: ''
    content.vb: Public Sub AddNode(Node As HtmlGenericControl)
  overload: InnerLibs.HtmlParser.HtmlElement.AddNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  id: AddNode(System.String,System.Int32)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: AddNode(String, Int32)
  nameWithType: HtmlElement.AddNode(String, Int32)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: AddNode
    path: htmlparser/HtmlElement.vb
    startLine: 182
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nAdd a node to collection using a HTML string as base\n"
  example: []
  syntax:
    content: public void AddNode(string HTML, int Index = 0)
    parameters:
    - id: HTML
      type: System.String
      description: ''
    - id: Index
      type: System.Int32
      description: ''
    content.vb: Public Sub AddNode(HTML As String, Index As Integer = 0)
  overload: InnerLibs.HtmlParser.HtmlElement.AddNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Clone
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Clone
  id: Clone
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HtmlElement.Clone()
  fullName: InnerLibs.HtmlParser.HtmlElement.Clone()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Clone
    path: htmlparser/HtmlElement.vb
    startLine: 190
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nClone this element into a new HtmlElement\n"
  example: []
  syntax:
    content: public HtmlElement Clone()
    return:
      type: InnerLibs.HtmlParser.HtmlElement
      description: ''
    content.vb: Public Function Clone As HtmlElement
  overload: InnerLibs.HtmlParser.HtmlElement.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  id: SideClone(System.Int32)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: SideClone(Int32)
  nameWithType: HtmlElement.SideClone(Int32)
  fullName: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: SideClone
    path: htmlparser/HtmlElement.vb
    startLine: 198
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nClone this element into a new HtmlElement and inserts into same parent\n"
  example: []
  syntax:
    content: public void SideClone(int Index = -1)
    parameters:
    - id: Index
      type: System.Int32
      description: The position of clone element. Use -1 to insert in the same position of the original element
    content.vb: Public Sub SideClone(Index As Integer = -1)
  overload: InnerLibs.HtmlParser.HtmlElement.SideClone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ChildElements
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ChildElements
  id: ChildElements
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ChildElements
  nameWithType: HtmlElement.ChildElements
  fullName: InnerLibs.HtmlParser.HtmlElement.ChildElements
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ChildElements
    path: htmlparser/HtmlElement.vb
    startLine: 210
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the child elements of this element (excluding HtmlText)\n"
  example: []
  syntax:
    content: public IEnumerable<HtmlElement> ChildElements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}
      description: ''
    content.vb: Public ReadOnly Property ChildElements As IEnumerable(Of HtmlElement)
  overload: InnerLibs.HtmlParser.HtmlElement.ChildElements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.ContentText
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ContentText
  id: ContentText
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ContentText
  nameWithType: HtmlElement.ContentText
  fullName: InnerLibs.HtmlParser.HtmlElement.ContentText
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ContentText
    path: htmlparser/HtmlElement.vb
    startLine: 221
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn thedirect child text of this element (excluding HtmlElement)\n"
  example: []
  syntax:
    content: public IEnumerable<HtmlText> ContentText { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlText}
      description: ''
    content.vb: Public ReadOnly Property ContentText As IEnumerable(Of HtmlText)
  overload: InnerLibs.HtmlParser.HtmlElement.ContentText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  id: IsExplicitlyTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: IsExplicitlyTerminated
  nameWithType: HtmlElement.IsExplicitlyTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: IsExplicitlyTerminated
    path: htmlparser/HtmlElement.vb
    startLine: 231
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis flag indicates that the element is explicitly closed using the /name method.\n"
  example: []
  syntax:
    content: public bool IsExplicitlyTerminated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsExplicitlyTerminated As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.IsTerminated
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsTerminated
  id: IsTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: IsTerminated
  nameWithType: HtmlElement.IsTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsTerminated
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: IsTerminated
    path: htmlparser/HtmlElement.vb
    startLine: 242
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public bool IsTerminated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTerminated As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.IsTerminated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Title
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Title
  id: Title
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: HtmlElement.Title
  fullName: InnerLibs.HtmlParser.HtmlElement.Title
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Title
    path: htmlparser/HtmlElement.vb
    startLine: 260
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nGets or sets the Title attribute of this element\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Property Title As String
  overload: InnerLibs.HtmlParser.HtmlElement.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Class
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Class
  id: Class
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: HtmlElement.Class
  fullName: InnerLibs.HtmlParser.HtmlElement.Class
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Class
    path: htmlparser/HtmlElement.vb
    startLine: 274
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nGets os sets a boolean value for toggle an specific class\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ExpandableObjectConverter))]

      public ClassList Class { get; }
    parameters: []
    return:
      type: InnerLibs.HtmlParser.ClassList
      description: ''
    content.vb: >-
      <TypeConverter(GetType(ExpandableObjectConverter))>

      Public ReadOnly Property Class As ClassList
  overload: InnerLibs.HtmlParser.HtmlElement.Class*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.Attributes
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Attributes
  id: Attributes
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: HtmlElement.Attributes
  fullName: InnerLibs.HtmlParser.HtmlElement.Attributes
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Attributes
    path: htmlparser/HtmlElement.vb
    startLine: 280
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis is the collection of attributes associated with this element.\n"
  example: []
  syntax:
    content: public HtmlAttributeCollection Attributes { get; }
    parameters: []
    return:
      type: InnerLibs.HtmlParser.HtmlAttributeCollection
    content.vb: Public ReadOnly Property Attributes As HtmlAttributeCollection
  overload: InnerLibs.HtmlParser.HtmlElement.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.AttributesNames
  commentId: P:InnerLibs.HtmlParser.HtmlElement.AttributesNames
  id: AttributesNames
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: AttributesNames
  nameWithType: HtmlElement.AttributesNames
  fullName: InnerLibs.HtmlParser.HtmlElement.AttributesNames
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: AttributesNames
    path: htmlparser/HtmlElement.vb
    startLine: 291
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the name of al attributes\n"
  example: []
  syntax:
    content: public IEnumerable<string> AttributesNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    content.vb: Public ReadOnly Property AttributesNames As IEnumerable(Of String)
  overload: InnerLibs.HtmlParser.HtmlElement.AttributesNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.Disabled
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Disabled
  id: Disabled
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Disabled
  nameWithType: HtmlElement.Disabled
  fullName: InnerLibs.HtmlParser.HtmlElement.Disabled
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Disabled
    path: htmlparser/HtmlElement.vb
    startLine: 302
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nGets os sets a value indicating thats element is disabled\n"
  example: []
  syntax:
    content: public bool Disabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Property Disabled As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.Disabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  id: ElementRepresentation
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ElementRepresentation
  nameWithType: HtmlElement.ElementRepresentation
  fullName: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ElementRepresentation
    path: htmlparser/HtmlElement.vb
    startLine: 319
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis will return the HTML representation of this element.\n"
  example: []
  syntax:
    content: public override string ElementRepresentation { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides ReadOnly Property ElementRepresentation As String
  overridden: InnerLibs.HtmlParser.HtmlNode.ElementRepresentation
  overload: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.HTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.HTML
  id: HTML
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HTML
  nameWithType: HtmlElement.HTML
  fullName: InnerLibs.HtmlParser.HtmlElement.HTML
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: HTML
    path: htmlparser/HtmlElement.vb
    startLine: 335
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis will return the HTML for this element and all subnodes.\n"
  example: []
  syntax:
    content: public override string HTML { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property HTML As String
  overridden: InnerLibs.HtmlParser.HtmlNode.HTML
  overload: InnerLibs.HtmlParser.HtmlElement.HTML*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.ID
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ID
  id: ID
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: HtmlElement.ID
  fullName: InnerLibs.HtmlParser.HtmlElement.ID
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ID
    path: htmlparser/HtmlElement.vb
    startLine: 366
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThe ID of element\n"
  example: []
  syntax:
    content: public string ID { get; set; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Property ID As String
  overload: InnerLibs.HtmlParser.HtmlElement.ID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.InnerHTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.InnerHTML
  id: InnerHTML
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: InnerHTML
  nameWithType: HtmlElement.InnerHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerHTML
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: InnerHTML
    path: htmlparser/HtmlElement.vb
    startLine: 384
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn a html string of child nodes\n"
  example: []
  syntax:
    content: public string InnerHTML { get; set; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Property InnerHTML As String
  overload: InnerLibs.HtmlParser.HtmlElement.InnerHTML*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.InnerText
  commentId: P:InnerLibs.HtmlParser.HtmlElement.InnerText
  id: InnerText
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerText
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: InnerText
    path: htmlparser/HtmlElement.vb
    startLine: 407
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public string InnerText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InnerText As String
  overload: InnerLibs.HtmlParser.HtmlElement.InnerText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.IsVisible
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsVisible
  id: IsVisible
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: HtmlElement.IsVisible
  fullName: InnerLibs.HtmlParser.HtmlElement.IsVisible
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: IsVisible
    path: htmlparser/HtmlElement.vb
    startLine: 445
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public bool IsVisible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVisible As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.IsVisible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.Name
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Name
  id: Name
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HtmlElement.Name
  fullName: InnerLibs.HtmlParser.HtmlElement.Name
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Name
    path: htmlparser/HtmlElement.vb
    startLine: 454
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis is the tag name of the element. e.g. BR, BODY, TABLE etc.\n"
  example: []
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: InnerLibs.HtmlParser.HtmlElement.Name*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: InnerLibs.HtmlParser.HtmlElement.Nodes
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Nodes
  id: Nodes
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: HtmlElement.Nodes
  fullName: InnerLibs.HtmlParser.HtmlElement.Nodes
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Nodes
    path: htmlparser/HtmlElement.vb
    startLine: 468
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis is the collection of all child nodes of this one. If this node is actually a text\nnode, this will return nothing.\n"
  example: []
  syntax:
    content: public virtual HtmlNodeCollection Nodes { get; }
    parameters: []
    return:
      type: InnerLibs.HtmlParser.HtmlNodeCollection
    content.vb: Public Overridable ReadOnly Property Nodes As HtmlNodeCollection
  overload: InnerLibs.HtmlParser.HtmlElement.Nodes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.Style
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Style
  id: Style
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: HtmlElement.Style
  fullName: InnerLibs.HtmlParser.HtmlElement.Style
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Style
    path: htmlparser/HtmlElement.vb
    startLine: 482
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThe CSS style of element\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(ExpandableObjectConverter))]

      public CssProperties Style { get; }
    parameters: []
    return:
      type: InnerLibs.HtmlParser.CssProperties
      description: ''
    content.vb: >-
      <TypeConverter(GetType(ExpandableObjectConverter))>

      Public ReadOnly Property Style As CssProperties
  overload: InnerLibs.HtmlParser.HtmlElement.Style*
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ComponentModel.ExpandableObjectConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.XHTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.XHTML
  id: XHTML
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: XHTML
  nameWithType: HtmlElement.XHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.XHTML
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: XHTML
    path: htmlparser/HtmlElement.vb
    startLine: 488
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis will return the XHTML for this element and all subnodes.\n"
  example: []
  syntax:
    content: public override string XHTML { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property XHTML As String
  overridden: InnerLibs.HtmlParser.HtmlNode.XHTML
  overload: InnerLibs.HtmlParser.HtmlElement.XHTML*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  id: QuerySelectorAll(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: QuerySelectorAll[String]
  nameWithType: HtmlElement.QuerySelectorAll[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll[System.String]
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: QuerySelectorAll
    path: htmlparser/HtmlElement.vb
    startLine: 527
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nTravesse element with a CSS selector an retireve nodes\n"
  example: []
  syntax:
    content: public HtmlNodeCollection this[string CssSelector] { get; }
    parameters:
    - id: CssSelector
      type: System.String
      description: Teh CSS selector
    return:
      type: InnerLibs.HtmlParser.HtmlNodeCollection
      description: ''
    content.vb: Public ReadOnly Property QuerySelectorAll(CssSelector As String) As HtmlNodeCollection
  overload: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll*
  nameWithType.vb: HtmlElement.QuerySelectorAll(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  name.vb: QuerySelectorAll(String)
- uid: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  id: Data(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Data[String]
  nameWithType: HtmlElement.Data[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.Data[System.String]
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Data
    path: htmlparser/HtmlElement.vb
    startLine: 538
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the value of specific data-attribute\n"
  example: []
  syntax:
    content: public string Data { get; set; }
    parameters:
    - id: Name
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Property Data(Name As String) As String
  overload: InnerLibs.HtmlParser.HtmlElement.Data*
  nameWithType.vb: HtmlElement.Data(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  name.vb: Data(String)
- uid: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  id: Attribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Attribute[String]
  nameWithType: HtmlElement.Attribute[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.Attribute[System.String]
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Attribute
    path: htmlparser/HtmlElement.vb
    startLine: 559
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the value of specific attibute\n"
  example: []
  syntax:
    content: public string Attribute { get; set; }
    parameters:
    - id: Name
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Property Attribute(Name As String) As String
  overload: InnerLibs.HtmlParser.HtmlElement.Attribute*
  nameWithType.vb: HtmlElement.Attribute(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  name.vb: Attribute(String)
- uid: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: AddAttribute(String, String)
  nameWithType: HtmlElement.AddAttribute(String, String)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: AddAttribute
    path: htmlparser/HtmlElement.vb
    startLine: 595
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nAdd a attribute to this element\n"
  example: []
  syntax:
    content: public HtmlElement AddAttribute(string Name, string Value = null)
    parameters:
    - id: Name
      type: System.String
      description: ''
    - id: Value
      type: System.String
      description: ''
    return:
      type: InnerLibs.HtmlParser.HtmlElement
      description: ''
    content.vb: Public Function AddAttribute(Name As String, Value As String = Nothing) As HtmlElement
  overload: InnerLibs.HtmlParser.HtmlElement.AddAttribute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  id: Censor(System.Char,System.String[])
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Censor(Char, String[])
  nameWithType: HtmlElement.Censor(Char, String[])
  fullName: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char, System.String[])
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Censor
    path: htmlparser/HtmlElement.vb
    startLine: 606
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReplaceFrom Badwords in all text elements.\n"
  example: []
  syntax:
    content: public override bool Censor(char CensorChar, params string[] BadWords)
    parameters:
    - id: CensorChar
      type: System.Char
      description: ''
    - id: BadWords
      type: System.String[]
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Censor(CensorChar As Char, ParamArray BadWords As String()) As Boolean
  overridden: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char,System.String[])
  overload: InnerLibs.HtmlParser.HtmlElement.Censor*
  nameWithType.vb: HtmlElement.Censor(Char, String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char, System.String())
  name.vb: Censor(Char, String())
- uid: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  commentId: M:InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  id: CreateWebFormControl``1
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: CreateWebFormControl<Type>()
  nameWithType: HtmlElement.CreateWebFormControl<Type>()
  fullName: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl<Type>()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: CreateWebFormControl
    path: htmlparser/HtmlElement.vb
    startLine: 615
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nCreate a <xref href=\"System.Web.UI.HtmlControls.HtmlControl\" data-throw-if-not-resolved=\"false\"></xref> using this <xref href=\"InnerLibs.HtmlParser.HtmlElement\" data-throw-if-not-resolved=\"false\"></xref> as source\n"
  example: []
  syntax:
    content: >-
      public Type CreateWebFormControl<Type>()
          where Type : HtmlControl
    typeParameters:
    - id: Type
      description: ''
    return:
      type: '{Type}'
      description: ''
    content.vb: Public Function CreateWebFormControl(Of Type As HtmlControl) As Type
  overload: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl*
  nameWithType.vb: HtmlElement.CreateWebFormControl(Of Type)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl(Of Type)()
  name.vb: CreateWebFormControl(Of Type)()
- uid: InnerLibs.HtmlParser.HtmlElement.Destroy
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Destroy
  id: Destroy
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: HtmlElement.Destroy()
  fullName: InnerLibs.HtmlParser.HtmlElement.Destroy()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Destroy
    path: htmlparser/HtmlElement.vb
    startLine: 627
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nRemove this element from parent element. If parent element is null, nothing happens\n"
  example: []
  syntax:
    content: public bool Destroy()
    return:
      type: System.Boolean
    content.vb: Public Function Destroy As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.Destroy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  id: FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  nameWithType: HtmlElement.FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.FindElements<NodeType>(System.Func<NodeType, System.Boolean>, System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: FindElements
    path: htmlparser/HtmlElement.vb
    startLine: 643
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis will search though this collection of nodes for all elements with matchs the predicate.\n"
  example: []
  syntax:
    content: >-
      public HtmlNodeCollection FindElements<NodeType>(Func<NodeType, bool> predicate, bool SearchChildren = true)
          where NodeType : HtmlNode
    parameters:
    - id: predicate
      type: System.Func{{NodeType},System.Boolean}
      description: The predicate to match the nodes
    - id: SearchChildren
      type: System.Boolean
      description: Travesse the child nodes
    typeParameters:
    - id: NodeType
      description: Type of Node ( <xref href="InnerLibs.HtmlParser.HtmlElement" data-throw-if-not-resolved="false"></xref> or <xref href="InnerLibs.HtmlParser.HtmlText" data-throw-if-not-resolved="false"></xref>)
    return:
      type: InnerLibs.HtmlParser.HtmlNodeCollection
      description: ''
    content.vb: Public Function FindElements(Of NodeType As HtmlNode)(predicate As Func(Of NodeType, Boolean), SearchChildren As Boolean = True) As HtmlNodeCollection
  overload: InnerLibs.HtmlParser.HtmlElement.FindElements*
  nameWithType.vb: HtmlElement.FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.FindElements(Of NodeType)(System.Func(Of NodeType, System.Boolean), System.Boolean)
  name.vb: FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
- uid: InnerLibs.HtmlParser.HtmlElement.FixText
  commentId: M:InnerLibs.HtmlParser.HtmlElement.FixText
  id: FixText
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: FixText()
  nameWithType: HtmlElement.FixText()
  fullName: InnerLibs.HtmlParser.HtmlElement.FixText()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: FixText
    path: htmlparser/HtmlElement.vb
    startLine: 650
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nFix the punctuation, white spaces and captalization of the child text elements\n"
  example: []
  syntax:
    content: public override void FixText()
    content.vb: Public Overrides Sub FixText
  overridden: InnerLibs.HtmlParser.HtmlNode.FixText
  overload: InnerLibs.HtmlParser.HtmlElement.FixText*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  id: GetTextElements(System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: GetTextElements(Boolean)
  nameWithType: HtmlElement.GetTextElements(Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: GetTextElements
    path: htmlparser/HtmlElement.vb
    startLine: 679
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturns all Text elements excluding style and script elements\n"
  example: []
  syntax:
    content: public HtmlNodeCollection GetTextElements(bool SearchChildren = true)
    parameters:
    - id: SearchChildren
      type: System.Boolean
    return:
      type: InnerLibs.HtmlParser.HtmlNodeCollection
    content.vb: Public Function GetTextElements(SearchChildren As Boolean = True) As HtmlNodeCollection
  overload: InnerLibs.HtmlParser.HtmlElement.GetTextElements*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  id: HasAttribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HasAttribute(String)
  nameWithType: HtmlElement.HasAttribute(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: HasAttribute
    path: htmlparser/HtmlElement.vb
    startLine: 688
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nVerify if this element has an specific attribute\n"
  example: []
  syntax:
    content: public bool HasAttribute(string Name)
    parameters:
    - id: Name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasAttribute(Name As String) As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.HasAttribute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  id: HasClass(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: HasClass(String)
  nameWithType: HtmlElement.HasClass(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: HasClass
    path: htmlparser/HtmlElement.vb
    startLine: 697
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nVerify if this element has an specific class\n"
  example: []
  syntax:
    content: public bool HasClass(string ClassName = "")
    parameters:
    - id: ClassName
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasClass(ClassName As String = "") As Boolean
  overload: InnerLibs.HtmlParser.HtmlElement.HasClass*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  id: Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Mutate(HtmlNodeCollection)
  nameWithType: HtmlElement.Mutate(HtmlNodeCollection)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Mutate
    path: htmlparser/HtmlElement.vb
    startLine: 705
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nTransform the current element into a new set of elements\n"
  example: []
  syntax:
    content: public void Mutate(HtmlNodeCollection Elements)
    parameters:
    - id: Elements
      type: InnerLibs.HtmlParser.HtmlNodeCollection
      description: Collection of new elements
    content.vb: Public Sub Mutate(Elements As HtmlNodeCollection)
  overload: InnerLibs.HtmlParser.HtmlElement.Mutate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  id: Mutate(InnerLibs.HtmlParser.HtmlElement)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Mutate(HtmlElement)
  nameWithType: HtmlElement.Mutate(HtmlElement)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Mutate
    path: htmlparser/HtmlElement.vb
    startLine: 713
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nTransform the current element into a new element\n"
  example: []
  syntax:
    content: public void Mutate(HtmlElement Element)
    parameters:
    - id: Element
      type: InnerLibs.HtmlParser.HtmlElement
      description: New element
    content.vb: Public Sub Mutate(Element As HtmlElement)
  overload: InnerLibs.HtmlParser.HtmlElement.Mutate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  id: Mutate(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: Mutate(String)
  nameWithType: HtmlElement.Mutate(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Mutate
    path: htmlparser/HtmlElement.vb
    startLine: 726
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nTransform the current element into a new element or set of elements using a html string\nas source\n"
  example: []
  syntax:
    content: public void Mutate(string Html)
    parameters:
    - id: Html
      type: System.String
      description: Html String
    content.vb: Public Sub Mutate(Html As String)
  overload: InnerLibs.HtmlParser.HtmlElement.Mutate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  id: ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ParseEmoji(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseEmoji(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func<System.String, System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ParseEmoji
    path: htmlparser/HtmlElement.vb
    startLine: 740
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nFind :emoji: and replace then using specific method\n"
  example: []
  syntax:
    content: public void ParseEmoji(Func<string, string> Method = null, bool SearchChildren = true)
    parameters:
    - id: Method
      type: System.Func{System.String,System.String}
      description: ''
    - id: SearchChildren
      type: System.Boolean
      description: ''
    content.vb: Public Sub ParseEmoji(Method As Func(Of String, String) = Nothing, SearchChildren As Boolean = True)
  overload: InnerLibs.HtmlParser.HtmlElement.ParseEmoji*
  nameWithType.vb: HtmlElement.ParseEmoji(Func(Of String, String), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseEmoji(Func(Of String, String), Boolean)
- uid: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  id: ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ParseHashTags(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseHashTags(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func<System.String, System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ParseHashTags
    path: htmlparser/HtmlElement.vb
    startLine: 744
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public void ParseHashTags(Func<string, string> Method, bool SearchChildren = true)
    parameters:
    - id: Method
      type: System.Func{System.String,System.String}
    - id: SearchChildren
      type: System.Boolean
    content.vb: Public Sub ParseHashTags(Method As Func(Of String, String), SearchChildren As Boolean = True)
  overload: InnerLibs.HtmlParser.HtmlElement.ParseHashTags*
  nameWithType.vb: HtmlElement.ParseHashTags(Func(Of String, String), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseHashTags(Func(Of String, String), Boolean)
- uid: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  id: ParseOEmbed(System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ParseOEmbed(Boolean)
  nameWithType: HtmlElement.ParseOEmbed(Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ParseOEmbed
    path: htmlparser/HtmlElement.vb
    startLine: 752
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nFind URLs out of Anchor elements and replace then to their respective oEmbed\n"
  example: []
  syntax:
    content: public void ParseOEmbed(bool SearchChildren = true)
    parameters:
    - id: SearchChildren
      type: System.Boolean
      description: ''
    content.vb: Public Sub ParseOEmbed(SearchChildren As Boolean = True)
  overload: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  id: ParseURL(System.Boolean,System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ParseURL(Boolean, String)
  nameWithType: HtmlElement.ParseURL(Boolean, String)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ParseURL
    path: htmlparser/HtmlElement.vb
    startLine: 774
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nFind URLs out of Anchor elements and replace then to anchors\n"
  example: []
  syntax:
    content: public void ParseURL(bool SearchChildren = true, string Target = "_self")
    parameters:
    - id: SearchChildren
      type: System.Boolean
      description: ''
    - id: Target
      type: System.String
    content.vb: Public Sub ParseURL(SearchChildren As Boolean = True, Target As String = "_self")
  overload: InnerLibs.HtmlParser.HtmlElement.ParseURL*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  id: ParseUsername(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ParseUsername(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseUsername(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func<System.String, System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ParseUsername
    path: htmlparser/HtmlElement.vb
    startLine: 793
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nFind @mentions and replace then using specific method\n"
  example: []
  syntax:
    content: public void ParseUsername(Func<string, string> Method, bool SearchChildren = true)
    parameters:
    - id: Method
      type: System.Func{System.String,System.String}
      description: ''
    - id: SearchChildren
      type: System.Boolean
      description: ''
    content.vb: Public Sub ParseUsername(Method As Func(Of String, String), SearchChildren As Boolean = True)
  overload: InnerLibs.HtmlParser.HtmlElement.ParseUsername*
  nameWithType.vb: HtmlElement.ParseUsername(Func(Of String, String), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseUsername(Func(Of String, String), Boolean)
- uid: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  id: RemoveAttribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: RemoveAttribute(String)
  nameWithType: HtmlElement.RemoveAttribute(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: RemoveAttribute
    path: htmlparser/HtmlElement.vb
    startLine: 801
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nRemove an attribute from element\n"
  example: []
  syntax:
    content: public HtmlElement RemoveAttribute(string Name)
    parameters:
    - id: Name
      type: System.String
      description: ''
    return:
      type: InnerLibs.HtmlParser.HtmlElement
    content.vb: Public Function RemoveAttribute(Name As String) As HtmlElement
  overload: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlElement.ToString
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ToString
  id: ToString
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HtmlElement.ToString()
  fullName: InnerLibs.HtmlParser.HtmlElement.ToString()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ToString
    path: htmlparser/HtmlElement.vb
    startLine: 812
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nThis will return the HTML representation of this element.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: InnerLibs.HtmlParser.HtmlNode.ToString
  overload: InnerLibs.HtmlParser.HtmlElement.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  id: ToXmlElement
  parent: InnerLibs.HtmlParser.HtmlElement
  langs:
  - csharp
  - vb
  name: ToXmlElement()
  nameWithType: HtmlElement.ToXmlElement()
  fullName: InnerLibs.HtmlParser.HtmlElement.ToXmlElement()
  type: Method
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: ToXmlElement
    path: htmlparser/HtmlElement.vb
    startLine: 820
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  summary: "\nReturn the <xref href=\"System.Xml.XmlElement\" data-throw-if-not-resolved=\"false\"></xref> equivalent to this node\n"
  example: []
  syntax:
    content: public XmlElement ToXmlElement()
    return:
      type: System.Xml.XmlElement
      description: ''
    content.vb: Public Function ToXmlElement As XmlElement
  overload: InnerLibs.HtmlParser.HtmlElement.ToXmlElement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: InnerLibs.HtmlParser
  commentId: N:InnerLibs.HtmlParser
  name: InnerLibs.HtmlParser
  nameWithType: InnerLibs.HtmlParser
  fullName: InnerLibs.HtmlParser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: InnerLibs.HtmlParser.HtmlNode
  commentId: T:InnerLibs.HtmlParser.HtmlNode
  parent: InnerLibs.HtmlParser
  name: HtmlNode
  nameWithType: HtmlNode
  fullName: InnerLibs.HtmlParser.HtmlNode
- uid: InnerLibs.HtmlParser.HtmlNode.mParent
  commentId: F:InnerLibs.HtmlParser.HtmlNode.mParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: mParent
  nameWithType: HtmlNode.mParent
  fullName: InnerLibs.HtmlParser.HtmlNode.mParent
- uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
  commentId: M:InnerLibs.HtmlParser.HtmlNode.ToJSON
  parent: InnerLibs.HtmlParser.HtmlNode
  name: ToJSON()
  nameWithType: HtmlNode.ToJSON()
  fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
    name: ToJSON
    nameWithType: HtmlNode.ToJSON
    fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
    name: ToJSON
    nameWithType: HtmlNode.ToJSON
    fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  commentId: P:InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  parent: InnerLibs.HtmlParser.HtmlNode
  name: JsonRepresentation
  nameWithType: HtmlNode.JsonRepresentation
  fullName: InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
- uid: InnerLibs.HtmlParser.HtmlNode.Next
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Next
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Next
  nameWithType: HtmlNode.Next
  fullName: InnerLibs.HtmlParser.HtmlNode.Next
- uid: InnerLibs.HtmlParser.HtmlNode.FirstChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.FirstChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: FirstChild
  nameWithType: HtmlNode.FirstChild
  fullName: InnerLibs.HtmlParser.HtmlNode.FirstChild
- uid: InnerLibs.HtmlParser.HtmlNode.AsElement
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsElement
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsElement()
  nameWithType: HtmlNode.AsElement()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsElement()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement
    name: AsElement
    nameWithType: HtmlNode.AsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement
    name: AsElement
    nameWithType: HtmlNode.AsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsElement``1
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsElement<ElementType>()
  nameWithType: HtmlNode.AsElement<ElementType>()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsElement<ElementType>()
  nameWithType.vb: HtmlNode.AsElement(Of ElementType)()
  fullName.vb: InnerLibs.HtmlParser.HtmlNode.AsElement(Of ElementType)()
  name.vb: AsElement(Of ElementType)()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
    name: AsElement<ElementType>
    nameWithType: HtmlNode.AsElement<ElementType>
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement<ElementType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
    name: AsElement(Of ElementType)
    nameWithType: HtmlNode.AsElement(Of ElementType)
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement(Of ElementType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.AsText
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsText
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsText()
  nameWithType: HtmlNode.AsText()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsText
    name: AsText
    nameWithType: HtmlNode.AsText
    fullName: InnerLibs.HtmlParser.HtmlNode.AsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsText
    name: AsText
    nameWithType: HtmlNode.AsText
    fullName: InnerLibs.HtmlParser.HtmlNode.AsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Index
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Index
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Index
  nameWithType: HtmlNode.Index
  fullName: InnerLibs.HtmlParser.HtmlNode.Index
- uid: InnerLibs.HtmlParser.HtmlNode.IsChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsChild
  nameWithType: HtmlNode.IsChild
  fullName: InnerLibs.HtmlParser.HtmlNode.IsChild
- uid: InnerLibs.HtmlParser.HtmlNode.IsParent
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsParent
  nameWithType: HtmlNode.IsParent
  fullName: InnerLibs.HtmlParser.HtmlNode.IsParent
- uid: InnerLibs.HtmlParser.HtmlNode.IsRoot
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsRoot
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsRoot
  nameWithType: HtmlNode.IsRoot
  fullName: InnerLibs.HtmlParser.HtmlNode.IsRoot
- uid: InnerLibs.HtmlParser.HtmlNode.LastChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.LastChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: LastChild
  nameWithType: HtmlNode.LastChild
  fullName: InnerLibs.HtmlParser.HtmlNode.LastChild
- uid: InnerLibs.HtmlParser.HtmlNode.Parent
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Parent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Parent
  nameWithType: HtmlNode.Parent
  fullName: InnerLibs.HtmlParser.HtmlNode.Parent
- uid: InnerLibs.HtmlParser.HtmlNode.Previous
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Previous
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Previous
  nameWithType: HtmlNode.Previous
  fullName: InnerLibs.HtmlParser.HtmlNode.Previous
- uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: AppendTo(HtmlElement, Boolean)
  nameWithType: HtmlNode.AppendTo(HtmlElement, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
    name: AppendTo
    nameWithType: HtmlNode.AppendTo
    fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
    name: AppendTo
    nameWithType: HtmlNode.AppendTo
    fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: Closest(String)
  nameWithType: HtmlNode.Closest(String)
  fullName: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
    name: Closest
    nameWithType: HtmlNode.Closest
    fullName: InnerLibs.HtmlParser.HtmlNode.Closest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
    name: Closest
    nameWithType: HtmlNode.Closest
    fullName: InnerLibs.HtmlParser.HtmlNode.Closest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: GetCommonAncestor(HtmlNode)
  nameWithType: HtmlNode.GetCommonAncestor(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
    name: GetCommonAncestor
    nameWithType: HtmlNode.GetCommonAncestor
    fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
    name: GetCommonAncestor
    nameWithType: HtmlNode.GetCommonAncestor
    fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsAncestorOf(HtmlNode)
  nameWithType: HtmlNode.IsAncestorOf(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsAncestorOf
    nameWithType: HtmlNode.IsAncestorOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsAncestorOf
    nameWithType: HtmlNode.IsAncestorOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsDescendentOf(HtmlNode)
  nameWithType: HtmlNode.IsDescendentOf(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsDescendentOf
    nameWithType: HtmlNode.IsDescendentOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsDescendentOf
    nameWithType: HtmlNode.IsDescendentOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsElement
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsElement
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsElement()
  nameWithType: HtmlNode.IsElement()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsElement()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement
    name: IsElement
    nameWithType: HtmlNode.IsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement
    name: IsElement
    nameWithType: HtmlNode.IsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsElement``1
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsElement<HtmlElementType>()
  nameWithType: HtmlNode.IsElement<HtmlElementType>()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsElement<HtmlElementType>()
  nameWithType.vb: HtmlNode.IsElement(Of HtmlElementType)()
  fullName.vb: InnerLibs.HtmlParser.HtmlNode.IsElement(Of HtmlElementType)()
  name.vb: IsElement(Of HtmlElementType)()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
    name: IsElement<HtmlElementType>
    nameWithType: HtmlNode.IsElement<HtmlElementType>
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement<HtmlElementType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
    name: IsElement(Of HtmlElementType)
    nameWithType: HtmlNode.IsElement(Of HtmlElementType)
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement(Of HtmlElementType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsText
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsText
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsText()
  nameWithType: HtmlNode.IsText()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsText
    name: IsText
    nameWithType: HtmlNode.IsText
    fullName: InnerLibs.HtmlParser.HtmlNode.IsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsText
    name: IsText
    nameWithType: HtmlNode.IsText
    fullName: InnerLibs.HtmlParser.HtmlNode.IsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: Move(HtmlElement, Int32)
  nameWithType: HtmlNode.Move(HtmlElement, Int32)
  fullName: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement, System.Int32)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
    name: Move
    nameWithType: HtmlNode.Move
    fullName: InnerLibs.HtmlParser.HtmlNode.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
    name: Move
    nameWithType: HtmlNode.Move
    fullName: InnerLibs.HtmlParser.HtmlNode.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Remove
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Remove
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Remove()
  nameWithType: HtmlNode.Remove()
  fullName: InnerLibs.HtmlParser.HtmlNode.Remove()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Remove
    name: Remove
    nameWithType: HtmlNode.Remove
    fullName: InnerLibs.HtmlParser.HtmlNode.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Remove
    name: Remove
    nameWithType: HtmlNode.Remove
    fullName: InnerLibs.HtmlParser.HtmlNode.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.TopParent
  commentId: M:InnerLibs.HtmlParser.HtmlNode.TopParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: TopParent()
  nameWithType: HtmlNode.TopParent()
  fullName: InnerLibs.HtmlParser.HtmlNode.TopParent()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.TopParent
    name: TopParent
    nameWithType: HtmlNode.TopParent
    fullName: InnerLibs.HtmlParser.HtmlNode.TopParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.TopParent
    name: TopParent
    nameWithType: HtmlNode.TopParent
    fullName: InnerLibs.HtmlParser.HtmlNode.TopParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.CreateDictionary
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary()
  nameWithType: ClassTools.CreateDictionary()
  fullName: InnerLibs.ClassTools.CreateDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  nameWithType: ClassTools.GetProperties(BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object)
  name: GetProperties()
  nameWithType: ClassTools.GetProperties()
  fullName: InnerLibs.ClassTools.GetProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  name: GetPropertyValue(String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  name: GetPropertyValue<Type>(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  name: GetPropertyValue(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  name: HasProperty(String)
  nameWithType: ClassTools.HasProperty(String)
  fullName: InnerLibs.ClassTools.HasProperty(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsArrayOf``1
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  name: IsArrayOf<T>()
  nameWithType: ClassTools.IsArrayOf<T>()
  fullName: InnerLibs.ClassTools.IsArrayOf<T>()
  nameWithType.vb: ClassTools.IsArrayOf(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)()
  name.vb: IsArrayOf(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsDictionary
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsDictionary(System.Object)
  name: IsDictionary()
  nameWithType: ClassTools.IsDictionary()
  fullName: InnerLibs.ClassTools.IsDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsIn(IEnumerable<HtmlElement>, IEqualityComparer<HtmlElement>)
  nameWithType: ClassTools.IsIn(IEnumerable<HtmlElement>, IEqualityComparer<HtmlElement>)
  fullName: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlElement>, System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlElement>)
  nameWithType.vb: ClassTools.IsIn(IEnumerable(Of HtmlElement), IEqualityComparer(Of HtmlElement))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlElement), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlElement))
  name.vb: IsIn(IEnumerable(Of HtmlElement), IEqualityComparer(Of HtmlElement))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  name: IsInAny(IEnumerable<HtmlElement>[], IEqualityComparer<HtmlElement>)
  nameWithType: ClassTools.IsInAny(IEnumerable<HtmlElement>[], IEqualityComparer<HtmlElement>)
  fullName: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlElement>[], System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlElement>)
  nameWithType.vb: ClassTools.IsInAny(IEnumerable(Of HtmlElement)(), IEqualityComparer(Of HtmlElement))
  fullName.vb: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlElement)(), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlElement))
  name.vb: IsInAny(IEnumerable(Of HtmlElement)(), IEqualityComparer(Of HtmlElement))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsList
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsList(System.Object)
  name: IsList()
  nameWithType: ClassTools.IsList()
  fullName: InnerLibs.ClassTools.IsList()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsNotIn(IEnumerable<HtmlElement>, IEqualityComparer<HtmlElement>)
  nameWithType: ClassTools.IsNotIn(IEnumerable<HtmlElement>, IEqualityComparer<HtmlElement>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlElement>, System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlElement>)
  nameWithType.vb: ClassTools.IsNotIn(IEnumerable(Of HtmlElement), IEqualityComparer(Of HtmlElement))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlElement), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlElement))
  name.vb: IsNotIn(IEnumerable(Of HtmlElement), IEqualityComparer(Of HtmlElement))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlElement})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsNotIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsType``1
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsType``1(System.Object)
  name: IsType<T>()
  nameWithType: ClassTools.IsType<T>()
  fullName: InnerLibs.ClassTools.IsType<T>()
  nameWithType.vb: ClassTools.IsType(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)()
  name.vb: IsType(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce(HtmlElement[])
  nameWithType: ClassTools.NullCoalesce(HtmlElement[])
  fullName: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement[])
  nameWithType.vb: ClassTools.NullCoalesce(HtmlElement())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement())
  name.vb: NullCoalesce(HtmlElement())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlElement[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.ClassTools.NullifyProperties
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties()
  nameWithType: ClassTools.NullifyProperties()
  fullName: InnerLibs.ClassTools.NullifyProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  name: SetPropertyValue<Type>(String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.String, Type)
  name.vb: SetPropertyValue(Of Type)(String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  name: SetPropertyValueFromCollection<Type>(String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  name: ToFlatString(String)
  nameWithType: ClassTools.ToFlatString(String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.DataManipulation.GetDbType
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  parent: InnerLibs.DataManipulation
  definition: InnerLibs.DataManipulation.GetDbType(System.Object)
  name: GetDbType()
  nameWithType: DataManipulation.GetDbType()
  fullName: InnerLibs.DataManipulation.GetDbType()
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Converter.DefineEmptyList
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList()
  nameWithType: Converter.DefineEmptyList()
  fullName: InnerLibs.Converter.DefineEmptyList()
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Converter.ChangeType``1
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType>()
  nameWithType: Converter.ChangeType<ToType>()
  fullName: InnerLibs.Converter.ChangeType<ToType>()
  nameWithType.vb: Converter.ChangeType(Of ToType)()
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType)()
  name.vb: ChangeType(Of ToType)()
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType<ToType>
    nameWithType: Converter.ChangeType<ToType>
    fullName: InnerLibs.Converter.ChangeType<ToType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType(Of ToType)
    nameWithType: Converter.ChangeType(Of ToType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.JsonViewer.CreateNode
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  parent: InnerLibs.JsonViewer
  definition: InnerLibs.JsonViewer.CreateNode(System.Object)
  name: CreateNode()
  nameWithType: JsonViewer.CreateNode()
  fullName: InnerLibs.JsonViewer.CreateNode()
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  name: IsBetween(Object, Object)
  nameWithType: Mathematic.IsBetween(Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Text.SerializeJSON(System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  name: SerializeJSON(String)
  nameWithType: Text.SerializeJSON(String)
  fullName: InnerLibs.Text.SerializeJSON(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNumber
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNumber(System.Object)
  name: IsNumber()
  nameWithType: Verify.IsNumber()
  fullName: InnerLibs.Verify.IsNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNotNumber
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNotNumber(System.Object)
  name: IsNotNumber()
  nameWithType: Verify.IsNotNumber()
  fullName: InnerLibs.Verify.IsNotNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IfBlank``1({T})
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  name: IfBlank<T>(T)
  nameWithType: Verify.IfBlank<T>(T)
  fullName: InnerLibs.Verify.IfBlank<T>(T)
  nameWithType.vb: Verify.IfBlank(Of T)(T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(T)
  name.vb: IfBlank(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlElement,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  name: NullIf(Func<HtmlElement, Boolean>)
  nameWithType: Verify.NullIf(Func<HtmlElement, Boolean>)
  fullName: InnerLibs.Verify.NullIf(System.Func<InnerLibs.HtmlParser.HtmlElement, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Func(Of HtmlElement, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(System.Func(Of InnerLibs.HtmlParser.HtmlElement, System.Boolean))
  name.vb: NullIf(Func(Of HtmlElement, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlElement,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlElement,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlElement)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf(HtmlElement)
  nameWithType: Verify.NullIf(HtmlElement)
  fullName: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlElement)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlElement)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlElement)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  parent: InnerLibs.Web
  definition: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  name: CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax(System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlElement,{TextType}},System.Func{InnerLibs.HtmlParser.HtmlElement,{ValueType}})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  name: AsListItem<TextType, ValueType>(Func<HtmlElement, TextType>, Func<HtmlElement, ValueType>)
  nameWithType: Web.AsListItem<TextType, ValueType>(Func<HtmlElement, TextType>, Func<HtmlElement, ValueType>)
  fullName: InnerLibs.Web.AsListItem<TextType, ValueType>(System.Func<InnerLibs.HtmlParser.HtmlElement, TextType>, System.Func<InnerLibs.HtmlParser.HtmlElement, ValueType>)
  nameWithType.vb: Web.AsListItem(Of TextType, ValueType)(Func(Of HtmlElement, TextType), Func(Of HtmlElement, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of TextType, ValueType)(System.Func(Of InnerLibs.HtmlParser.HtmlElement, TextType), System.Func(Of InnerLibs.HtmlParser.HtmlElement, ValueType))
  name.vb: AsListItem(Of TextType, ValueType)(Func(Of HtmlElement, TextType), Func(Of HtmlElement, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlElement,``0},System.Func{InnerLibs.HtmlParser.HtmlElement,``1})
    name: AsListItem<TextType, ValueType>
    nameWithType: Web.AsListItem<TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlElement,``0},System.Func{InnerLibs.HtmlParser.HtmlElement,``1})
    name: AsListItem(Of TextType, ValueType)
    nameWithType: Web.AsListItem(Of TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.GetCastedValue
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.GetCastedValue(System.Object)
  name: GetCastedValue()
  nameWithType: WinForms.GetCastedValue()
  fullName: InnerLibs.WinForms.GetCastedValue()
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  name: CastValueForControl(Object)
  nameWithType: WinForms.CastValueForControl(Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  name: ApplyToControls(HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls(HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement,System.Func{InnerLibs.HtmlParser.HtmlElement,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  name: HasSamePropertyValues(HtmlElement, Func<HtmlElement, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues(HtmlElement, Func<HtmlElement, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement, System.Func<InnerLibs.HtmlParser.HtmlElement, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(HtmlElement, Func(Of HtmlElement, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement, System.Func(Of InnerLibs.HtmlParser.HtmlElement, System.Object)())
  name.vb: HasSamePropertyValues(HtmlElement, Func(Of HtmlElement, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement,System.Func{InnerLibs.HtmlParser.HtmlElement,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlElement,System.Func{InnerLibs.HtmlParser.HtmlElement,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary<Type>(Type)
  nameWithType: ClassTools.CreateDictionary<Type>(Type)
  fullName: InnerLibs.ClassTools.CreateDictionary<Type>(Type)
  nameWithType.vb: ClassTools.CreateDictionary(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.CreateDictionary(Of Type)(Type)
  name.vb: CreateDictionary(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary<Type>
    nameWithType: ClassTools.CreateDictionary<Type>
    fullName: InnerLibs.ClassTools.CreateDictionary<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary(Of Type)
    nameWithType: ClassTools.CreateDictionary(Of Type)
    fullName: InnerLibs.ClassTools.CreateDictionary(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools
  commentId: T:InnerLibs.ClassTools
  parent: InnerLibs
  name: ClassTools
  nameWithType: ClassTools
  fullName: InnerLibs.ClassTools
- uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Object, BindingFlags)
  nameWithType: ClassTools.GetProperties(Object, BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  isExternal: true
  name: GetProperties(Object)
  nameWithType: ClassTools.GetProperties(Object)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue<Type>(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.Object, System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(Object, String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.Object, System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(Object, String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  isExternal: true
  name: HasProperty(Object, String)
  nameWithType: ClassTools.HasProperty(Object, String)
  fullName: InnerLibs.ClassTools.HasProperty(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  isExternal: true
  name: IsArrayOf<T>(Object)
  nameWithType: ClassTools.IsArrayOf<T>(Object)
  fullName: InnerLibs.ClassTools.IsArrayOf<T>(System.Object)
  nameWithType.vb: ClassTools.IsArrayOf(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)(System.Object)
  name.vb: IsArrayOf(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsDictionary(System.Object)
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  isExternal: true
  name: IsDictionary(Object)
  nameWithType: ClassTools.IsDictionary(Object)
  fullName: InnerLibs.ClassTools.IsDictionary(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  nameWithType: ClassTools.IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsInAny<Type>(Type, System.Collections.Generic.IEnumerable<Type>[], System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsInAny(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type)(), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny<Type>
    nameWithType: ClassTools.IsInAny<Type>
    fullName: InnerLibs.ClassTools.IsInAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny(Of Type)
    nameWithType: ClassTools.IsInAny(Of Type)
    fullName: InnerLibs.ClassTools.IsInAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsList(System.Object)
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  isExternal: true
  name: IsList(Object)
  nameWithType: ClassTools.IsList(Object)
  fullName: InnerLibs.ClassTools.IsList(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsType``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  isExternal: true
  name: IsType<T>(Object)
  nameWithType: ClassTools.IsType<T>(Object)
  fullName: InnerLibs.ClassTools.IsType<T>(System.Object)
  nameWithType.vb: ClassTools.IsType(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)(System.Object)
  name.vb: IsType(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce<T>(T, T[])
  nameWithType: ClassTools.NullCoalesce<T>(T, T[])
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(T, T[])
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(T, T())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(T, T())
  name.vb: NullCoalesce(Of T)(T, T())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties<Type>(Type)
  nameWithType: ClassTools.NullifyProperties<Type>(Type)
  fullName: InnerLibs.ClassTools.NullifyProperties<Type>(Type)
  nameWithType.vb: ClassTools.NullifyProperties(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.NullifyProperties(Of Type)(Type)
  name.vb: NullifyProperties(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties<Type>
    nameWithType: ClassTools.NullifyProperties<Type>
    fullName: InnerLibs.ClassTools.NullifyProperties<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties(Of Type)
    nameWithType: ClassTools.NullifyProperties(Of Type)
    fullName: InnerLibs.ClassTools.NullifyProperties(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  isExternal: true
  name: SetPropertyValue<Type>(Object, String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(Object, String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.Object, System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(Object, String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.Object, System.String, Type)
  name.vb: SetPropertyValue(Of Type)(Object, String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  isExternal: true
  name: SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.Object, System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.Object, System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  isExternal: true
  name: ToFlatString(Object, String)
  nameWithType: ClassTools.ToFlatString(Object, String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation.GetDbType(System.Object)
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  isExternal: true
  name: GetDbType(Object)
  nameWithType: DataManipulation.GetDbType(Object)
  fullName: InnerLibs.DataManipulation.GetDbType(System.Object)
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation
  commentId: T:InnerLibs.DataManipulation
  parent: InnerLibs
  name: DataManipulation
  nameWithType: DataManipulation
  fullName: InnerLibs.DataManipulation
- uid: InnerLibs.Converter.DefineEmptyList``1(``0)
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList<T>(T)
  nameWithType: Converter.DefineEmptyList<T>(T)
  fullName: InnerLibs.Converter.DefineEmptyList<T>(T)
  nameWithType.vb: Converter.DefineEmptyList(Of T)(T)
  fullName.vb: InnerLibs.Converter.DefineEmptyList(Of T)(T)
  name.vb: DefineEmptyList(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList<T>
    nameWithType: Converter.DefineEmptyList<T>
    fullName: InnerLibs.Converter.DefineEmptyList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList(Of T)
    nameWithType: Converter.DefineEmptyList(Of T)
    fullName: InnerLibs.Converter.DefineEmptyList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Converter
  commentId: T:InnerLibs.Converter
  parent: InnerLibs
  name: Converter
  nameWithType: Converter
  fullName: InnerLibs.Converter
- uid: InnerLibs.Converter.ChangeType``2(``1)
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType, FromType>(FromType)
  nameWithType: Converter.ChangeType<ToType, FromType>(FromType)
  fullName: InnerLibs.Converter.ChangeType<ToType, FromType>(FromType)
  nameWithType.vb: Converter.ChangeType(Of ToType, FromType)(FromType)
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType, FromType)(FromType)
  name.vb: ChangeType(Of ToType, FromType)(FromType)
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType<ToType, FromType>
    nameWithType: Converter.ChangeType<ToType, FromType>
    fullName: InnerLibs.Converter.ChangeType<ToType, FromType>
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType(Of ToType, FromType)
    nameWithType: Converter.ChangeType(Of ToType, FromType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType, FromType)
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer.CreateNode(System.Object)
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  isExternal: true
  name: CreateNode(Object)
  nameWithType: JsonViewer.CreateNode(Object)
  fullName: InnerLibs.JsonViewer.CreateNode(System.Object)
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer
  commentId: T:InnerLibs.JsonViewer
  parent: InnerLibs
  name: JsonViewer
  nameWithType: JsonViewer
  fullName: InnerLibs.JsonViewer
- uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  isExternal: true
  name: IsBetween<Type>(Type, Object, Object)
  nameWithType: Mathematic.IsBetween<Type>(Type, Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween<Type>(Type, System.Object, System.Object)
  nameWithType.vb: Mathematic.IsBetween(Of Type)(Type, Object, Object)
  fullName.vb: InnerLibs.Mathematic.IsBetween(Of Type)(Type, System.Object, System.Object)
  name.vb: IsBetween(Of Type)(Type, Object, Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween<Type>
    nameWithType: Mathematic.IsBetween<Type>
    fullName: InnerLibs.Mathematic.IsBetween<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween(Of Type)
    nameWithType: Mathematic.IsBetween(Of Type)
    fullName: InnerLibs.Mathematic.IsBetween(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic
  commentId: T:InnerLibs.Mathematic
  parent: InnerLibs
  name: Mathematic
  nameWithType: Mathematic
  fullName: InnerLibs.Mathematic
- uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  isExternal: true
  name: SerializeJSON(Object, String)
  nameWithType: Text.SerializeJSON(Object, String)
  fullName: InnerLibs.Text.SerializeJSON(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text
  commentId: T:InnerLibs.Text
  parent: InnerLibs
  name: Text
  nameWithType: Text
  fullName: InnerLibs.Text
- uid: InnerLibs.Verify.IsNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  isExternal: true
  name: IsNumber(Object)
  nameWithType: Verify.IsNumber(Object)
  fullName: InnerLibs.Verify.IsNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify
  commentId: T:InnerLibs.Verify
  parent: InnerLibs
  name: Verify
  nameWithType: Verify
  fullName: InnerLibs.Verify
- uid: InnerLibs.Verify.IsNotNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  isExternal: true
  name: IsNotNumber(Object)
  nameWithType: Verify.IsNotNumber(Object)
  fullName: InnerLibs.Verify.IsNotNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  isExternal: true
  name: IfBlank<T>(Object, T)
  nameWithType: Verify.IfBlank<T>(Object, T)
  fullName: InnerLibs.Verify.IfBlank<T>(System.Object, T)
  nameWithType.vb: Verify.IfBlank(Of T)(Object, T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(System.Object, T)
  name.vb: IfBlank(Of T)(Object, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  isExternal: true
  name: NullIf<T>(T, Func<T, Boolean>)
  nameWithType: Verify.NullIf<T>(T, Func<T, Boolean>)
  fullName: InnerLibs.Verify.NullIf<T>(T, System.Func<T, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Of T)(T, Func(Of T, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, System.Func(Of T, System.Boolean))
  name.vb: NullIf(Of T)(T, Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,``0)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf<T>(T, T)
  nameWithType: Verify.NullIf<T>(T, T)
  fullName: InnerLibs.Verify.NullIf<T>(T, T)
  nameWithType.vb: Verify.NullIf(Of T)(T, T)
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, T)
  name.vb: NullIf(Of T)(T, T)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExternal: true
  name: CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  nameWithType.vb: Web.CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax<Type>
    nameWithType: Web.CreateFromAjax<Type>
    fullName: InnerLibs.Web.CreateFromAjax<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax(Of Type)
    nameWithType: Web.CreateFromAjax(Of Type)
    fullName: InnerLibs.Web.CreateFromAjax(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  parent: InnerLibs
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem<T, TextType, ValueType>
    nameWithType: Web.AsListItem<T, TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem(Of T, TextType, ValueType)
    nameWithType: Web.AsListItem(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms.GetCastedValue(System.Object)
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  isExternal: true
  name: GetCastedValue(Object)
  nameWithType: WinForms.GetCastedValue(Object)
  fullName: InnerLibs.WinForms.GetCastedValue(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms
  commentId: T:InnerLibs.WinForms
  parent: InnerLibs
  name: WinForms
  nameWithType: WinForms
  fullName: InnerLibs.WinForms
- uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  isExternal: true
  name: CastValueForControl(Object, Object)
  nameWithType: WinForms.CastValueForControl(Object, Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  isExternal: true
  name: ApplyToControls<T>(T, HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls<T>(T, HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>(T, System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(Of T)(T, HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)(T, System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(Of T)(T, HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls<T>
    nameWithType: LINQExtensions.ApplyToControls<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls(Of T)
    nameWithType: LINQExtensions.ApplyToControls(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions
  commentId: T:InnerLibs.LINQ.LINQExtensions
  parent: InnerLibs.LINQ
  name: LINQExtensions
  nameWithType: LINQExtensions
  fullName: InnerLibs.LINQ.LINQExtensions
- uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  isExternal: true
  name: HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>(T, T, System.Func<T, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)(T, T, System.Func(Of T, System.Object)())
  name.vb: HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues<T>
    nameWithType: LINQExtensions.HasSamePropertyValues<T>
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues(Of T)
    nameWithType: LINQExtensions.HasSamePropertyValues(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs
  commentId: N:InnerLibs
  name: InnerLibs
  nameWithType: InnerLibs
  fullName: InnerLibs
- uid: InnerLibs.LINQ
  commentId: N:InnerLibs.LINQ
  name: InnerLibs.LINQ
  nameWithType: InnerLibs.LINQ
  fullName: InnerLibs.LINQ
- uid: InnerLibs.HtmlParser.HtmlAttributeCollection
  commentId: T:InnerLibs.HtmlParser.HtmlAttributeCollection
  parent: InnerLibs.HtmlParser
  name: HtmlAttributeCollection
  nameWithType: HtmlAttributeCollection
  fullName: InnerLibs.HtmlParser.HtmlAttributeCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: InnerLibs.HtmlParser.HtmlNodeCollection
  commentId: T:InnerLibs.HtmlParser.HtmlNodeCollection
  parent: InnerLibs.HtmlParser
  name: HtmlNodeCollection
  nameWithType: HtmlNodeCollection
  fullName: InnerLibs.HtmlParser.HtmlNodeCollection
- uid: InnerLibs.HtmlParser.HtmlElement.#ctor*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.#ctor
  name: HtmlElement
  nameWithType: HtmlElement.HtmlElement
  fullName: InnerLibs.HtmlParser.HtmlElement.HtmlElement
- uid: InnerLibs.HtmlParser.HtmlElement
  commentId: T:InnerLibs.HtmlParser.HtmlElement
  parent: InnerLibs.HtmlParser
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: InnerLibs.HtmlParser.HtmlElement
- uid: System.Web.UI.HtmlControls.HtmlGenericControl
  commentId: T:System.Web.UI.HtmlControls.HtmlGenericControl
  parent: System.Web.UI.HtmlControls
  isExternal: true
  name: HtmlGenericControl
  nameWithType: HtmlGenericControl
  fullName: System.Web.UI.HtmlControls.HtmlGenericControl
- uid: System.Web.UI.HtmlControls
  commentId: N:System.Web.UI.HtmlControls
  isExternal: true
  name: System.Web.UI.HtmlControls
  nameWithType: System.Web.UI.HtmlControls
  fullName: System.Web.UI.HtmlControls
- uid: InnerLibs.HtmlParser.HtmlElement.Children*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Children
  name: Children
  nameWithType: HtmlElement.Children
  fullName: InnerLibs.HtmlParser.HtmlElement.Children
- uid: '{ElementType}'
  commentId: '!:``0'
  definition: '``0'
  name: ElementType
  nameWithType: ElementType
  fullName: ElementType
- uid: '``0'
  name: T
  nameWithType: T
  fullName: T
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.AddNode
  name: AddNode
  nameWithType: HtmlElement.AddNode
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
- uid: InnerLibs.HtmlParser.HtmlNode[]
  commentId: T:InnerLibs.HtmlParser.HtmlNode[]
  name: HtmlNode[]
  nameWithType: HtmlNode[]
  fullName: InnerLibs.HtmlParser.HtmlNode[]
  nameWithType.vb: HtmlNode()
  fullName.vb: InnerLibs.HtmlParser.HtmlNode()
  name.vb: HtmlNode()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: InnerLibs.HtmlParser.HtmlElement.Clone*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Clone
  name: Clone
  nameWithType: HtmlElement.Clone
  fullName: InnerLibs.HtmlParser.HtmlElement.Clone
- uid: InnerLibs.HtmlParser.HtmlElement.SideClone*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.SideClone
  name: SideClone
  nameWithType: HtmlElement.SideClone
  fullName: InnerLibs.HtmlParser.HtmlElement.SideClone
- uid: InnerLibs.HtmlParser.HtmlElement.ChildElements*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ChildElements
  name: ChildElements
  nameWithType: HtmlElement.ChildElements
  fullName: InnerLibs.HtmlParser.HtmlElement.ChildElements
- uid: System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}
  commentId: T:System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HtmlElement>
  nameWithType: IEnumerable<HtmlElement>
  fullName: System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlElement>
  nameWithType.vb: IEnumerable(Of HtmlElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlElement)
  name.vb: IEnumerable(Of HtmlElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: InnerLibs.HtmlParser.HtmlElement.ContentText*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ContentText
  name: ContentText
  nameWithType: HtmlElement.ContentText
  fullName: InnerLibs.HtmlParser.HtmlElement.ContentText
- uid: System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlText}
  commentId: T:System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlText}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HtmlText>
  nameWithType: IEnumerable<HtmlText>
  fullName: System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlText>
  nameWithType.vb: IEnumerable(Of HtmlText)
  fullName.vb: System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlText)
  name.vb: IEnumerable(Of HtmlText)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlText
    name: HtmlText
    nameWithType: HtmlText
    fullName: InnerLibs.HtmlParser.HtmlText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlText
    name: HtmlText
    nameWithType: HtmlText
    fullName: InnerLibs.HtmlParser.HtmlText
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  name: IsExplicitlyTerminated
  nameWithType: HtmlElement.IsExplicitlyTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.IsTerminated*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.IsTerminated
  name: IsTerminated
  nameWithType: HtmlElement.IsTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.Title*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Title
  name: Title
  nameWithType: HtmlElement.Title
  fullName: InnerLibs.HtmlParser.HtmlElement.Title
- uid: InnerLibs.HtmlParser.HtmlElement.Class*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Class
  name: Class
  nameWithType: HtmlElement.Class
  fullName: InnerLibs.HtmlParser.HtmlElement.Class
- uid: InnerLibs.HtmlParser.ClassList
  commentId: T:InnerLibs.HtmlParser.ClassList
  parent: InnerLibs.HtmlParser
  name: ClassList
  nameWithType: ClassList
  fullName: InnerLibs.HtmlParser.ClassList
- uid: InnerLibs.HtmlParser.HtmlElement.Attributes*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Attributes
  name: Attributes
  nameWithType: HtmlElement.Attributes
  fullName: InnerLibs.HtmlParser.HtmlElement.Attributes
- uid: InnerLibs.HtmlParser.HtmlElement.AttributesNames*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.AttributesNames
  name: AttributesNames
  nameWithType: HtmlElement.AttributesNames
  fullName: InnerLibs.HtmlParser.HtmlElement.AttributesNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Disabled*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Disabled
  name: Disabled
  nameWithType: HtmlElement.Disabled
  fullName: InnerLibs.HtmlParser.HtmlElement.Disabled
- uid: InnerLibs.HtmlParser.HtmlNode.ElementRepresentation
  commentId: P:InnerLibs.HtmlParser.HtmlNode.ElementRepresentation
  parent: InnerLibs.HtmlParser.HtmlNode
  name: ElementRepresentation
  nameWithType: HtmlNode.ElementRepresentation
  fullName: InnerLibs.HtmlParser.HtmlNode.ElementRepresentation
- uid: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  name: ElementRepresentation
  nameWithType: HtmlElement.ElementRepresentation
  fullName: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
- uid: InnerLibs.HtmlParser.HtmlNode.HTML
  commentId: P:InnerLibs.HtmlParser.HtmlNode.HTML
  parent: InnerLibs.HtmlParser.HtmlNode
  name: HTML
  nameWithType: HtmlNode.HTML
  fullName: InnerLibs.HtmlParser.HtmlNode.HTML
- uid: InnerLibs.HtmlParser.HtmlElement.HTML*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.HTML
  name: HTML
  nameWithType: HtmlElement.HTML
  fullName: InnerLibs.HtmlParser.HtmlElement.HTML
- uid: InnerLibs.HtmlParser.HtmlElement.ID*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ID
  name: ID
  nameWithType: HtmlElement.ID
  fullName: InnerLibs.HtmlParser.HtmlElement.ID
- uid: InnerLibs.HtmlParser.HtmlElement.InnerHTML*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.InnerHTML
  name: InnerHTML
  nameWithType: HtmlElement.InnerHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerHTML
- uid: InnerLibs.HtmlParser.HtmlElement.InnerText*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.InnerText
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerText
- uid: InnerLibs.HtmlParser.HtmlElement.IsVisible*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.IsVisible
  name: IsVisible
  nameWithType: HtmlElement.IsVisible
  fullName: InnerLibs.HtmlParser.HtmlElement.IsVisible
- uid: InnerLibs.HtmlParser.HtmlElement.Name*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Name
  name: Name
  nameWithType: HtmlElement.Name
  fullName: InnerLibs.HtmlParser.HtmlElement.Name
- uid: InnerLibs.HtmlParser.HtmlElement.Nodes*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Nodes
  name: Nodes
  nameWithType: HtmlElement.Nodes
  fullName: InnerLibs.HtmlParser.HtmlElement.Nodes
- uid: InnerLibs.HtmlParser.HtmlElement.Style*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Style
  name: Style
  nameWithType: HtmlElement.Style
  fullName: InnerLibs.HtmlParser.HtmlElement.Style
- uid: InnerLibs.HtmlParser.CssProperties
  commentId: T:InnerLibs.HtmlParser.CssProperties
  parent: InnerLibs.HtmlParser
  name: CssProperties
  nameWithType: CssProperties
  fullName: InnerLibs.HtmlParser.CssProperties
- uid: InnerLibs.HtmlParser.HtmlNode.XHTML
  commentId: P:InnerLibs.HtmlParser.HtmlNode.XHTML
  parent: InnerLibs.HtmlParser.HtmlNode
  name: XHTML
  nameWithType: HtmlNode.XHTML
  fullName: InnerLibs.HtmlParser.HtmlNode.XHTML
- uid: InnerLibs.HtmlParser.HtmlElement.XHTML*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.XHTML
  name: XHTML
  nameWithType: HtmlElement.XHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.XHTML
- uid: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll
  name: QuerySelectorAll
  nameWithType: HtmlElement.QuerySelectorAll
  fullName: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll
- uid: InnerLibs.HtmlParser.HtmlElement.Data*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Data
  name: Data
  nameWithType: HtmlElement.Data
  fullName: InnerLibs.HtmlParser.HtmlElement.Data
- uid: InnerLibs.HtmlParser.HtmlElement.Attribute*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Attribute
  name: Attribute
  nameWithType: HtmlElement.Attribute
  fullName: InnerLibs.HtmlParser.HtmlElement.Attribute
- uid: InnerLibs.HtmlParser.HtmlElement.AddAttribute*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.AddAttribute
  name: AddAttribute
  nameWithType: HtmlElement.AddAttribute
  fullName: InnerLibs.HtmlParser.HtmlElement.AddAttribute
- uid: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char,System.String[])
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Censor(System.Char,System.String[])
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: Censor(Char, String[])
  nameWithType: HtmlNode.Censor(Char, String[])
  fullName: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char, System.String[])
  nameWithType.vb: HtmlNode.Censor(Char, String())
  fullName.vb: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char, System.String())
  name.vb: Censor(Char, String())
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char,System.String[])
    name: Censor
    nameWithType: HtmlNode.Censor
    fullName: InnerLibs.HtmlParser.HtmlNode.Censor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Censor(System.Char,System.String[])
    name: Censor
    nameWithType: HtmlNode.Censor
    fullName: InnerLibs.HtmlParser.HtmlNode.Censor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Censor*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Censor
  name: Censor
  nameWithType: HtmlElement.Censor
  fullName: InnerLibs.HtmlParser.HtmlElement.Censor
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String[]
  commentId: T:System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Web.UI.HtmlControls.HtmlControl
  commentId: T:System.Web.UI.HtmlControls.HtmlControl
  isExternal: true
- uid: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl
  name: CreateWebFormControl
  nameWithType: HtmlElement.CreateWebFormControl
  fullName: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl
- uid: '{Type}'
  commentId: '!:``0'
  definition: '``0'
  name: Type
  nameWithType: Type
  fullName: Type
- uid: InnerLibs.HtmlParser.HtmlElement.Destroy*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Destroy
  name: Destroy
  nameWithType: HtmlElement.Destroy
  fullName: InnerLibs.HtmlParser.HtmlElement.Destroy
- uid: InnerLibs.HtmlParser.HtmlText
  commentId: T:InnerLibs.HtmlParser.HtmlText
  parent: InnerLibs.HtmlParser
  name: HtmlText
  nameWithType: HtmlText
  fullName: InnerLibs.HtmlParser.HtmlText
- uid: InnerLibs.HtmlParser.HtmlElement.FindElements*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.FindElements
  name: FindElements
  nameWithType: HtmlElement.FindElements
  fullName: InnerLibs.HtmlParser.HtmlElement.FindElements
- uid: System.Func{{NodeType},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<NodeType, Boolean>
  nameWithType: Func<NodeType, Boolean>
  fullName: System.Func<NodeType, System.Boolean>
  nameWithType.vb: Func(Of NodeType, Boolean)
  fullName.vb: System.Func(Of NodeType, System.Boolean)
  name.vb: Func(Of NodeType, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.FixText
  commentId: M:InnerLibs.HtmlParser.HtmlNode.FixText
  parent: InnerLibs.HtmlParser.HtmlNode
  name: FixText()
  nameWithType: HtmlNode.FixText()
  fullName: InnerLibs.HtmlParser.HtmlNode.FixText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.FixText
    name: FixText
    nameWithType: HtmlNode.FixText
    fullName: InnerLibs.HtmlParser.HtmlNode.FixText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.FixText
    name: FixText
    nameWithType: HtmlNode.FixText
    fullName: InnerLibs.HtmlParser.HtmlNode.FixText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.FixText*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.FixText
  name: FixText
  nameWithType: HtmlElement.FixText
  fullName: InnerLibs.HtmlParser.HtmlElement.FixText
- uid: InnerLibs.HtmlParser.HtmlElement.GetTextElements*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.GetTextElements
  name: GetTextElements
  nameWithType: HtmlElement.GetTextElements
  fullName: InnerLibs.HtmlParser.HtmlElement.GetTextElements
- uid: InnerLibs.HtmlParser.HtmlElement.HasAttribute*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.HasAttribute
  name: HasAttribute
  nameWithType: HtmlElement.HasAttribute
  fullName: InnerLibs.HtmlParser.HtmlElement.HasAttribute
- uid: InnerLibs.HtmlParser.HtmlElement.HasClass*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.HasClass
  name: HasClass
  nameWithType: HtmlElement.HasClass
  fullName: InnerLibs.HtmlParser.HtmlElement.HasClass
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.Mutate
  name: Mutate
  nameWithType: HtmlElement.Mutate
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
- uid: InnerLibs.HtmlParser.HtmlElement.ParseEmoji*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ParseEmoji
  name: ParseEmoji
  nameWithType: HtmlElement.ParseEmoji
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseEmoji
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseHashTags*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ParseHashTags
  name: ParseHashTags
  nameWithType: HtmlElement.ParseHashTags
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseHashTags
- uid: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ParseOEmbed
  name: ParseOEmbed
  nameWithType: HtmlElement.ParseOEmbed
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed
- uid: InnerLibs.HtmlParser.HtmlElement.ParseURL*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ParseURL
  name: ParseURL
  nameWithType: HtmlElement.ParseURL
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseURL
- uid: InnerLibs.HtmlParser.HtmlElement.ParseUsername*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ParseUsername
  name: ParseUsername
  nameWithType: HtmlElement.ParseUsername
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseUsername
- uid: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.RemoveAttribute
  name: RemoveAttribute
  nameWithType: HtmlElement.RemoveAttribute
  fullName: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute
- uid: InnerLibs.HtmlParser.HtmlNode.ToString
  commentId: M:InnerLibs.HtmlParser.HtmlNode.ToString
  parent: InnerLibs.HtmlParser.HtmlNode
  name: ToString()
  nameWithType: HtmlNode.ToString()
  fullName: InnerLibs.HtmlParser.HtmlNode.ToString()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToString
    name: ToString
    nameWithType: HtmlNode.ToString
    fullName: InnerLibs.HtmlParser.HtmlNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToString
    name: ToString
    nameWithType: HtmlNode.ToString
    fullName: InnerLibs.HtmlParser.HtmlNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ToString*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ToString
  name: ToString
  nameWithType: HtmlElement.ToString
  fullName: InnerLibs.HtmlParser.HtmlElement.ToString
- uid: System.Xml.XmlElement
  commentId: T:System.Xml.XmlElement
  parent: System.Xml
  isExternal: true
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: InnerLibs.HtmlParser.HtmlElement.ToXmlElement*
  commentId: Overload:InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  name: ToXmlElement
  nameWithType: HtmlElement.ToXmlElement
  fullName: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
