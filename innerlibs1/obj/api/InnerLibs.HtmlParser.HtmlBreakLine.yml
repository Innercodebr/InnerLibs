### YamlMime:ManagedReference
items:
- uid: InnerLibs.HtmlParser.HtmlBreakLine
  commentId: T:InnerLibs.HtmlParser.HtmlBreakLine
  id: HtmlBreakLine
  parent: InnerLibs.HtmlParser
  children:
  - InnerLibs.HtmlParser.HtmlBreakLine.#ctor
  - InnerLibs.HtmlParser.HtmlBreakLine.Name
  langs:
  - csharp
  - vb
  name: HtmlBreakLine
  nameWithType: HtmlBreakLine
  fullName: InnerLibs.HtmlParser.HtmlBreakLine
  type: Class
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: HtmlBreakLine
    path: htmlparser/HtmlElement.vb
    startLine: 60
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: 'public class HtmlBreakLine : HtmlElement'
    content.vb: >-
      Public Class HtmlBreakLine
          Inherits HtmlElement
  inheritance:
  - System.Object
  - InnerLibs.HtmlParser.HtmlNode
  - InnerLibs.HtmlParser.HtmlElement
  inheritedMembers:
  - InnerLibs.HtmlParser.HtmlElement.mAttributes
  - InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  - InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  - InnerLibs.HtmlParser.HtmlElement.mName
  - InnerLibs.HtmlParser.HtmlElement.mNodes
  - InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  - InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  - InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  - InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  - InnerLibs.HtmlParser.HtmlElement.Clone
  - InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  - InnerLibs.HtmlParser.HtmlElement.ChildElements
  - InnerLibs.HtmlParser.HtmlElement.ContentText
  - InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  - InnerLibs.HtmlParser.HtmlElement.IsTerminated
  - InnerLibs.HtmlParser.HtmlElement.Title
  - InnerLibs.HtmlParser.HtmlElement.Class
  - InnerLibs.HtmlParser.HtmlElement.Attributes
  - InnerLibs.HtmlParser.HtmlElement.AttributesNames
  - InnerLibs.HtmlParser.HtmlElement.Disabled
  - InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  - InnerLibs.HtmlParser.HtmlElement.HTML
  - InnerLibs.HtmlParser.HtmlElement.ID
  - InnerLibs.HtmlParser.HtmlElement.InnerHTML
  - InnerLibs.HtmlParser.HtmlElement.InnerText
  - InnerLibs.HtmlParser.HtmlElement.IsVisible
  - InnerLibs.HtmlParser.HtmlElement.Nodes
  - InnerLibs.HtmlParser.HtmlElement.Style
  - InnerLibs.HtmlParser.HtmlElement.XHTML
  - InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  - InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  - InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  - InnerLibs.HtmlParser.HtmlElement.Destroy
  - InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{{NodeType},System.Boolean},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.FixText
  - InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  - InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  - InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  - InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  - InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  - InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  - InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  - InnerLibs.HtmlParser.HtmlElement.ToString
  - InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  - InnerLibs.HtmlParser.HtmlNode.mParent
  - InnerLibs.HtmlParser.HtmlNode.ToJSON
  - InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  - InnerLibs.HtmlParser.HtmlNode.Next
  - InnerLibs.HtmlParser.HtmlNode.FirstChild
  - InnerLibs.HtmlParser.HtmlNode.AsElement
  - InnerLibs.HtmlParser.HtmlNode.AsElement``1
  - InnerLibs.HtmlParser.HtmlNode.AsText
  - InnerLibs.HtmlParser.HtmlNode.Index
  - InnerLibs.HtmlParser.HtmlNode.IsChild
  - InnerLibs.HtmlParser.HtmlNode.IsParent
  - InnerLibs.HtmlParser.HtmlNode.IsRoot
  - InnerLibs.HtmlParser.HtmlNode.LastChild
  - InnerLibs.HtmlParser.HtmlNode.Parent
  - InnerLibs.HtmlParser.HtmlNode.Previous
  - InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  - InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  - InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  - InnerLibs.HtmlParser.HtmlNode.IsElement
  - InnerLibs.HtmlParser.HtmlNode.IsElement``1
  - InnerLibs.HtmlParser.HtmlNode.IsText
  - InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  - InnerLibs.HtmlParser.HtmlNode.Remove
  - InnerLibs.HtmlParser.HtmlNode.TopParent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.Finalize
  - System.Object.MemberwiseClone
  extensionMethods:
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.CreateDictionary
  - System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  - System.Object.InnerLibs.ClassTools.GetProperties
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  - System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  - System.Object.InnerLibs.ClassTools.IsArrayOf``1
  - System.Object.InnerLibs.ClassTools.IsDictionary
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  - System.Object.InnerLibs.ClassTools.IsList
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  - System.Object.InnerLibs.ClassTools.IsType``1
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine[])
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.NullifyProperties
  - System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  - System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  - System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  - System.Object.InnerLibs.DataManipulation.GetDbType
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Converter.DefineEmptyList
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Converter.ChangeType``1
  - System.Object.InnerLibs.JsonViewer.CreateNode
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  - System.Object.InnerLibs.Text.SerializeJSON(System.String)
  - System.Object.InnerLibs.Verify.IsNumber
  - System.Object.InnerLibs.Verify.IsNotNumber
  - System.Object.InnerLibs.Verify.IfBlank``1({T})
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Boolean})
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlBreakLine)
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,{TextType}},System.Func{InnerLibs.HtmlParser.HtmlBreakLine,{ValueType}})
  - System.Object.InnerLibs.WinForms.GetCastedValue
  - System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  - InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine,System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Object}[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InnerLibs.HtmlParser.HtmlBreakLine.#ctor
  commentId: M:InnerLibs.HtmlParser.HtmlBreakLine.#ctor
  id: '#ctor'
  parent: InnerLibs.HtmlParser.HtmlBreakLine
  langs:
  - csharp
  - vb
  name: HtmlBreakLine()
  nameWithType: HtmlBreakLine.HtmlBreakLine()
  fullName: InnerLibs.HtmlParser.HtmlBreakLine.HtmlBreakLine()
  type: Constructor
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: .ctor
    path: htmlparser/HtmlElement.vb
    startLine: 63
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public HtmlBreakLine()
    content.vb: Public Sub New
  overload: InnerLibs.HtmlParser.HtmlBreakLine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InnerLibs.HtmlParser.HtmlBreakLine.Name
  commentId: P:InnerLibs.HtmlParser.HtmlBreakLine.Name
  id: Name
  parent: InnerLibs.HtmlParser.HtmlBreakLine
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HtmlBreakLine.Name
  fullName: InnerLibs.HtmlParser.HtmlBreakLine.Name
  type: Property
  source:
    remote:
      path: C:/SVN/InnerLibs/trunk/innerlibs1/htmlparser/HtmlElement.vb
    id: Name
    path: htmlparser/HtmlElement.vb
    startLine: 68
  assemblies:
  - InnerLibs
  namespace: InnerLibs.HtmlParser
  syntax:
    content: public override string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Name As String
  overridden: InnerLibs.HtmlParser.HtmlElement.Name
  overload: InnerLibs.HtmlParser.HtmlBreakLine.Name*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: InnerLibs.HtmlParser
  commentId: N:InnerLibs.HtmlParser
  name: InnerLibs.HtmlParser
  nameWithType: InnerLibs.HtmlParser
  fullName: InnerLibs.HtmlParser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: InnerLibs.HtmlParser.HtmlNode
  commentId: T:InnerLibs.HtmlParser.HtmlNode
  parent: InnerLibs.HtmlParser
  name: HtmlNode
  nameWithType: HtmlNode
  fullName: InnerLibs.HtmlParser.HtmlNode
- uid: InnerLibs.HtmlParser.HtmlElement
  commentId: T:InnerLibs.HtmlParser.HtmlElement
  parent: InnerLibs.HtmlParser
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: InnerLibs.HtmlParser.HtmlElement
- uid: InnerLibs.HtmlParser.HtmlElement.mAttributes
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mAttributes
  parent: InnerLibs.HtmlParser.HtmlElement
  name: mAttributes
  nameWithType: HtmlElement.mAttributes
  fullName: InnerLibs.HtmlParser.HtmlElement.mAttributes
- uid: InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  name: mIsExplicitlyTerminated
  nameWithType: HtmlElement.mIsExplicitlyTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.mIsExplicitlyTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mIsTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  name: mIsTerminated
  nameWithType: HtmlElement.mIsTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.mIsTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.mName
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mName
  parent: InnerLibs.HtmlParser.HtmlElement
  name: mName
  nameWithType: HtmlElement.mName
  fullName: InnerLibs.HtmlParser.HtmlElement.mName
- uid: InnerLibs.HtmlParser.HtmlElement.mNodes
  commentId: F:InnerLibs.HtmlParser.HtmlElement.mNodes
  parent: InnerLibs.HtmlParser.HtmlElement
  name: mNodes
  nameWithType: HtmlElement.mNodes
  fullName: InnerLibs.HtmlParser.HtmlElement.mNodes
- uid: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Children(String)
  nameWithType: HtmlElement.Children(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
    name: Children
    nameWithType: HtmlElement.Children
    fullName: InnerLibs.HtmlParser.HtmlElement.Children
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Children(System.String)
    name: Children
    nameWithType: HtmlElement.Children
    fullName: InnerLibs.HtmlParser.HtmlElement.Children
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Children<ElementType>(String)
  nameWithType: HtmlElement.Children<ElementType>(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Children<ElementType>(System.String)
  nameWithType.vb: HtmlElement.Children(Of ElementType)(String)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Children(Of ElementType)(System.String)
  name.vb: Children(Of ElementType)(String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
    name: Children<ElementType>
    nameWithType: HtmlElement.Children<ElementType>
    fullName: InnerLibs.HtmlParser.HtmlElement.Children<ElementType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Children``1(System.String)
    name: Children(Of ElementType)
    nameWithType: HtmlElement.Children(Of ElementType)
    fullName: InnerLibs.HtmlParser.HtmlElement.Children(Of ElementType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  parent: InnerLibs.HtmlParser.HtmlElement
  name: AddNode(HtmlNode[])
  nameWithType: HtmlElement.AddNode(HtmlNode[])
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
  nameWithType.vb: HtmlElement.AddNode(HtmlNode())
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode())
  name.vb: AddNode(HtmlNode())
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(InnerLibs.HtmlParser.HtmlNode[])
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: AddNode(HtmlGenericControl)
  nameWithType: HtmlElement.AddNode(HtmlGenericControl)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlGenericControl
    name: HtmlGenericControl
    nameWithType: HtmlGenericControl
    fullName: System.Web.UI.HtmlControls.HtmlGenericControl
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.Web.UI.HtmlControls.HtmlGenericControl)
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlGenericControl
    name: HtmlGenericControl
    nameWithType: HtmlGenericControl
    fullName: System.Web.UI.HtmlControls.HtmlGenericControl
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: AddNode(String, Int32)
  nameWithType: HtmlElement.AddNode(String, Int32)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String, System.Int32)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddNode(System.String,System.Int32)
    name: AddNode
    nameWithType: HtmlElement.AddNode
    fullName: InnerLibs.HtmlParser.HtmlElement.AddNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Clone
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Clone
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Clone()
  nameWithType: HtmlElement.Clone()
  fullName: InnerLibs.HtmlParser.HtmlElement.Clone()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Clone
    name: Clone
    nameWithType: HtmlElement.Clone
    fullName: InnerLibs.HtmlParser.HtmlElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Clone
    name: Clone
    nameWithType: HtmlElement.Clone
    fullName: InnerLibs.HtmlParser.HtmlElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: SideClone(Int32)
  nameWithType: HtmlElement.SideClone(Int32)
  fullName: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
    name: SideClone
    nameWithType: HtmlElement.SideClone
    fullName: InnerLibs.HtmlParser.HtmlElement.SideClone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.SideClone(System.Int32)
    name: SideClone
    nameWithType: HtmlElement.SideClone
    fullName: InnerLibs.HtmlParser.HtmlElement.SideClone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ChildElements
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ChildElements
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ChildElements
  nameWithType: HtmlElement.ChildElements
  fullName: InnerLibs.HtmlParser.HtmlElement.ChildElements
- uid: InnerLibs.HtmlParser.HtmlElement.ContentText
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ContentText
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ContentText
  nameWithType: HtmlElement.ContentText
  fullName: InnerLibs.HtmlParser.HtmlElement.ContentText
- uid: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  name: IsExplicitlyTerminated
  nameWithType: HtmlElement.IsExplicitlyTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsExplicitlyTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.IsTerminated
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsTerminated
  parent: InnerLibs.HtmlParser.HtmlElement
  name: IsTerminated
  nameWithType: HtmlElement.IsTerminated
  fullName: InnerLibs.HtmlParser.HtmlElement.IsTerminated
- uid: InnerLibs.HtmlParser.HtmlElement.Title
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Title
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Title
  nameWithType: HtmlElement.Title
  fullName: InnerLibs.HtmlParser.HtmlElement.Title
- uid: InnerLibs.HtmlParser.HtmlElement.Class
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Class
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Class
  nameWithType: HtmlElement.Class
  fullName: InnerLibs.HtmlParser.HtmlElement.Class
- uid: InnerLibs.HtmlParser.HtmlElement.Attributes
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Attributes
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Attributes
  nameWithType: HtmlElement.Attributes
  fullName: InnerLibs.HtmlParser.HtmlElement.Attributes
- uid: InnerLibs.HtmlParser.HtmlElement.AttributesNames
  commentId: P:InnerLibs.HtmlParser.HtmlElement.AttributesNames
  parent: InnerLibs.HtmlParser.HtmlElement
  name: AttributesNames
  nameWithType: HtmlElement.AttributesNames
  fullName: InnerLibs.HtmlParser.HtmlElement.AttributesNames
- uid: InnerLibs.HtmlParser.HtmlElement.Disabled
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Disabled
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Disabled
  nameWithType: HtmlElement.Disabled
  fullName: InnerLibs.HtmlParser.HtmlElement.Disabled
- uid: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ElementRepresentation
  nameWithType: HtmlElement.ElementRepresentation
  fullName: InnerLibs.HtmlParser.HtmlElement.ElementRepresentation
- uid: InnerLibs.HtmlParser.HtmlElement.HTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.HTML
  parent: InnerLibs.HtmlParser.HtmlElement
  name: HTML
  nameWithType: HtmlElement.HTML
  fullName: InnerLibs.HtmlParser.HtmlElement.HTML
- uid: InnerLibs.HtmlParser.HtmlElement.ID
  commentId: P:InnerLibs.HtmlParser.HtmlElement.ID
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ID
  nameWithType: HtmlElement.ID
  fullName: InnerLibs.HtmlParser.HtmlElement.ID
- uid: InnerLibs.HtmlParser.HtmlElement.InnerHTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.InnerHTML
  parent: InnerLibs.HtmlParser.HtmlElement
  name: InnerHTML
  nameWithType: HtmlElement.InnerHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerHTML
- uid: InnerLibs.HtmlParser.HtmlElement.InnerText
  commentId: P:InnerLibs.HtmlParser.HtmlElement.InnerText
  parent: InnerLibs.HtmlParser.HtmlElement
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: InnerLibs.HtmlParser.HtmlElement.InnerText
- uid: InnerLibs.HtmlParser.HtmlElement.IsVisible
  commentId: P:InnerLibs.HtmlParser.HtmlElement.IsVisible
  parent: InnerLibs.HtmlParser.HtmlElement
  name: IsVisible
  nameWithType: HtmlElement.IsVisible
  fullName: InnerLibs.HtmlParser.HtmlElement.IsVisible
- uid: InnerLibs.HtmlParser.HtmlElement.Nodes
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Nodes
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Nodes
  nameWithType: HtmlElement.Nodes
  fullName: InnerLibs.HtmlParser.HtmlElement.Nodes
- uid: InnerLibs.HtmlParser.HtmlElement.Style
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Style
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Style
  nameWithType: HtmlElement.Style
  fullName: InnerLibs.HtmlParser.HtmlElement.Style
- uid: InnerLibs.HtmlParser.HtmlElement.XHTML
  commentId: P:InnerLibs.HtmlParser.HtmlElement.XHTML
  parent: InnerLibs.HtmlParser.HtmlElement
  name: XHTML
  nameWithType: HtmlElement.XHTML
  fullName: InnerLibs.HtmlParser.HtmlElement.XHTML
- uid: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: QuerySelectorAll[String]
  nameWithType: HtmlElement.QuerySelectorAll[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll[System.String]
  nameWithType.vb: HtmlElement.QuerySelectorAll(String)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
  name.vb: QuerySelectorAll(String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
    name: QuerySelectorAll
    nameWithType: HtmlElement.QuerySelectorAll
    fullName: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll(System.String)
    name: QuerySelectorAll
    nameWithType: HtmlElement.QuerySelectorAll
    fullName: InnerLibs.HtmlParser.HtmlElement.QuerySelectorAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Data[String]
  nameWithType: HtmlElement.Data[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.Data[System.String]
  nameWithType.vb: HtmlElement.Data(String)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
  name.vb: Data(String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
    name: Data
    nameWithType: HtmlElement.Data
    fullName: InnerLibs.HtmlParser.HtmlElement.Data
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Data(System.String)
    name: Data
    nameWithType: HtmlElement.Data
    fullName: InnerLibs.HtmlParser.HtmlElement.Data
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Attribute[String]
  nameWithType: HtmlElement.Attribute[String]
  fullName: InnerLibs.HtmlParser.HtmlElement.Attribute[System.String]
  nameWithType.vb: HtmlElement.Attribute(String)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
  name.vb: Attribute(String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
    name: Attribute
    nameWithType: HtmlElement.Attribute
    fullName: InnerLibs.HtmlParser.HtmlElement.Attribute
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Attribute(System.String)
    name: Attribute
    nameWithType: HtmlElement.Attribute
    fullName: InnerLibs.HtmlParser.HtmlElement.Attribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: AddAttribute(String, String)
  nameWithType: HtmlElement.AddAttribute(String, String)
  fullName: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String, System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
    name: AddAttribute
    nameWithType: HtmlElement.AddAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.AddAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.AddAttribute(System.String,System.String)
    name: AddAttribute
    nameWithType: HtmlElement.AddAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.AddAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Censor(Char, String[])
  nameWithType: HtmlElement.Censor(Char, String[])
  fullName: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char, System.String[])
  nameWithType.vb: HtmlElement.Censor(Char, String())
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char, System.String())
  name.vb: Censor(Char, String())
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
    name: Censor
    nameWithType: HtmlElement.Censor
    fullName: InnerLibs.HtmlParser.HtmlElement.Censor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Censor(System.Char,System.String[])
    name: Censor
    nameWithType: HtmlElement.Censor
    fullName: InnerLibs.HtmlParser.HtmlElement.Censor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  commentId: M:InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
  parent: InnerLibs.HtmlParser.HtmlElement
  name: CreateWebFormControl<Type>()
  nameWithType: HtmlElement.CreateWebFormControl<Type>()
  fullName: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl<Type>()
  nameWithType.vb: HtmlElement.CreateWebFormControl(Of Type)()
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl(Of Type)()
  name.vb: CreateWebFormControl(Of Type)()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
    name: CreateWebFormControl<Type>
    nameWithType: HtmlElement.CreateWebFormControl<Type>
    fullName: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl``1
    name: CreateWebFormControl(Of Type)
    nameWithType: HtmlElement.CreateWebFormControl(Of Type)
    fullName: InnerLibs.HtmlParser.HtmlElement.CreateWebFormControl(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Destroy
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Destroy
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Destroy()
  nameWithType: HtmlElement.Destroy()
  fullName: InnerLibs.HtmlParser.HtmlElement.Destroy()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Destroy
    name: Destroy
    nameWithType: HtmlElement.Destroy
    fullName: InnerLibs.HtmlParser.HtmlElement.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Destroy
    name: Destroy
    nameWithType: HtmlElement.Destroy
    fullName: InnerLibs.HtmlParser.HtmlElement.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{{NodeType},System.Boolean},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  definition: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  name: FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  nameWithType: HtmlElement.FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.FindElements<NodeType>(System.Func<NodeType, System.Boolean>, System.Boolean)
  nameWithType.vb: HtmlElement.FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.FindElements(Of NodeType)(System.Func(Of NodeType, System.Boolean), System.Boolean)
  name.vb: FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
    name: FindElements<NodeType>
    nameWithType: HtmlElement.FindElements<NodeType>
    fullName: InnerLibs.HtmlParser.HtmlElement.FindElements<NodeType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
    name: FindElements(Of NodeType)
    nameWithType: HtmlElement.FindElements(Of NodeType)
    fullName: InnerLibs.HtmlParser.HtmlElement.FindElements(Of NodeType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.FixText
  commentId: M:InnerLibs.HtmlParser.HtmlElement.FixText
  parent: InnerLibs.HtmlParser.HtmlElement
  name: FixText()
  nameWithType: HtmlElement.FixText()
  fullName: InnerLibs.HtmlParser.HtmlElement.FixText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.FixText
    name: FixText
    nameWithType: HtmlElement.FixText
    fullName: InnerLibs.HtmlParser.HtmlElement.FixText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.FixText
    name: FixText
    nameWithType: HtmlElement.FixText
    fullName: InnerLibs.HtmlParser.HtmlElement.FixText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: GetTextElements(Boolean)
  nameWithType: HtmlElement.GetTextElements(Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
    name: GetTextElements
    nameWithType: HtmlElement.GetTextElements
    fullName: InnerLibs.HtmlParser.HtmlElement.GetTextElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.GetTextElements(System.Boolean)
    name: GetTextElements
    nameWithType: HtmlElement.GetTextElements
    fullName: InnerLibs.HtmlParser.HtmlElement.GetTextElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: HasAttribute(String)
  nameWithType: HtmlElement.HasAttribute(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
    name: HasAttribute
    nameWithType: HtmlElement.HasAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.HasAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.HasAttribute(System.String)
    name: HasAttribute
    nameWithType: HtmlElement.HasAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.HasAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: HasClass(String)
  nameWithType: HtmlElement.HasClass(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
    name: HasClass
    nameWithType: HtmlElement.HasClass
    fullName: InnerLibs.HtmlParser.HtmlElement.HasClass
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.HasClass(System.String)
    name: HasClass
    nameWithType: HtmlElement.HasClass
    fullName: InnerLibs.HtmlParser.HtmlElement.HasClass
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Mutate(HtmlNodeCollection)
  nameWithType: HtmlElement.Mutate(HtmlNodeCollection)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNodeCollection
    name: HtmlNodeCollection
    nameWithType: HtmlNodeCollection
    fullName: InnerLibs.HtmlParser.HtmlNodeCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlNodeCollection)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNodeCollection
    name: HtmlNodeCollection
    nameWithType: HtmlNodeCollection
    fullName: InnerLibs.HtmlParser.HtmlNodeCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Mutate(HtmlElement)
  nameWithType: HtmlElement.Mutate(HtmlElement)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(InnerLibs.HtmlParser.HtmlElement)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: Mutate(String)
  nameWithType: HtmlElement.Mutate(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.Mutate(System.String)
    name: Mutate
    nameWithType: HtmlElement.Mutate
    fullName: InnerLibs.HtmlParser.HtmlElement.Mutate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: ParseEmoji(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseEmoji(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func<System.String, System.String>, System.Boolean)
  nameWithType.vb: HtmlElement.ParseEmoji(Func(Of String, String), Boolean)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseEmoji(Func(Of String, String), Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
    name: ParseEmoji
    nameWithType: HtmlElement.ParseEmoji
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseEmoji
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseEmoji(System.Func{System.String,System.String},System.Boolean)
    name: ParseEmoji
    nameWithType: HtmlElement.ParseEmoji
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseEmoji
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: ParseHashTags(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseHashTags(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func<System.String, System.String>, System.Boolean)
  nameWithType.vb: HtmlElement.ParseHashTags(Func(Of String, String), Boolean)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseHashTags(Func(Of String, String), Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
    name: ParseHashTags
    nameWithType: HtmlElement.ParseHashTags
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseHashTags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseHashTags(System.Func{System.String,System.String},System.Boolean)
    name: ParseHashTags
    nameWithType: HtmlElement.ParseHashTags
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseHashTags
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: ParseOEmbed(Boolean)
  nameWithType: HtmlElement.ParseOEmbed(Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
    name: ParseOEmbed
    nameWithType: HtmlElement.ParseOEmbed
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed(System.Boolean)
    name: ParseOEmbed
    nameWithType: HtmlElement.ParseOEmbed
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseOEmbed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: ParseURL(Boolean, String)
  nameWithType: HtmlElement.ParseURL(Boolean, String)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean, System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
    name: ParseURL
    nameWithType: HtmlElement.ParseURL
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseURL
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseURL(System.Boolean,System.String)
    name: ParseURL
    nameWithType: HtmlElement.ParseURL
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseURL
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: ParseUsername(Func<String, String>, Boolean)
  nameWithType: HtmlElement.ParseUsername(Func<String, String>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func<System.String, System.String>, System.Boolean)
  nameWithType.vb: HtmlElement.ParseUsername(Func(Of String, String), Boolean)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func(Of System.String, System.String), System.Boolean)
  name.vb: ParseUsername(Func(Of String, String), Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
    name: ParseUsername
    nameWithType: HtmlElement.ParseUsername
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ParseUsername(System.Func{System.String,System.String},System.Boolean)
    name: ParseUsername
    nameWithType: HtmlElement.ParseUsername
    fullName: InnerLibs.HtmlParser.HtmlElement.ParseUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  parent: InnerLibs.HtmlParser.HtmlElement
  isExternal: true
  name: RemoveAttribute(String)
  nameWithType: HtmlElement.RemoveAttribute(String)
  fullName: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
    name: RemoveAttribute
    nameWithType: HtmlElement.RemoveAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute(System.String)
    name: RemoveAttribute
    nameWithType: HtmlElement.RemoveAttribute
    fullName: InnerLibs.HtmlParser.HtmlElement.RemoveAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ToString
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ToString
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ToString()
  nameWithType: HtmlElement.ToString()
  fullName: InnerLibs.HtmlParser.HtmlElement.ToString()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ToString
    name: ToString
    nameWithType: HtmlElement.ToString
    fullName: InnerLibs.HtmlParser.HtmlElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ToString
    name: ToString
    nameWithType: HtmlElement.ToString
    fullName: InnerLibs.HtmlParser.HtmlElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  commentId: M:InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  parent: InnerLibs.HtmlParser.HtmlElement
  name: ToXmlElement()
  nameWithType: HtmlElement.ToXmlElement()
  fullName: InnerLibs.HtmlParser.HtmlElement.ToXmlElement()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
    name: ToXmlElement
    nameWithType: HtmlElement.ToXmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
    name: ToXmlElement
    nameWithType: HtmlElement.ToXmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement.ToXmlElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.mParent
  commentId: F:InnerLibs.HtmlParser.HtmlNode.mParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: mParent
  nameWithType: HtmlNode.mParent
  fullName: InnerLibs.HtmlParser.HtmlNode.mParent
- uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
  commentId: M:InnerLibs.HtmlParser.HtmlNode.ToJSON
  parent: InnerLibs.HtmlParser.HtmlNode
  name: ToJSON()
  nameWithType: HtmlNode.ToJSON()
  fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
    name: ToJSON
    nameWithType: HtmlNode.ToJSON
    fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.ToJSON
    name: ToJSON
    nameWithType: HtmlNode.ToJSON
    fullName: InnerLibs.HtmlParser.HtmlNode.ToJSON
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  commentId: P:InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
  parent: InnerLibs.HtmlParser.HtmlNode
  name: JsonRepresentation
  nameWithType: HtmlNode.JsonRepresentation
  fullName: InnerLibs.HtmlParser.HtmlNode.JsonRepresentation
- uid: InnerLibs.HtmlParser.HtmlNode.Next
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Next
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Next
  nameWithType: HtmlNode.Next
  fullName: InnerLibs.HtmlParser.HtmlNode.Next
- uid: InnerLibs.HtmlParser.HtmlNode.FirstChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.FirstChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: FirstChild
  nameWithType: HtmlNode.FirstChild
  fullName: InnerLibs.HtmlParser.HtmlNode.FirstChild
- uid: InnerLibs.HtmlParser.HtmlNode.AsElement
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsElement
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsElement()
  nameWithType: HtmlNode.AsElement()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsElement()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement
    name: AsElement
    nameWithType: HtmlNode.AsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement
    name: AsElement
    nameWithType: HtmlNode.AsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsElement``1
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsElement<ElementType>()
  nameWithType: HtmlNode.AsElement<ElementType>()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsElement<ElementType>()
  nameWithType.vb: HtmlNode.AsElement(Of ElementType)()
  fullName.vb: InnerLibs.HtmlParser.HtmlNode.AsElement(Of ElementType)()
  name.vb: AsElement(Of ElementType)()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
    name: AsElement<ElementType>
    nameWithType: HtmlNode.AsElement<ElementType>
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement<ElementType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsElement``1
    name: AsElement(Of ElementType)
    nameWithType: HtmlNode.AsElement(Of ElementType)
    fullName: InnerLibs.HtmlParser.HtmlNode.AsElement(Of ElementType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.AsText
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AsText
  parent: InnerLibs.HtmlParser.HtmlNode
  name: AsText()
  nameWithType: HtmlNode.AsText()
  fullName: InnerLibs.HtmlParser.HtmlNode.AsText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsText
    name: AsText
    nameWithType: HtmlNode.AsText
    fullName: InnerLibs.HtmlParser.HtmlNode.AsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AsText
    name: AsText
    nameWithType: HtmlNode.AsText
    fullName: InnerLibs.HtmlParser.HtmlNode.AsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Index
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Index
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Index
  nameWithType: HtmlNode.Index
  fullName: InnerLibs.HtmlParser.HtmlNode.Index
- uid: InnerLibs.HtmlParser.HtmlNode.IsChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsChild
  nameWithType: HtmlNode.IsChild
  fullName: InnerLibs.HtmlParser.HtmlNode.IsChild
- uid: InnerLibs.HtmlParser.HtmlNode.IsParent
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsParent
  nameWithType: HtmlNode.IsParent
  fullName: InnerLibs.HtmlParser.HtmlNode.IsParent
- uid: InnerLibs.HtmlParser.HtmlNode.IsRoot
  commentId: P:InnerLibs.HtmlParser.HtmlNode.IsRoot
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsRoot
  nameWithType: HtmlNode.IsRoot
  fullName: InnerLibs.HtmlParser.HtmlNode.IsRoot
- uid: InnerLibs.HtmlParser.HtmlNode.LastChild
  commentId: P:InnerLibs.HtmlParser.HtmlNode.LastChild
  parent: InnerLibs.HtmlParser.HtmlNode
  name: LastChild
  nameWithType: HtmlNode.LastChild
  fullName: InnerLibs.HtmlParser.HtmlNode.LastChild
- uid: InnerLibs.HtmlParser.HtmlNode.Parent
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Parent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Parent
  nameWithType: HtmlNode.Parent
  fullName: InnerLibs.HtmlParser.HtmlNode.Parent
- uid: InnerLibs.HtmlParser.HtmlNode.Previous
  commentId: P:InnerLibs.HtmlParser.HtmlNode.Previous
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Previous
  nameWithType: HtmlNode.Previous
  fullName: InnerLibs.HtmlParser.HtmlNode.Previous
- uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: AppendTo(HtmlElement, Boolean)
  nameWithType: HtmlNode.AppendTo(HtmlElement, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
    name: AppendTo
    nameWithType: HtmlNode.AppendTo
    fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.AppendTo(InnerLibs.HtmlParser.HtmlElement,System.Boolean)
    name: AppendTo
    nameWithType: HtmlNode.AppendTo
    fullName: InnerLibs.HtmlParser.HtmlNode.AppendTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: Closest(String)
  nameWithType: HtmlNode.Closest(String)
  fullName: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
    name: Closest
    nameWithType: HtmlNode.Closest
    fullName: InnerLibs.HtmlParser.HtmlNode.Closest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Closest(System.String)
    name: Closest
    nameWithType: HtmlNode.Closest
    fullName: InnerLibs.HtmlParser.HtmlNode.Closest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: GetCommonAncestor(HtmlNode)
  nameWithType: HtmlNode.GetCommonAncestor(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
    name: GetCommonAncestor
    nameWithType: HtmlNode.GetCommonAncestor
    fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor(InnerLibs.HtmlParser.HtmlNode)
    name: GetCommonAncestor
    nameWithType: HtmlNode.GetCommonAncestor
    fullName: InnerLibs.HtmlParser.HtmlNode.GetCommonAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsAncestorOf(HtmlNode)
  nameWithType: HtmlNode.IsAncestorOf(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsAncestorOf
    nameWithType: HtmlNode.IsAncestorOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsAncestorOf
    nameWithType: HtmlNode.IsAncestorOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsAncestorOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsDescendentOf(HtmlNode)
  nameWithType: HtmlNode.IsDescendentOf(HtmlNode)
  fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsDescendentOf
    nameWithType: HtmlNode.IsDescendentOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf(InnerLibs.HtmlParser.HtmlNode)
    name: IsDescendentOf
    nameWithType: HtmlNode.IsDescendentOf
    fullName: InnerLibs.HtmlParser.HtmlNode.IsDescendentOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: InnerLibs.HtmlParser.HtmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsElement
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsElement
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsElement()
  nameWithType: HtmlNode.IsElement()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsElement()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement
    name: IsElement
    nameWithType: HtmlNode.IsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement
    name: IsElement
    nameWithType: HtmlNode.IsElement
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsElement``1
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsElement<HtmlElementType>()
  nameWithType: HtmlNode.IsElement<HtmlElementType>()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsElement<HtmlElementType>()
  nameWithType.vb: HtmlNode.IsElement(Of HtmlElementType)()
  fullName.vb: InnerLibs.HtmlParser.HtmlNode.IsElement(Of HtmlElementType)()
  name.vb: IsElement(Of HtmlElementType)()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
    name: IsElement<HtmlElementType>
    nameWithType: HtmlNode.IsElement<HtmlElementType>
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement<HtmlElementType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsElement``1
    name: IsElement(Of HtmlElementType)
    nameWithType: HtmlNode.IsElement(Of HtmlElementType)
    fullName: InnerLibs.HtmlParser.HtmlNode.IsElement(Of HtmlElementType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.IsText
  commentId: M:InnerLibs.HtmlParser.HtmlNode.IsText
  parent: InnerLibs.HtmlParser.HtmlNode
  name: IsText()
  nameWithType: HtmlNode.IsText()
  fullName: InnerLibs.HtmlParser.HtmlNode.IsText()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsText
    name: IsText
    nameWithType: HtmlNode.IsText
    fullName: InnerLibs.HtmlParser.HtmlNode.IsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.IsText
    name: IsText
    nameWithType: HtmlNode.IsText
    fullName: InnerLibs.HtmlParser.HtmlNode.IsText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
  parent: InnerLibs.HtmlParser.HtmlNode
  isExternal: true
  name: Move(HtmlElement, Int32)
  nameWithType: HtmlNode.Move(HtmlElement, Int32)
  fullName: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement, System.Int32)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
    name: Move
    nameWithType: HtmlNode.Move
    fullName: InnerLibs.HtmlParser.HtmlNode.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Move(InnerLibs.HtmlParser.HtmlElement,System.Int32)
    name: Move
    nameWithType: HtmlNode.Move
    fullName: InnerLibs.HtmlParser.HtmlNode.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlElement
    name: HtmlElement
    nameWithType: HtmlElement
    fullName: InnerLibs.HtmlParser.HtmlElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.Remove
  commentId: M:InnerLibs.HtmlParser.HtmlNode.Remove
  parent: InnerLibs.HtmlParser.HtmlNode
  name: Remove()
  nameWithType: HtmlNode.Remove()
  fullName: InnerLibs.HtmlParser.HtmlNode.Remove()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.Remove
    name: Remove
    nameWithType: HtmlNode.Remove
    fullName: InnerLibs.HtmlParser.HtmlNode.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.Remove
    name: Remove
    nameWithType: HtmlNode.Remove
    fullName: InnerLibs.HtmlParser.HtmlNode.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlNode.TopParent
  commentId: M:InnerLibs.HtmlParser.HtmlNode.TopParent
  parent: InnerLibs.HtmlParser.HtmlNode
  name: TopParent()
  nameWithType: HtmlNode.TopParent()
  fullName: InnerLibs.HtmlParser.HtmlNode.TopParent()
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlNode.TopParent
    name: TopParent
    nameWithType: HtmlNode.TopParent
    fullName: InnerLibs.HtmlParser.HtmlNode.TopParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlNode.TopParent
    name: TopParent
    nameWithType: HtmlNode.TopParent
    fullName: InnerLibs.HtmlParser.HtmlNode.TopParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.CreateDictionary
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary()
  nameWithType: ClassTools.CreateDictionary()
  fullName: InnerLibs.ClassTools.CreateDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary
    name: CreateDictionary
    nameWithType: ClassTools.CreateDictionary
    fullName: InnerLibs.ClassTools.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  name: GetProperties(BindingFlags)
  nameWithType: ClassTools.GetProperties(BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetProperties
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetProperties(System.Object)
  name: GetProperties()
  nameWithType: ClassTools.GetProperties()
  fullName: InnerLibs.ClassTools.GetProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  name: GetPropertyValue(String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  name: GetPropertyValue<Type>(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  name: GetPropertyValue(String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.HasProperty(System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  name: HasProperty(String)
  nameWithType: ClassTools.HasProperty(String)
  fullName: InnerLibs.ClassTools.HasProperty(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsArrayOf``1
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  name: IsArrayOf<T>()
  nameWithType: ClassTools.IsArrayOf<T>()
  fullName: InnerLibs.ClassTools.IsArrayOf<T>()
  nameWithType.vb: ClassTools.IsArrayOf(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)()
  name.vb: IsArrayOf(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsDictionary
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsDictionary(System.Object)
  name: IsDictionary()
  nameWithType: ClassTools.IsDictionary()
  fullName: InnerLibs.ClassTools.IsDictionary()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsIn(IEnumerable<HtmlBreakLine>, IEqualityComparer<HtmlBreakLine>)
  nameWithType: ClassTools.IsIn(IEnumerable<HtmlBreakLine>, IEqualityComparer<HtmlBreakLine>)
  fullName: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlBreakLine>, System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlBreakLine>)
  nameWithType.vb: ClassTools.IsIn(IEnumerable(Of HtmlBreakLine), IEqualityComparer(Of HtmlBreakLine))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlBreakLine), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlBreakLine))
  name.vb: IsIn(IEnumerable(Of HtmlBreakLine), IEqualityComparer(Of HtmlBreakLine))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn
    nameWithType: ClassTools.IsIn
    fullName: InnerLibs.ClassTools.IsIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  name: IsInAny(IEnumerable<HtmlBreakLine>[], IEqualityComparer<HtmlBreakLine>)
  nameWithType: ClassTools.IsInAny(IEnumerable<HtmlBreakLine>[], IEqualityComparer<HtmlBreakLine>)
  fullName: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlBreakLine>[], System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlBreakLine>)
  nameWithType.vb: ClassTools.IsInAny(IEnumerable(Of HtmlBreakLine)(), IEqualityComparer(Of HtmlBreakLine))
  fullName.vb: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlBreakLine)(), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlBreakLine))
  name.vb: IsInAny(IEnumerable(Of HtmlBreakLine)(), IEqualityComparer(Of HtmlBreakLine))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine}[],System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsInAny
    nameWithType: ClassTools.IsInAny
    fullName: InnerLibs.ClassTools.IsInAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsList
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsList(System.Object)
  name: IsList()
  nameWithType: ClassTools.IsList()
  fullName: InnerLibs.ClassTools.IsList()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsNotIn(IEnumerable<HtmlBreakLine>, IEqualityComparer<HtmlBreakLine>)
  nameWithType: ClassTools.IsNotIn(IEnumerable<HtmlBreakLine>, IEqualityComparer<HtmlBreakLine>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable<InnerLibs.HtmlParser.HtmlBreakLine>, System.Collections.Generic.IEqualityComparer<InnerLibs.HtmlParser.HtmlBreakLine>)
  nameWithType.vb: ClassTools.IsNotIn(IEnumerable(Of HtmlBreakLine), IEqualityComparer(Of HtmlBreakLine))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable(Of InnerLibs.HtmlParser.HtmlBreakLine), System.Collections.Generic.IEqualityComparer(Of InnerLibs.HtmlParser.HtmlBreakLine))
  name.vb: IsNotIn(IEnumerable(Of HtmlBreakLine), IEqualityComparer(Of HtmlBreakLine))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.Collections.Generic.IEnumerable{InnerLibs.HtmlParser.HtmlBreakLine},System.Collections.Generic.IEqualityComparer{InnerLibs.HtmlParser.HtmlBreakLine})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  name: IsNotIn(String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn(String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn(System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn
    nameWithType: ClassTools.IsNotIn
    fullName: InnerLibs.ClassTools.IsNotIn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.IsType``1
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.IsType``1(System.Object)
  name: IsType<T>()
  nameWithType: ClassTools.IsType<T>()
  fullName: InnerLibs.ClassTools.IsType<T>()
  nameWithType.vb: ClassTools.IsType(Of T)()
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)()
  name.vb: IsType(Of T)()
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce(HtmlBreakLine[])
  nameWithType: ClassTools.NullCoalesce(HtmlBreakLine[])
  fullName: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine[])
  nameWithType.vb: ClassTools.NullCoalesce(HtmlBreakLine())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine())
  name.vb: NullCoalesce(HtmlBreakLine())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce(InnerLibs.HtmlParser.HtmlBreakLine[])
    name: NullCoalesce
    nameWithType: ClassTools.NullCoalesce
    fullName: InnerLibs.ClassTools.NullCoalesce
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.ClassTools.NullifyProperties
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties()
  nameWithType: ClassTools.NullifyProperties()
  fullName: InnerLibs.ClassTools.NullifyProperties()
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties
    name: NullifyProperties
    nameWithType: ClassTools.NullifyProperties
    fullName: InnerLibs.ClassTools.NullifyProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValue``1(System.String,{Type})
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  name: SetPropertyValue<Type>(String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.String, Type)
  name.vb: SetPropertyValue(Of Type)(String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  name: SetPropertyValueFromCollection<Type>(String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.ClassTools.ToFlatString(System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  parent: InnerLibs.ClassTools
  definition: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  name: ToFlatString(String)
  nameWithType: ClassTools.ToFlatString(String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.DataManipulation.GetDbType
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  parent: InnerLibs.DataManipulation
  definition: InnerLibs.DataManipulation.GetDbType(System.Object)
  name: GetDbType()
  nameWithType: DataManipulation.GetDbType()
  fullName: InnerLibs.DataManipulation.GetDbType()
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Converter.DefineEmptyList
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList()
  nameWithType: Converter.DefineEmptyList()
  fullName: InnerLibs.Converter.DefineEmptyList()
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList
    name: DefineEmptyList
    nameWithType: Converter.DefineEmptyList
    fullName: InnerLibs.Converter.DefineEmptyList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Converter.ChangeType``1
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  parent: InnerLibs.Converter
  definition: InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType>()
  nameWithType: Converter.ChangeType<ToType>()
  fullName: InnerLibs.Converter.ChangeType<ToType>()
  nameWithType.vb: Converter.ChangeType(Of ToType)()
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType)()
  name.vb: ChangeType(Of ToType)()
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType<ToType>
    nameWithType: Converter.ChangeType<ToType>
    fullName: InnerLibs.Converter.ChangeType<ToType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``1
    name: ChangeType(Of ToType)
    nameWithType: Converter.ChangeType(Of ToType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.JsonViewer.CreateNode
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  parent: InnerLibs.JsonViewer
  definition: InnerLibs.JsonViewer.CreateNode(System.Object)
  name: CreateNode()
  nameWithType: JsonViewer.CreateNode()
  fullName: InnerLibs.JsonViewer.CreateNode()
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  parent: InnerLibs.Mathematic
  definition: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  name: IsBetween(Object, Object)
  nameWithType: Mathematic.IsBetween(Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween(System.Object,System.Object)
    name: IsBetween
    nameWithType: Mathematic.IsBetween
    fullName: InnerLibs.Mathematic.IsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Text.SerializeJSON(System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  parent: InnerLibs.Text
  definition: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  name: SerializeJSON(String)
  nameWithType: Text.SerializeJSON(String)
  fullName: InnerLibs.Text.SerializeJSON(System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNumber
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNumber(System.Object)
  name: IsNumber()
  nameWithType: Verify.IsNumber()
  fullName: InnerLibs.Verify.IsNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IsNotNumber
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IsNotNumber(System.Object)
  name: IsNotNumber()
  nameWithType: Verify.IsNotNumber()
  fullName: InnerLibs.Verify.IsNotNumber()
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.Verify.IfBlank``1({T})
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  name: IfBlank<T>(T)
  nameWithType: Verify.IfBlank<T>(T)
  fullName: InnerLibs.Verify.IfBlank<T>(T)
  nameWithType.vb: Verify.IfBlank(Of T)(T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(T)
  name.vb: IfBlank(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  name: NullIf(Func<HtmlBreakLine, Boolean>)
  nameWithType: Verify.NullIf(Func<HtmlBreakLine, Boolean>)
  fullName: InnerLibs.Verify.NullIf(System.Func<InnerLibs.HtmlParser.HtmlBreakLine, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Func(Of HtmlBreakLine, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(System.Func(Of InnerLibs.HtmlParser.HtmlBreakLine, System.Boolean))
  name.vb: NullIf(Func(Of HtmlBreakLine, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Boolean})
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlBreakLine)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  parent: InnerLibs.Verify
  definition: InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf(HtmlBreakLine)
  nameWithType: Verify.NullIf(HtmlBreakLine)
  fullName: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlBreakLine)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlBreakLine)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf(InnerLibs.HtmlParser.HtmlBreakLine)
    name: NullIf
    nameWithType: Verify.NullIf
    fullName: InnerLibs.Verify.NullIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  parent: InnerLibs.Web
  definition: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  name: CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax(String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax(System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax
    nameWithType: Web.CreateFromAjax
    fullName: InnerLibs.Web.CreateFromAjax
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,{TextType}},System.Func{InnerLibs.HtmlParser.HtmlBreakLine,{ValueType}})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  parent: InnerLibs.Web
  definition: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  name: AsListItem<TextType, ValueType>(Func<HtmlBreakLine, TextType>, Func<HtmlBreakLine, ValueType>)
  nameWithType: Web.AsListItem<TextType, ValueType>(Func<HtmlBreakLine, TextType>, Func<HtmlBreakLine, ValueType>)
  fullName: InnerLibs.Web.AsListItem<TextType, ValueType>(System.Func<InnerLibs.HtmlParser.HtmlBreakLine, TextType>, System.Func<InnerLibs.HtmlParser.HtmlBreakLine, ValueType>)
  nameWithType.vb: Web.AsListItem(Of TextType, ValueType)(Func(Of HtmlBreakLine, TextType), Func(Of HtmlBreakLine, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of TextType, ValueType)(System.Func(Of InnerLibs.HtmlParser.HtmlBreakLine, TextType), System.Func(Of InnerLibs.HtmlParser.HtmlBreakLine, ValueType))
  name.vb: AsListItem(Of TextType, ValueType)(Func(Of HtmlBreakLine, TextType), Func(Of HtmlBreakLine, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,``0},System.Func{InnerLibs.HtmlParser.HtmlBreakLine,``1})
    name: AsListItem<TextType, ValueType>
    nameWithType: Web.AsListItem<TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``2(System.Func{InnerLibs.HtmlParser.HtmlBreakLine,``0},System.Func{InnerLibs.HtmlParser.HtmlBreakLine,``1})
    name: AsListItem(Of TextType, ValueType)
    nameWithType: Web.AsListItem(Of TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.GetCastedValue
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.GetCastedValue(System.Object)
  name: GetCastedValue()
  nameWithType: WinForms.GetCastedValue()
  fullName: InnerLibs.WinForms.GetCastedValue()
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.InnerLibs.WinForms.CastValueForControl(System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  parent: InnerLibs.WinForms
  definition: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  name: CastValueForControl(Object)
  nameWithType: WinForms.CastValueForControl(Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  name: ApplyToControls(HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls(HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls(System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls
    nameWithType: LINQExtensions.ApplyToControls
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.HtmlParser.HtmlBreakLine.InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine,System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  parent: InnerLibs.LINQ.LINQExtensions
  definition: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  name: HasSamePropertyValues(HtmlBreakLine, Func<HtmlBreakLine, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues(HtmlBreakLine, Func<HtmlBreakLine, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine, System.Func<InnerLibs.HtmlParser.HtmlBreakLine, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(HtmlBreakLine, Func(Of HtmlBreakLine, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine, System.Func(Of InnerLibs.HtmlParser.HtmlBreakLine, System.Object)())
  name.vb: HasSamePropertyValues(HtmlBreakLine, Func(Of HtmlBreakLine, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine,System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(InnerLibs.HtmlParser.HtmlBreakLine,System.Func{InnerLibs.HtmlParser.HtmlBreakLine,System.Object}[])
    name: HasSamePropertyValues
    nameWithType: LINQExtensions.HasSamePropertyValues
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InnerLibs.HtmlParser.HtmlBreakLine
    name: HtmlBreakLine
    nameWithType: HtmlBreakLine
    fullName: InnerLibs.HtmlParser.HtmlBreakLine
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  commentId: M:InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
  isExternal: true
  name: FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  nameWithType: HtmlElement.FindElements<NodeType>(Func<NodeType, Boolean>, Boolean)
  fullName: InnerLibs.HtmlParser.HtmlElement.FindElements<NodeType>(System.Func<NodeType, System.Boolean>, System.Boolean)
  nameWithType.vb: HtmlElement.FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
  fullName.vb: InnerLibs.HtmlParser.HtmlElement.FindElements(Of NodeType)(System.Func(Of NodeType, System.Boolean), System.Boolean)
  name.vb: FindElements(Of NodeType)(Func(Of NodeType, Boolean), Boolean)
  spec.csharp:
  - uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
    name: FindElements<NodeType>
    nameWithType: HtmlElement.FindElements<NodeType>
    fullName: InnerLibs.HtmlParser.HtmlElement.FindElements<NodeType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.HtmlParser.HtmlElement.FindElements``1(System.Func{``0,System.Boolean},System.Boolean)
    name: FindElements(Of NodeType)
    nameWithType: HtmlElement.FindElements(Of NodeType)
    fullName: InnerLibs.HtmlParser.HtmlElement.FindElements(Of NodeType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: NodeType
    nameWithType: NodeType
    fullName: NodeType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
  commentId: M:InnerLibs.ClassTools.CreateDictionary``1(``0)
  name: CreateDictionary<Type>(Type)
  nameWithType: ClassTools.CreateDictionary<Type>(Type)
  fullName: InnerLibs.ClassTools.CreateDictionary<Type>(Type)
  nameWithType.vb: ClassTools.CreateDictionary(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.CreateDictionary(Of Type)(Type)
  name.vb: CreateDictionary(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary<Type>
    nameWithType: ClassTools.CreateDictionary<Type>
    fullName: InnerLibs.ClassTools.CreateDictionary<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.CreateDictionary``1(``0)
    name: CreateDictionary(Of Type)
    nameWithType: ClassTools.CreateDictionary(Of Type)
    fullName: InnerLibs.ClassTools.CreateDictionary(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools
  commentId: T:InnerLibs.ClassTools
  parent: InnerLibs
  name: ClassTools
  nameWithType: ClassTools
  fullName: InnerLibs.ClassTools
- uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
  isExternal: true
  name: GetProperties(Object, BindingFlags)
  nameWithType: ClassTools.GetProperties(Object, BindingFlags)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object, System.Reflection.BindingFlags)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object,System.Reflection.BindingFlags)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetProperties(System.Object)
  commentId: M:InnerLibs.ClassTools.GetProperties(System.Object)
  isExternal: true
  name: GetProperties(Object)
  nameWithType: ClassTools.GetProperties(Object)
  fullName: InnerLibs.ClassTools.GetProperties(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetProperties(System.Object)
    name: GetProperties
    nameWithType: ClassTools.GetProperties
    fullName: InnerLibs.ClassTools.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Type, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Type, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Type, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Type,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue<Type>(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue<Type>(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue<Type>(System.Object, System.String, System.Boolean)
  nameWithType.vb: ClassTools.GetPropertyValue(Of Type)(Object, String, Boolean)
  fullName.vb: InnerLibs.ClassTools.GetPropertyValue(Of Type)(System.Object, System.String, System.Boolean)
  name.vb: GetPropertyValue(Of Type)(Object, String, Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue<Type>
    nameWithType: ClassTools.GetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.GetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue``1(System.Object,System.String,System.Boolean)
    name: GetPropertyValue(Of Type)
    nameWithType: ClassTools.GetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.GetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  commentId: M:InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
  isExternal: true
  name: GetPropertyValue(Object, String, Boolean)
  nameWithType: ClassTools.GetPropertyValue(Object, String, Boolean)
  fullName: InnerLibs.ClassTools.GetPropertyValue(System.Object, System.String, System.Boolean)
  spec.csharp:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.GetPropertyValue(System.Object,System.String,System.Boolean)
    name: GetPropertyValue
    nameWithType: ClassTools.GetPropertyValue
    fullName: InnerLibs.ClassTools.GetPropertyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.HasProperty(System.Object,System.String)
  isExternal: true
  name: HasProperty(Object, String)
  nameWithType: ClassTools.HasProperty(Object, String)
  fullName: InnerLibs.ClassTools.HasProperty(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.HasProperty(System.Object,System.String)
    name: HasProperty
    nameWithType: ClassTools.HasProperty
    fullName: InnerLibs.ClassTools.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsArrayOf``1(System.Object)
  isExternal: true
  name: IsArrayOf<T>(Object)
  nameWithType: ClassTools.IsArrayOf<T>(Object)
  fullName: InnerLibs.ClassTools.IsArrayOf<T>(System.Object)
  nameWithType.vb: ClassTools.IsArrayOf(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsArrayOf(Of T)(System.Object)
  name.vb: IsArrayOf(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf<T>
    nameWithType: ClassTools.IsArrayOf<T>
    fullName: InnerLibs.ClassTools.IsArrayOf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsArrayOf``1(System.Object)
    name: IsArrayOf(Of T)
    nameWithType: ClassTools.IsArrayOf(Of T)
    fullName: InnerLibs.ClassTools.IsArrayOf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsDictionary(System.Object)
  commentId: M:InnerLibs.ClassTools.IsDictionary(System.Object)
  isExternal: true
  name: IsDictionary(Object)
  nameWithType: ClassTools.IsDictionary(Object)
  fullName: InnerLibs.ClassTools.IsDictionary(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsDictionary(System.Object)
    name: IsDictionary
    nameWithType: ClassTools.IsDictionary
    fullName: InnerLibs.ClassTools.IsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn<Type>
    nameWithType: ClassTools.IsIn<Type>
    fullName: InnerLibs.ClassTools.IsIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsIn(Of Type)
    nameWithType: ClassTools.IsIn(Of Type)
    fullName: InnerLibs.ClassTools.IsIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  nameWithType: ClassTools.IsInAny<Type>(Type, IEnumerable<Type>[], IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsInAny<Type>(Type, System.Collections.Generic.IEnumerable<Type>[], System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsInAny(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type)(), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsInAny(Of Type)(Type, IEnumerable(Of Type)(), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny<Type>
    nameWithType: ClassTools.IsInAny<Type>
    fullName: InnerLibs.ClassTools.IsInAny<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsInAny``1(``0,System.Collections.Generic.IEnumerable{``0}[],System.Collections.Generic.IEqualityComparer{``0})
    name: IsInAny(Of Type)
    nameWithType: ClassTools.IsInAny(Of Type)
    fullName: InnerLibs.ClassTools.IsInAny(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsList(System.Object)
  commentId: M:InnerLibs.ClassTools.IsList(System.Object)
  isExternal: true
  name: IsList(Object)
  nameWithType: ClassTools.IsList(Object)
  fullName: InnerLibs.ClassTools.IsList(System.Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsList(System.Object)
    name: IsList
    nameWithType: ClassTools.IsList
    fullName: InnerLibs.ClassTools.IsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, IEnumerable<Type>, IEqualityComparer<Type>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.Collections.Generic.IEnumerable<Type>, System.Collections.Generic.IEqualityComparer<Type>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.Collections.Generic.IEnumerable(Of Type), System.Collections.Generic.IEqualityComparer(Of Type))
  name.vb: IsNotIn(Of Type)(Type, IEnumerable(Of Type), IEqualityComparer(Of Type))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  commentId: M:InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
  isExternal: true
  name: IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  nameWithType: ClassTools.IsNotIn<Type>(Type, String, IEqualityComparer<Char>)
  fullName: InnerLibs.ClassTools.IsNotIn<Type>(Type, System.String, System.Collections.Generic.IEqualityComparer<System.Char>)
  nameWithType.vb: ClassTools.IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  fullName.vb: InnerLibs.ClassTools.IsNotIn(Of Type)(Type, System.String, System.Collections.Generic.IEqualityComparer(Of System.Char))
  name.vb: IsNotIn(Of Type)(Type, String, IEqualityComparer(Of Char))
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn<Type>
    nameWithType: ClassTools.IsNotIn<Type>
    fullName: InnerLibs.ClassTools.IsNotIn<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsNotIn``1(``0,System.String,System.Collections.Generic.IEqualityComparer{System.Char})
    name: IsNotIn(Of Type)
    nameWithType: ClassTools.IsNotIn(Of Type)
    fullName: InnerLibs.ClassTools.IsNotIn(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.IsType``1(System.Object)
  commentId: M:InnerLibs.ClassTools.IsType``1(System.Object)
  isExternal: true
  name: IsType<T>(Object)
  nameWithType: ClassTools.IsType<T>(Object)
  fullName: InnerLibs.ClassTools.IsType<T>(System.Object)
  nameWithType.vb: ClassTools.IsType(Of T)(Object)
  fullName.vb: InnerLibs.ClassTools.IsType(Of T)(System.Object)
  name.vb: IsType(Of T)(Object)
  spec.csharp:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType<T>
    nameWithType: ClassTools.IsType<T>
    fullName: InnerLibs.ClassTools.IsType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.IsType``1(System.Object)
    name: IsType(Of T)
    nameWithType: ClassTools.IsType(Of T)
    fullName: InnerLibs.ClassTools.IsType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  commentId: M:InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
  name: NullCoalesce<T>(T, T[])
  nameWithType: ClassTools.NullCoalesce<T>(T, T[])
  fullName: InnerLibs.ClassTools.NullCoalesce<T>(T, T[])
  nameWithType.vb: ClassTools.NullCoalesce(Of T)(T, T())
  fullName.vb: InnerLibs.ClassTools.NullCoalesce(Of T)(T, T())
  name.vb: NullCoalesce(Of T)(T, T())
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce<T>
    nameWithType: ClassTools.NullCoalesce<T>
    fullName: InnerLibs.ClassTools.NullCoalesce<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullCoalesce``1(``0,``0[])
    name: NullCoalesce(Of T)
    nameWithType: ClassTools.NullCoalesce(Of T)
    fullName: InnerLibs.ClassTools.NullCoalesce(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
  commentId: M:InnerLibs.ClassTools.NullifyProperties``1(``0)
  name: NullifyProperties<Type>(Type)
  nameWithType: ClassTools.NullifyProperties<Type>(Type)
  fullName: InnerLibs.ClassTools.NullifyProperties<Type>(Type)
  nameWithType.vb: ClassTools.NullifyProperties(Of Type)(Type)
  fullName.vb: InnerLibs.ClassTools.NullifyProperties(Of Type)(Type)
  name.vb: NullifyProperties(Of Type)(Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties<Type>
    nameWithType: ClassTools.NullifyProperties<Type>
    fullName: InnerLibs.ClassTools.NullifyProperties<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.NullifyProperties``1(``0)
    name: NullifyProperties(Of Type)
    nameWithType: ClassTools.NullifyProperties(Of Type)
    fullName: InnerLibs.ClassTools.NullifyProperties(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  commentId: M:InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
  isExternal: true
  name: SetPropertyValue<Type>(Object, String, Type)
  nameWithType: ClassTools.SetPropertyValue<Type>(Object, String, Type)
  fullName: InnerLibs.ClassTools.SetPropertyValue<Type>(System.Object, System.String, Type)
  nameWithType.vb: ClassTools.SetPropertyValue(Of Type)(Object, String, Type)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValue(Of Type)(System.Object, System.String, Type)
  name.vb: SetPropertyValue(Of Type)(Object, String, Type)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue<Type>
    nameWithType: ClassTools.SetPropertyValue<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValue<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValue``1(System.Object,System.String,``0)
    name: SetPropertyValue(Of Type)
    nameWithType: ClassTools.SetPropertyValue(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValue(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  commentId: M:InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
  isExternal: true
  name: SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  nameWithType: ClassTools.SetPropertyValueFromCollection<Type>(Object, String, CollectionBase)
  fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>(System.Object, System.String, System.Collections.CollectionBase)
  nameWithType.vb: ClassTools.SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  fullName.vb: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)(System.Object, System.String, System.Collections.CollectionBase)
  name.vb: SetPropertyValueFromCollection(Of Type)(Object, String, CollectionBase)
  spec.csharp:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection<Type>
    nameWithType: ClassTools.SetPropertyValueFromCollection<Type>
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection<Type>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.SetPropertyValueFromCollection``1(System.Object,System.String,System.Collections.CollectionBase)
    name: SetPropertyValueFromCollection(Of Type)
    nameWithType: ClassTools.SetPropertyValueFromCollection(Of Type)
    fullName: InnerLibs.ClassTools.SetPropertyValueFromCollection(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.CollectionBase
    name: CollectionBase
    nameWithType: CollectionBase
    fullName: System.Collections.CollectionBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  commentId: M:InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
  isExternal: true
  name: ToFlatString(Object, String)
  nameWithType: ClassTools.ToFlatString(Object, String)
  fullName: InnerLibs.ClassTools.ToFlatString(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.ClassTools.ToFlatString(System.Object,System.String)
    name: ToFlatString
    nameWithType: ClassTools.ToFlatString
    fullName: InnerLibs.ClassTools.ToFlatString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation.GetDbType(System.Object)
  commentId: M:InnerLibs.DataManipulation.GetDbType(System.Object)
  isExternal: true
  name: GetDbType(Object)
  nameWithType: DataManipulation.GetDbType(Object)
  fullName: InnerLibs.DataManipulation.GetDbType(System.Object)
  spec.csharp:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.DataManipulation.GetDbType(System.Object)
    name: GetDbType
    nameWithType: DataManipulation.GetDbType
    fullName: InnerLibs.DataManipulation.GetDbType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.DataManipulation
  commentId: T:InnerLibs.DataManipulation
  parent: InnerLibs
  name: DataManipulation
  nameWithType: DataManipulation
  fullName: InnerLibs.DataManipulation
- uid: InnerLibs.Converter.DefineEmptyList``1(``0)
  commentId: M:InnerLibs.Converter.DefineEmptyList``1(``0)
  name: DefineEmptyList<T>(T)
  nameWithType: Converter.DefineEmptyList<T>(T)
  fullName: InnerLibs.Converter.DefineEmptyList<T>(T)
  nameWithType.vb: Converter.DefineEmptyList(Of T)(T)
  fullName.vb: InnerLibs.Converter.DefineEmptyList(Of T)(T)
  name.vb: DefineEmptyList(Of T)(T)
  spec.csharp:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList<T>
    nameWithType: Converter.DefineEmptyList<T>
    fullName: InnerLibs.Converter.DefineEmptyList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.DefineEmptyList``1(``0)
    name: DefineEmptyList(Of T)
    nameWithType: Converter.DefineEmptyList(Of T)
    fullName: InnerLibs.Converter.DefineEmptyList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Converter
  commentId: T:InnerLibs.Converter
  parent: InnerLibs
  name: Converter
  nameWithType: Converter
  fullName: InnerLibs.Converter
- uid: InnerLibs.Converter.ChangeType``2(``1)
  commentId: M:InnerLibs.Converter.ChangeType``2(``1)
  name: ChangeType<ToType, FromType>(FromType)
  nameWithType: Converter.ChangeType<ToType, FromType>(FromType)
  fullName: InnerLibs.Converter.ChangeType<ToType, FromType>(FromType)
  nameWithType.vb: Converter.ChangeType(Of ToType, FromType)(FromType)
  fullName.vb: InnerLibs.Converter.ChangeType(Of ToType, FromType)(FromType)
  name.vb: ChangeType(Of ToType, FromType)(FromType)
  spec.csharp:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType<ToType, FromType>
    nameWithType: Converter.ChangeType<ToType, FromType>
    fullName: InnerLibs.Converter.ChangeType<ToType, FromType>
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Converter.ChangeType``2(``1)
    name: ChangeType(Of ToType, FromType)
    nameWithType: Converter.ChangeType(Of ToType, FromType)
    fullName: InnerLibs.Converter.ChangeType(Of ToType, FromType)
  - name: (
    nameWithType: (
    fullName: (
  - name: FromType
    nameWithType: FromType
    fullName: FromType
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer.CreateNode(System.Object)
  commentId: M:InnerLibs.JsonViewer.CreateNode(System.Object)
  isExternal: true
  name: CreateNode(Object)
  nameWithType: JsonViewer.CreateNode(Object)
  fullName: InnerLibs.JsonViewer.CreateNode(System.Object)
  spec.csharp:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.JsonViewer.CreateNode(System.Object)
    name: CreateNode
    nameWithType: JsonViewer.CreateNode
    fullName: InnerLibs.JsonViewer.CreateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.JsonViewer
  commentId: T:InnerLibs.JsonViewer
  parent: InnerLibs
  name: JsonViewer
  nameWithType: JsonViewer
  fullName: InnerLibs.JsonViewer
- uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  commentId: M:InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
  isExternal: true
  name: IsBetween<Type>(Type, Object, Object)
  nameWithType: Mathematic.IsBetween<Type>(Type, Object, Object)
  fullName: InnerLibs.Mathematic.IsBetween<Type>(Type, System.Object, System.Object)
  nameWithType.vb: Mathematic.IsBetween(Of Type)(Type, Object, Object)
  fullName.vb: InnerLibs.Mathematic.IsBetween(Of Type)(Type, System.Object, System.Object)
  name.vb: IsBetween(Of Type)(Type, Object, Object)
  spec.csharp:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween<Type>
    nameWithType: Mathematic.IsBetween<Type>
    fullName: InnerLibs.Mathematic.IsBetween<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Mathematic.IsBetween``1(``0,System.Object,System.Object)
    name: IsBetween(Of Type)
    nameWithType: Mathematic.IsBetween(Of Type)
    fullName: InnerLibs.Mathematic.IsBetween(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Mathematic
  commentId: T:InnerLibs.Mathematic
  parent: InnerLibs
  name: Mathematic
  nameWithType: Mathematic
  fullName: InnerLibs.Mathematic
- uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
  commentId: M:InnerLibs.Text.SerializeJSON(System.Object,System.String)
  isExternal: true
  name: SerializeJSON(Object, String)
  nameWithType: Text.SerializeJSON(Object, String)
  fullName: InnerLibs.Text.SerializeJSON(System.Object, System.String)
  spec.csharp:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Text.SerializeJSON(System.Object,System.String)
    name: SerializeJSON
    nameWithType: Text.SerializeJSON
    fullName: InnerLibs.Text.SerializeJSON
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Text
  commentId: T:InnerLibs.Text
  parent: InnerLibs
  name: Text
  nameWithType: Text
  fullName: InnerLibs.Text
- uid: InnerLibs.Verify.IsNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNumber(System.Object)
  isExternal: true
  name: IsNumber(Object)
  nameWithType: Verify.IsNumber(Object)
  fullName: InnerLibs.Verify.IsNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNumber(System.Object)
    name: IsNumber
    nameWithType: Verify.IsNumber
    fullName: InnerLibs.Verify.IsNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify
  commentId: T:InnerLibs.Verify
  parent: InnerLibs
  name: Verify
  nameWithType: Verify
  fullName: InnerLibs.Verify
- uid: InnerLibs.Verify.IsNotNumber(System.Object)
  commentId: M:InnerLibs.Verify.IsNotNumber(System.Object)
  isExternal: true
  name: IsNotNumber(Object)
  nameWithType: Verify.IsNotNumber(Object)
  fullName: InnerLibs.Verify.IsNotNumber(System.Object)
  spec.csharp:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IsNotNumber(System.Object)
    name: IsNotNumber
    nameWithType: Verify.IsNotNumber
    fullName: InnerLibs.Verify.IsNotNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
  commentId: M:InnerLibs.Verify.IfBlank``1(System.Object,``0)
  isExternal: true
  name: IfBlank<T>(Object, T)
  nameWithType: Verify.IfBlank<T>(Object, T)
  fullName: InnerLibs.Verify.IfBlank<T>(System.Object, T)
  nameWithType.vb: Verify.IfBlank(Of T)(Object, T)
  fullName.vb: InnerLibs.Verify.IfBlank(Of T)(System.Object, T)
  name.vb: IfBlank(Of T)(Object, T)
  spec.csharp:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank<T>
    nameWithType: Verify.IfBlank<T>
    fullName: InnerLibs.Verify.IfBlank<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.IfBlank``1(System.Object,``0)
    name: IfBlank(Of T)
    nameWithType: Verify.IfBlank(Of T)
    fullName: InnerLibs.Verify.IfBlank(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  commentId: M:InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
  isExternal: true
  name: NullIf<T>(T, Func<T, Boolean>)
  nameWithType: Verify.NullIf<T>(T, Func<T, Boolean>)
  fullName: InnerLibs.Verify.NullIf<T>(T, System.Func<T, System.Boolean>)
  nameWithType.vb: Verify.NullIf(Of T)(T, Func(Of T, Boolean))
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, System.Func(Of T, System.Boolean))
  name.vb: NullIf(Of T)(T, Func(Of T, Boolean))
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,System.Func{``0,System.Boolean})
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Verify.NullIf``1(``0,``0)
  commentId: M:InnerLibs.Verify.NullIf``1(``0,``0)
  name: NullIf<T>(T, T)
  nameWithType: Verify.NullIf<T>(T, T)
  fullName: InnerLibs.Verify.NullIf<T>(T, T)
  nameWithType.vb: Verify.NullIf(Of T)(T, T)
  fullName.vb: InnerLibs.Verify.NullIf(Of T)(T, T)
  name.vb: NullIf(Of T)(T, T)
  spec.csharp:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf<T>
    nameWithType: Verify.NullIf<T>
    fullName: InnerLibs.Verify.NullIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Verify.NullIf``1(``0,``0)
    name: NullIf(Of T)
    nameWithType: Verify.NullIf(Of T)
    fullName: InnerLibs.Verify.NullIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  commentId: M:InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
  isExternal: true
  name: CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  nameWithType: Web.CreateFromAjax<Type>(Type, String, String, NameValueCollection, String, Encoding)
  fullName: InnerLibs.Web.CreateFromAjax<Type>(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  nameWithType.vb: Web.CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  fullName.vb: InnerLibs.Web.CreateFromAjax(Of Type)(Type, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.String, System.Text.Encoding)
  name.vb: CreateFromAjax(Of Type)(Type, String, String, NameValueCollection, String, Encoding)
  spec.csharp:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax<Type>
    nameWithType: Web.CreateFromAjax<Type>
    fullName: InnerLibs.Web.CreateFromAjax<Type>
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.CreateFromAjax``1(``0@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding)
    name: CreateFromAjax(Of Type)
    nameWithType: Web.CreateFromAjax(Of Type)
    fullName: InnerLibs.Web.CreateFromAjax(Of Type)
  - name: (
    nameWithType: (
    fullName: (
  - name: Type
    nameWithType: Type
    fullName: Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NameValueCollection
    name: NameValueCollection
    nameWithType: NameValueCollection
    fullName: System.Collections.Specialized.NameValueCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.Web
  commentId: T:InnerLibs.Web
  parent: InnerLibs
  name: Web
  nameWithType: Web
  fullName: InnerLibs.Web
- uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  nameWithType: Web.AsListItem<T, TextType, ValueType>(T, Func<T, TextType>, Func<T, ValueType>)
  fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>(T, System.Func<T, TextType>, System.Func<T, ValueType>)
  nameWithType.vb: Web.AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  fullName.vb: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)(T, System.Func(Of T, TextType), System.Func(Of T, ValueType))
  name.vb: AsListItem(Of T, TextType, ValueType)(T, Func(Of T, TextType), Func(Of T, ValueType))
  spec.csharp:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem<T, TextType, ValueType>
    nameWithType: Web.AsListItem<T, TextType, ValueType>
    fullName: InnerLibs.Web.AsListItem<T, TextType, ValueType>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.Web.AsListItem``3(``0,System.Func{``0,``1},System.Func{``0,``2})
    name: AsListItem(Of T, TextType, ValueType)
    nameWithType: Web.AsListItem(Of T, TextType, ValueType)
    fullName: InnerLibs.Web.AsListItem(Of T, TextType, ValueType)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TextType
    nameWithType: TextType
    fullName: TextType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ValueType
    nameWithType: ValueType
    fullName: ValueType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms.GetCastedValue(System.Object)
  commentId: M:InnerLibs.WinForms.GetCastedValue(System.Object)
  isExternal: true
  name: GetCastedValue(Object)
  nameWithType: WinForms.GetCastedValue(Object)
  fullName: InnerLibs.WinForms.GetCastedValue(System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.GetCastedValue(System.Object)
    name: GetCastedValue
    nameWithType: WinForms.GetCastedValue
    fullName: InnerLibs.WinForms.GetCastedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.WinForms
  commentId: T:InnerLibs.WinForms
  parent: InnerLibs
  name: WinForms
  nameWithType: WinForms
  fullName: InnerLibs.WinForms
- uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  commentId: M:InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
  isExternal: true
  name: CastValueForControl(Object, Object)
  nameWithType: WinForms.CastValueForControl(Object, Object)
  fullName: InnerLibs.WinForms.CastValueForControl(System.Object, System.Object)
  spec.csharp:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.WinForms.CastValueForControl(System.Object@,System.Object)
    name: CastValueForControl
    nameWithType: WinForms.CastValueForControl
    fullName: InnerLibs.WinForms.CastValueForControl
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
  isExternal: true
  name: ApplyToControls<T>(T, HtmlControl[])
  nameWithType: LINQExtensions.ApplyToControls<T>(T, HtmlControl[])
  fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>(T, System.Web.UI.HtmlControls.HtmlControl[])
  nameWithType.vb: LINQExtensions.ApplyToControls(Of T)(T, HtmlControl())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)(T, System.Web.UI.HtmlControls.HtmlControl())
  name.vb: ApplyToControls(Of T)(T, HtmlControl())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls<T>
    nameWithType: LINQExtensions.ApplyToControls<T>
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.ApplyToControls``1(``0,System.Web.UI.HtmlControls.HtmlControl[])
    name: ApplyToControls(Of T)
    nameWithType: LINQExtensions.ApplyToControls(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.ApplyToControls(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Web.UI.HtmlControls.HtmlControl
    name: HtmlControl
    nameWithType: HtmlControl
    fullName: System.Web.UI.HtmlControls.HtmlControl
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs.LINQ.LINQExtensions
  commentId: T:InnerLibs.LINQ.LINQExtensions
  parent: InnerLibs.LINQ
  name: LINQExtensions
  nameWithType: LINQExtensions
  fullName: InnerLibs.LINQ.LINQExtensions
- uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  commentId: M:InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
  isExternal: true
  name: HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  nameWithType: LINQExtensions.HasSamePropertyValues<T>(T, T, Func<T, Object>[])
  fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>(T, T, System.Func<T, System.Object>[])
  nameWithType.vb: LINQExtensions.HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  fullName.vb: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)(T, T, System.Func(Of T, System.Object)())
  name.vb: HasSamePropertyValues(Of T)(T, T, Func(Of T, Object)())
  spec.csharp:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues<T>
    nameWithType: LINQExtensions.HasSamePropertyValues<T>
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues``1(``0,``0,System.Func{``0,System.Object}[])
    name: HasSamePropertyValues(Of T)
    nameWithType: LINQExtensions.HasSamePropertyValues(Of T)
    fullName: InnerLibs.LINQ.LINQExtensions.HasSamePropertyValues(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: InnerLibs
  commentId: N:InnerLibs
  name: InnerLibs
  nameWithType: InnerLibs
  fullName: InnerLibs
- uid: InnerLibs.LINQ
  commentId: N:InnerLibs.LINQ
  name: InnerLibs.LINQ
  nameWithType: InnerLibs.LINQ
  fullName: InnerLibs.LINQ
- uid: InnerLibs.HtmlParser.HtmlBreakLine.#ctor*
  commentId: Overload:InnerLibs.HtmlParser.HtmlBreakLine.#ctor
  name: HtmlBreakLine
  nameWithType: HtmlBreakLine.HtmlBreakLine
  fullName: InnerLibs.HtmlParser.HtmlBreakLine.HtmlBreakLine
- uid: InnerLibs.HtmlParser.HtmlElement.Name
  commentId: P:InnerLibs.HtmlParser.HtmlElement.Name
  parent: InnerLibs.HtmlParser.HtmlElement
  name: Name
  nameWithType: HtmlElement.Name
  fullName: InnerLibs.HtmlParser.HtmlElement.Name
- uid: InnerLibs.HtmlParser.HtmlBreakLine.Name*
  commentId: Overload:InnerLibs.HtmlParser.HtmlBreakLine.Name
  name: Name
  nameWithType: HtmlBreakLine.Name
  fullName: InnerLibs.HtmlParser.HtmlBreakLine.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
